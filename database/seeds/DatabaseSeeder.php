<?php

use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder {

    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run() {
        // $this->call(UsersTableSeeder::class);
        
        // CategorieArticle
        // SELECT concat("DB::table('CategorieArticle')->insert(['nomCategorieArticle' => '",nomFr,"']);") FROM `categorie` order by nomFr;
        DB::table('CategorieArticle')->insert(['nomCategorieArticle' => 'Action en 2012']);
        DB::table('CategorieArticle')->insert(['nomCategorieArticle' => 'Edition 2011 (Presse)']);
        DB::table('CategorieArticle')->insert(['nomCategorieArticle' => 'Edition 2013 (Presse)']);
        DB::table('CategorieArticle')->insert(['nomCategorieArticle' => 'Edition 2015 (Presse)']);
        DB::table('CategorieArticle')->insert(['nomCategorieArticle' => 'Evenement 2015']);
        DB::table('CategorieArticle')->insert(['nomCategorieArticle' => 'News']);
        
        // Langue
        DB::table('Langue')->insert(['initialLangue' => 'fr', 'actifLangue' => 0]);
        DB::table('Langue')->insert(['initialLangue' => 'en', 'actifLangue' => 0]);
        
        // GenreFilm
        $id = DB::table('GenreFilm')->insertGetId([]);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'fr', 'nomGenreFilm' => 'annimation']);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'en', 'nomGenreFilm' => 'animation']);
        
        $id = DB::table('GenreFilm')->insertGetId([]);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'fr', 'nomGenreFilm' => 'chorégraphique']);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'en', 'nomGenreFilm' => 'choreographic']);
        
        $id = DB::table('GenreFilm')->insertGetId([]);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'fr', 'nomGenreFilm' => 'clip']);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'en', 'nomGenreFilm' => 'clip']);
        
        $id = DB::table('GenreFilm')->insertGetId([]);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'fr', 'nomGenreFilm' => 'clip de sensibilisation']);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'en', 'nomGenreFilm' => 'awareness clip']);
        
        $id = DB::table('GenreFilm')->insertGetId([]);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'fr', 'nomGenreFilm' => 'comédie']);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'en', 'nomGenreFilm' => 'comedy']);
        
        $id = DB::table('GenreFilm')->insertGetId([]);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'fr', 'nomGenreFilm' => 'documentaire']);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'en', 'nomGenreFilm' => 'documentary']);
        
        $id = DB::table('GenreFilm')->insertGetId([]);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'fr', 'nomGenreFilm' => 'fiction']);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'en', 'nomGenreFilm' => 'fiction']);
        
        $id = DB::table('GenreFilm')->insertGetId([]);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'fr', 'nomGenreFilm' => 'musical']);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'en', 'nomGenreFilm' => 'musical']);
        
        $id = DB::table('GenreFilm')->insertGetId([]);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'fr', 'nomGenreFilm' => 'poème/poétique']);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'en', 'nomGenreFilm' => 'poem/poetic']);
        
        $id = DB::table('GenreFilm')->insertGetId([]);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'fr', 'nomGenreFilm' => 'communication']);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'en', 'nomGenreFilm' => 'communication']);
        
        $id = DB::table('GenreFilm')->insertGetId([]);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'fr', 'nomGenreFilm' => 'publicité']);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'en', 'nomGenreFilm' => 'publicity']);
        
        $id = DB::table('GenreFilm')->insertGetId([]);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'fr', 'nomGenreFilm' => 'conférence \'Stand Up\'']);
        DB::table('GenreFilmTraduction')->insert(['idGenreFilm' => $id, 'initialLangue' => 'en', 'nomGenreFilm' => 'conference \'Stand Up\'']);
        
        // Metrage
        DB::table('Metrage')->insert(['initialMetrage' => 'CM']);
        DB::table('MetrageTraduction')->insert(['initialMetrage' => 'CM', 'initialLangue' => 'fr', 'nomMetrage' => 'court-metrage']);
        DB::table('MetrageTraduction')->insert(['initialMetrage' => 'CM', 'initialLangue' => 'en', 'nomMetrage' => 'short lenght movie']);
        
        DB::table('Metrage')->insert(['initialMetrage' => 'MM']);
        DB::table('MetrageTraduction')->insert(['initialMetrage' => 'MM', 'initialLangue' => 'fr', 'nomMetrage' => 'moyen-metrage']);
        DB::table('MetrageTraduction')->insert(['initialMetrage' => 'MM', 'initialLangue' => 'en', 'nomMetrage' => 'middle lenght movie']);
        
        DB::table('Metrage')->insert(['initialMetrage' => 'LM']);
        DB::table('MetrageTraduction')->insert(['initialMetrage' => 'LM', 'initialLangue' => 'fr', 'nomMetrage' => 'long-metrage']);
        DB::table('MetrageTraduction')->insert(['initialMetrage' => 'LM', 'initialLangue' => 'en', 'nomMetrage' => 'long lenght movie']);
        
        DB::table('Metrage')->insert(['initialMetrage' => 'Clip']);
        DB::table('MetrageTraduction')->insert(['initialMetrage' => 'Clip', 'initialLangue' => 'fr', 'nomMetrage' => 'Clip']);
        DB::table('MetrageTraduction')->insert(['initialMetrage' => 'Clip', 'initialLangue' => 'en', 'nomMetrage' => 'Clip']);
        
        // Page
        // TODO
        
        // Pays
        DB::table('Pays')->insert(['initialPays' => 'AU']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'AU', 'initialLangue' => 'fr', 'nomPays' => 'Australie']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'AU', 'initialLangue' => 'en', 'nomPays' => 'Australia']);

        DB::table('Pays')->insert(['initialPays' => 'BE']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'BE', 'initialLangue' => 'fr', 'nomPays' => 'Belgique']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'BE', 'initialLangue' => 'en', 'nomPays' => 'Belgium']);

        DB::table('Pays')->insert(['initialPays' => 'CA']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'CA', 'initialLangue' => 'fr', 'nomPays' => 'Canada']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'CA', 'initialLangue' => 'en', 'nomPays' => 'Canada']);

        DB::table('Pays')->insert(['initialPays' => 'DK']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'DK', 'initialLangue' => 'fr', 'nomPays' => 'Danemark']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'DK', 'initialLangue' => 'en', 'nomPays' => 'Denmark']);

        DB::table('Pays')->insert(['initialPays' => 'FI']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'FI', 'initialLangue' => 'fr', 'nomPays' => 'Finlande']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'FI', 'initialLangue' => 'en', 'nomPays' => 'Finland']);

        DB::table('Pays')->insert(['initialPays' => 'FR']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'FR', 'initialLangue' => 'fr', 'nomPays' => 'France']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'FR', 'initialLangue' => 'en', 'nomPays' => 'France']);

        DB::table('Pays')->insert(['initialPays' => 'DE']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'DE', 'initialLangue' => 'fr', 'nomPays' => 'Allemagne']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'DE', 'initialLangue' => 'en', 'nomPays' => 'Germany']);

        DB::table('Pays')->insert(['initialPays' => 'IR']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'IR', 'initialLangue' => 'fr', 'nomPays' => 'Iran']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'IR', 'initialLangue' => 'en', 'nomPays' => 'Iran']);

        DB::table('Pays')->insert(['initialPays' => 'IL']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'IL', 'initialLangue' => 'fr', 'nomPays' => 'Israël']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'IL', 'initialLangue' => 'en', 'nomPays' => 'Israel']);

        DB::table('Pays')->insert(['initialPays' => 'IT']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'IT', 'initialLangue' => 'fr', 'nomPays' => 'Italie']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'IT', 'initialLangue' => 'en', 'nomPays' => 'Italy']);

        DB::table('Pays')->insert(['initialPays' => 'KR']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'KR', 'initialLangue' => 'fr', 'nomPays' => 'Corée du Sud']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'KR', 'initialLangue' => 'en', 'nomPays' => 'South Korea']);

        DB::table('Pays')->insert(['initialPays' => 'MZ']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'MZ', 'initialLangue' => 'fr', 'nomPays' => 'Mozambique']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'MZ', 'initialLangue' => 'en', 'nomPays' => 'Mozambique']);

        DB::table('Pays')->insert(['initialPays' => 'NL']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'NL', 'initialLangue' => 'fr', 'nomPays' => 'Pays-Bas']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'NL', 'initialLangue' => 'en', 'nomPays' => 'Netherlands']);

        DB::table('Pays')->insert(['initialPays' => 'NO']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'NO', 'initialLangue' => 'fr', 'nomPays' => 'Norvège']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'NO', 'initialLangue' => 'en', 'nomPays' => 'Norway']);

        DB::table('Pays')->insert(['initialPays' => 'PH']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'PH', 'initialLangue' => 'fr', 'nomPays' => 'Philippines']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'PH', 'initialLangue' => 'en', 'nomPays' => 'Philippines']);

        DB::table('Pays')->insert(['initialPays' => 'PL']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'PL', 'initialLangue' => 'fr', 'nomPays' => 'Pologne']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'PL', 'initialLangue' => 'en', 'nomPays' => 'Poland']);

        DB::table('Pays')->insert(['initialPays' => 'PT']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'PT', 'initialLangue' => 'fr', 'nomPays' => 'Portugal']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'PT', 'initialLangue' => 'en', 'nomPays' => 'Portugal']);

        DB::table('Pays')->insert(['initialPays' => 'SK']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'SK', 'initialLangue' => 'fr', 'nomPays' => 'Slovaquie']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'SK', 'initialLangue' => 'en', 'nomPays' => 'Slovakia']);

        DB::table('Pays')->insert(['initialPays' => 'ES']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'ES', 'initialLangue' => 'fr', 'nomPays' => 'Espagne']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'ES', 'initialLangue' => 'en', 'nomPays' => 'Spain']);

        DB::table('Pays')->insert(['initialPays' => 'CH']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'CH', 'initialLangue' => 'fr', 'nomPays' => 'Suisse']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'CH', 'initialLangue' => 'en', 'nomPays' => 'Switzerland']);

        DB::table('Pays')->insert(['initialPays' => 'GB']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'GB', 'initialLangue' => 'fr', 'nomPays' => 'Royaume-Uni']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'GB', 'initialLangue' => 'en', 'nomPays' => 'United Kingdom']);

        DB::table('Pays')->insert(['initialPays' => 'US']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'US', 'initialLangue' => 'fr', 'nomPays' => 'États-Unis']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'US', 'initialLangue' => 'en', 'nomPays' => 'United States']);
        
        DB::table('Pays')->insert(['initialPays' => 'WW']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'WW', 'initialLangue' => 'fr', 'nomPays' => 'Monde']);
        DB::table('PaysTraduction')->insert(['initialPays' => 'WW', 'initialLangue' => 'en', 'nomPays' => 'World']);


        // realisateur
        /*
            SELECT 

            concat(
            "
            $id = DB::table('Realisateur')
                ->insertGetId([
                    'nomRealisateur' => '",`realisateur`.`nom`,"', 
                    'urlImageRealisateur' => '",`image`.`url`,"']);

            DB::table('RealisateurTraduction')
                ->insert([
                    'presentationRealisateur' => '",REPLACE(REPLACE(`realisateur`.`presentationFr`, '’', '\''), '\'', '\\\''),"', 
                    'initialLangue' => 'fr', 
                    'idRealisateur'=> $id]
                );

            DB::table('RealisateurTraduction')
                ->insert([
                    'presentationRealisateur' => '",REPLACE(REPLACE(`realisateur`.`presentationEn`, '’', '\''), '\'', '\\\''),"', 
                    'initialLangue' => 'en', 
                    'idRealisateur'=> $id]
                );

            ")

            FROM `realisateur`,`image`
            where `realisateur`.`image_id` = `image`.`id`
         */
        $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Alexandra Codina', 
                   'urlImageRealisateur' => 'realisateurs/AlexandraCodina_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>L&#39;exp&eacute;rience cin&eacute;matographique d&#39;Alexandra Codina a d&eacute;but&eacute; il y a neuf ans dans la production ind&eacute;pendante, comme assistante de production ou assistante &agrave; la r&eacute;alisation. Elle a &eacute;galement travaill&eacute; quatre ans au Festival du cin&eacute;ma International de Miami comme Directeur de Travail social de proximit&eacute; et Programmeur. &laquo; Monica et David &raquo; marque ses d&eacute;buts en tant que r&eacute;alisatrice. Avec ce film, elle a &eacute;t&eacute; nomin&eacute;e comme &eacute;tant un des &laquo; 10 regards de Cin&eacute;astes en 2009 &raquo;, par &laquo; The Ind&eacute;pendant &raquo;. Il y a 14 ans, elle a commenc&eacute; &agrave; travailler avec des adultes porteurs du Syndrome de Down sur un programme social pour des adultes handicap&eacute;s avec sa cousine Monica.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>After her History studies at Amsterdam University, Catherine Van Campen started to work as producer at the Dutch public radio and learn her passion for &lsquo; dramatic radio shows&rsquo; rewarded her with several international awards. Her most recent documentaries &ldquo;Eternal Mash&rdquo; (2007) et &ldquo;Drona &amp; Me&rdquo; (2009) were also rewarded at festivals. &ldquo;Anne Vliegt&rdquo; (Anne Flies) is her third movie and promises a good omen for her career.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Anthony DiSalvo', 
                   'urlImageRealisateur' => 'realisateurs/AnthonyDiSalvo_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>En 1994 Anthony Di Salvo a créé le Programme Sprout\'s Make-A-Movie, basé à NYC, qui a produit plusieurs vidéos primées représentant des personnes en situation de handicap comme des acteurs et les sujets des documentaires. M. Di Salvo écrit, dirige et monte ces films, diffusés à la télévision et dans des festivals du monde entier. Il a ainsi réalisé 16 vidéos jusqu\'à ce jour. En 2003, il a fondé le Festival annuel « Sprout » et en est le directeur depuis sa fondation.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>In 1994 Anthony Di Salvo created Sprout\'s Make-A-Movie, based in NYC and produced several videos. M Di Salvo writes, directs and edits films broadcast on TV and in Festivals around the world. He produced 16 videos up to today. In 2003, he founded « Sprout » and is the Festival Director since its inception. </p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Bernadette Saint-Rémi et Veronique Fievet', 
                   'urlImageRealisateur' => 'realisateurs/BernadetteSaint-RémiEtVeroniqueFievet_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Bernadette Saint-Rémi travaille à la RTBF depuis 1989 comme réalisatrice de diverses émissions. Elle est également productrice de l\'émission : Mémoires. Elle a à son actif plusieurs réalisations de longs métrages documentaires pour l\'émissions « Immersion ». Véronique Fievet travaille également à la RTBF en qualité de journaliste depuis 1986 pour différentes émissions et documentaires.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Bernadette Saint-Rémi works at the RTBF since 1989 as propduced of several broadcasts. She is also the producer of “Mémoires » . SHe has produced long fims and documentaries for « Immersion ». Véronique Fievet also works at RTBF as a journalist since 1986 for several broadcasts and documentaries.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Catherine Van Campen', 
                   'urlImageRealisateur' => 'realisateurs/CatherineVanCampen_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Après avoir étudié l\'histoire à l\'Université d\'Amsterdam, Catherine Van Campen a commencé comme réalisatrice et présentatrice à la radio public hollandaise où sa passion pour les “dramatiques radio” lui ont valu de nombreux prix internationaux. Ses deux premiers documentaires “Eternal Mash” (2007) et “Drona & Me” (2009) furent aussi remarqués et primés dans de nombreux festivals. “Anne Vliegt” est donc son troisième film, promis, lui-aussi, à une belle carrière.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>After her History studies at Amsterdam University, Catherine Van Campen started to work as producer at the Dutch public radio and learn her passion for ‘ dramatic radio shows\' rewarded her with several international awards. Her most recent documentaries “Eternal Mash” (2007) et “Drona & Me” (2009) were also rewarded at festivals. “Anne Vliegt” (Anne Flies) is her third movie and promises a good omen for her career. </p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Chung Yoon-Chul', 
                   'urlImageRealisateur' => 'realisateurs/ChungYoon-Chul_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>« Marathon » est le premier long métrage de Chung Yoon-Chul, co-scénariste de « 3 histoires de l\'au-delà » (corée 2003). Avant cela, il a gagné l\'attention des critiques avec son court-métrage, «  la Photographie de Mémorial » (1997), qui traitait de l\'écroulement du Pont de Sungsoo. Bien qu\'ayant connu un succès retentissant lors de sa sortie en Corée du Sud, « Marathon » n\'a jamais trouvé de distributeur en Belgique.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>« Marathon »is the first long film of Chung Yoon-Chul. Before that he got mentions with his short-film « la Photographie de Mémorial » (1997), that presented the collapse of the Sungsoo bridge. Marathon was acclaimed when it was released in South Korea but never found a distributor in Belgium.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Frédéric Philibert', 
                   'urlImageRealisateur' => 'realisateurs/FrédéricPhilibert_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Travaillant dans l\'animation depuis 1995 et animant entre autre des ateliers avec des enfants et des adolescents aux « Ateliers de la rue raisin » à Saint-Etienne, Frédéric Philibert, parent d\'un petit garçon autiste, a réalisé ce magnifique film d\'animation de 5 minutes.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Has worked in animation since 1995 with childrena and adolescent, at « Ateliers de la rue raisin » in Saint-Etienne. Frédéric Philibert,is the parent of an autist boy and produced this magnificent animation of 5 minutes. </p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Geoffrey Enthoven', 
                   'urlImageRealisateur' => 'realisateurs/GeoffreyEnthoven_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Geoffrey Enthoven n\'en est pas à son premier coup d\'essai en tant que réalisateur puisque qu\'on lui doit « De aanspreker » (1999), « Les enfants de l\'amour » (2001), « Vidange perdue » (2006), « Happy together » (2007) et le merveilleux « Meisjes » en 2009. Il signe avec « Hasta La Vista » une oeuvre singulière et audacieuse emplie d\'humanité.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>For Geoffrey Enthoven this is not a premiere as Director as he already directed « De aanspreker » (1999), « Les enfants de l\'amour » (2001), « Vidange perdue » (2006), « Happy together » (2007) and “ Meisjes” in 2009. « Hasta La Vista » is a peculiar film with a lot of humanity. </p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Henri Poulain', 
                   'urlImageRealisateur' => 'realisateurs/HenriPoulain_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Les clips ont été réalisés par un des membres fondateurs des Raconteurs : Henri Poulain. Henry Poulain réalise des films dans de multiples univers et partout dans le monde : courts métrages de fiction, documentaires de 52 min (sur la Traviata, le shamanisme, l\'art aborigène), ainsi que des films de commande.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>The clips were produced by a founding member of Raconteurs : Henri Poulain. Henry Poulain produces films of various kind and in around the world : Fiction Short Films, Documentaries of 52 mn (Traviata, shamanism, aborigenee art), and commissioned films.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jaco Van Dormael', 
                   'urlImageRealisateur' => 'realisateurs/JacoVanDormael_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Faut-il encore présenter Jaco Van Dormael ? Et le comédien Pascal Duquenne ?  Quatre films les unissent :  « Toto le héros» (1991), « Le Huitième Jour » (1995), le très beau « Mr Nobody » (2009) et... « Le baiser » que nous avons le plaisir de vous montrer. Jaco Van Dormael s\'est intéressé très tôt au handicap puisqu\'on lui doit aussi « Stade », un documentaire sur les jeux olympiques pour handicapés mentaux (1981) et le truculent « L\'imitateur »  (1982) qui nous raconte la courte intrusion de deux handicapés mentaux dans le monde des « normaux ».</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Is it really necessary to introduced Jaco Van Dormael ? And actor Pascal Duquenne ? Four films united them : « Toto le héros »(1991), « Le Huitième Jour » (1995), « Mr Nobody » (2009) and « Le baiser » that we are pleased to present to you . Jaco Van Dormael interests for handicap started very early in his career with “stade”a documentary on the Para Olympics (1981) and « L\'imitateur » (1982) that telles the story of the intrusion of two mentally challeenged persons into the world of « normal persons ».</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jean-Luc Slock et 36 enfants', 
                   'urlImageRealisateur' => 'realisateurs/Jean-LucSlockEt36Enfants_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>En partenariat avec l\'unité de Psychologie et de Pédagogie de la personne handicapée de l\'ULG et sous la direction de Jean-Luc Slock et de l\'asbl Caméra Enfants Admis, ce film d\'animation a été réalisé par 36 enfants âgés entre 9 et 14 ans, venant de l\'école « Les castors » - enseignement spécialisé - et l\'école « Saint Sébastien » - enseignement ordinaire -.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>In partnership with the Psychoplogy Unit of the Handicpaped Persons of the ULG and under the direction of Jean-Luc Slock and the Cultural Association Caméra Enfants Admis, this animation is produced by 36 childnre aged between 9 and 14 years old from the school « Les castors » -specialised institution – and school « Saint Sébastien » - ordinary institution -.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jean-Michel Carré', 
                   'urlImageRealisateur' => 'realisateurs/Jean-MichelCarré_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jean-Michel Carré entreprend des études de médecine qu\'il abandonne après avoir été admis à l\'IDHEC. Lauréat de la bourse "Feu vert pour l\'aventure", il réalise un documentaire sur Cuba, qui est interdit d\'antenne en octobre 1968. Il tourne de nombreux films documentaires et plusieurs longs métrages dont les sujets et le traitement sont à chaque fois sans compromission. « Le véritable travail du documentariste est de témoigner de la place de l\'homme dans le système, celui qu\'il s\'impose comme celui qu\'il invente. ». Il est enfin directeur général de la maison de production Les Films Grain de Sable. </p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jean-Michel Carré produced a documentary on Cuba in 1968. SInce then he produced several films and documentaries on several topics. « The real work of a doucmentarist is to present the real location of man in the system, the one that he imposes on himself and the one that he invents. ». He is General Director at Production Les Films Grain de Sable. </p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jung Von Matt et Limmat', 
                   'urlImageRealisateur' => 'realisateurs/JungVonMattEtLimmat_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Ce film est la dernière campagne de sensibilisation de l\'association suisse pro infirmis. Fidèle à son style provocateur, la plus grande organisation dans le domaine du handicap en Suisse a pour slogan : « pro infirmis - nous abolissons le handicap ». Elle exprime ainsi que le handicap n\'est pas seulement une déficience ou un dysfonctionnement du corps, de l\'esprit ou du psychisme, mais qu\'il est aussi le résultat des conditions posées par l\'environnement et la société, par des obstacles et des barrières dans les bâtiments, les transports publics, les services, le système scolaire, le monde du travail et même les loisirs. </p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>This films is the most recent awareness campaing of the association pro infirmis. The association is known for being provocative attitude with the theme of handicap. Pro-Informis explains that handicap is not only a deficiency of the body but also the result of conditions posed by the environment and society. </p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Juraj Lehotsky', 
                   'urlImageRealisateur' => 'realisateurs/JurajLehotsky_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Juraj Lehotsky a étudié le cinéma à Bratislava de 1995 à 2000. Il a ensuite travaillé comme réalisateur de films documentaires, de vidéo clips et de films publicitaires. En 2003, il a gagné le prix Aurel pour le clip « Prvà ».  « Blind Loves » est son premier long métrage où il a intègré de la fiction et fut sélectionné et primé à la Quinzaine des réalisateur de Cannes.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Juraj Lehotsky studied cinema in Bratislava from 1995 to 2000. He then worked as Director of Documentaries and videos clips and advertising clips. In 2003, his clip « Prvà » was prized. « Blind Loves » is his first full length movie where he intergated fiction and was selected at the Quinzaine des Director in Cannes.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Leendert Pot et Anja Hiddinga', 
                   'urlImageRealisateur' => 'realisateurs/LeendertPotEtAnjaHiddinga_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Leendert Pot est réalisateur indépendant depuis 1986. Il a à son actif de nombreux films documentaires sur des thématiques sociales. Anja Hiddinga est également une cinéaste indépendante. Elle a écrit de nombreux articles ainsi que des essais.  Elle est maître de conférence à l\'Université d\'Amsterdam.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Leendert Pot is an independent Director since 1986. He has directed several documentaries on social topics. Anja Hiddinga is also an independent director. She wrotes several articles as well as essays. SHe is lecture rat Amsterdam University. </p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Lloyd Newson', 
                   'urlImageRealisateur' => 'realisateurs/LloydNewson_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Lloyd Newson a fond&eacute; le DV8 Physical Theater et en est son directeur depuis 1986. Il y a r&eacute;alis&eacute; 15 cr&eacute;ations qui ont re&ccedil;u de nombreux prix internationaux. Le travail de Lloyd Newson est reconnu pour avoir apport&eacute; une innovation dynamique &agrave; la danse contemporaine par son travail mariant l&rsquo;esth&eacute;tique au sens du mouvement.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Lloyd Newson founded DV8 Physical Theater in 1986. He produced 15 creations which all received international awards. Lloyd Newson is known to have dynamically contributed to innovate contemporary dance by mixing esthetic and movement.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Natacha Calestrémé', 
                   'urlImageRealisateur' => 'realisateurs/NatachaCalestreme_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Après un parcourt en publicité, puis en presse, Natacha Calestrémé devient auteur pour France 2 et France 3 puis pour TF1 où elle dirige une équipe d\'auteurs. En 1999, elle rejoint M6 international à l\'unité documentaires. Elle réalise ensuite sa propre collection de documentaires, intitulée "Les Héros de la Nature" pour France 3 et France 5, produit par Mona Lisa Production. </p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Natacha Calestrémé srtaed her career in advertising and media and then moved to France 2 then France 3 and finally TF1 broadcasting where she directs a team of authors. In 1999, she joins M6 international international unit. She then produces her own colleciton of documentaries "The Heroes of Nature " for France 3 and France 5, produced by Mona Lisa Production.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Nicolas Favreau', 
                   'urlImageRealisateur' => 'realisateurs/NicolasFavreau_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Après avoir travaillé plus de 10 ans à la rédaction de France Inter, Nicolas Favreau a intégré en 2010 la rédaction multimédia de France Info dans la veille d\'information. Parallèlement, il mène une carrière de réalisateur de films institutionnels durant 7 ans et découvre le monde de l\'entreprise. Très vite, il se spécialise dans des films à caractère social et plus particulièrement sur le thème du handicap mental. </p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Nicolas Favreau worked for 10 years at France Inter before joining, in 2010, the multimédia section of France Info. He also developed his own film career for 7 years in the corporate world and quickly becomes known for his films with social orientation and in particular mental handicap. Assistant : Anne Chabert d\'Hières produced the interviews. SHe is an independent editor specialised in documentary edition and Youth books. She also is a story teller. She is a member of Arche in Paris for the past 30 years and is traine in behavioural sciences. </p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Niko Von Glasow', 
                   'urlImageRealisateur' => 'realisateurs/NikoVonGlasow_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Le &laquo;&nbsp;Michael Moore&nbsp;&raquo; du film documentaire sur la th&eacute;matique, Niko Von Glasow, nous revient (apr&egrave;s &laquo;&nbsp;Nobody&rsquo;s perfect&nbsp;&raquo; prim&eacute; &agrave; EOP&nbsp;! en 2011) avec deux nouveaux longs m&eacute;trages dont celui-ci&nbsp;: &laquo;&nbsp;Alles wied gut&nbsp;&raquo; (&laquo;&nbsp;Tout va bien&nbsp;&raquo;).&nbsp;</p>

<p>Lui-m&ecirc;me porteur de handicap (victime du Thalidomide), il use et abuse de son don pour p&eacute;n&eacute;trer au plus profond de l&rsquo;&acirc;me dont il r&eacute;v&egrave;le les malentendus comiques, les contradictions, les dangers, les pi&egrave;ges et les explosions. S&rsquo;impliquant lui-m&ecirc;me devant de la cam&eacute;ra, il se met aussi en danger, apportant ainsi une sinc&eacute;rit&eacute; qui fait toute la force de ses films.</p>

<p>Niko Von Glasow a fait ses classes aupr&egrave;s de Rainer Werner Fassbinder. Il a &eacute;tudi&eacute; le cin&eacute;ma&nbsp; &agrave; l&rsquo;universit&eacute; de New York et &agrave; la Film Academy of L&oacute;dz en Pologne. Depuis 1991, ses films sont r&eacute;guli&egrave;rement prim&eacute;s dans les festivals.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Niko Von Glasow, is the &laquo;&nbsp;Michael Moore&nbsp;&raquo; about disable films. Himself disabled by thalidomide, he uses the process to probe deeply into the lives, fears and aspirations of his ensemble. This leads to many comic misunderstandings, as well as many dangers, traps and explosions. But because he throws himself into the midst of the action too, he is uniquely able to strip away his performers&rsquo; inhibitions and give them a valuable gift.</p>

<p>Niko von Glasow began his film training with Rainer Werner Fassbinder and studied film at New York University and at the Film Academy of L&oacute;dz in Poland. This is where he made his first feature film in 1991, Wedding Guests, which won several awards including the German Film Critics&rsquo; Award at the Berlin Film Festival. His film, Nobody&rsquo;s Perfect, won the German Film Prize for Best Documentary 2009 and a prize in the first EOP&nbsp;! edition in 2011&nbsp; .</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Sandrine Herman et Igor Ochronowicz', 
                   'urlImageRealisateur' => 'realisateurs/SandrineHermanEtIgorOchronowicz_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Sandrine Herman & Igor Ochronowicz sont directeurs de collection de « l\'oeil et la main » depuis 2003, à la production Point du Jour. Igor est également réalisateur et chef opérateur de nombreux films documentaires diffusés sur France 3, France 5 et Canal +.Sandrine est l\'auteur de documentaires réalisés pour l\'émission « L ‘oeil ou la main » (France 5). Depuis 2006, elle est membre du groupe d\'experts au ministère Education Nationale pour l\'éducation bilingue (Français/LSF) et le baccalauréat LSF et s\'investit beaucoup dans l\'associatif autour de la surdité et la langue des signes.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Sandrine Herman & Igor Ochronowicz are directeurs at Production Point du Jour. Igor is also Director of several documentaries broadcast on France 3, France 5 and Canal +. </p><p>Sandrine is the authro of documentaries produced for the boradcast « L ‘œil ou la main » (France 5). Since 2006 she is a member of the expert groups at the Ministry of National Education for the Bilingual Education (Français/LSF) and the Baccalaureat of the signs language. </p></p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Sarah Tracton', 
                   'urlImageRealisateur' => 'realisateurs/SarahTracton_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Bachelière en art de la communication, Sarah Tracton a perdu totalement l\'Ouïe à l\'âge de 20 ans, mais a gardé une puissante mémoire des sons qu\'elle a mise à profit pour tenter de décrire un monde sans ceux-ci. Finaliste des TV Atom awards, « White sound » a été montré dans de multiples festivals à travers le monde. </p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Master of Arts in communication Sarah Tracton lost earing capacities at the age of 20. But she kept a phenomenal memory of sounds and she is now trying to describe the world through them . </p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Sébastien Petit', 
                   'urlImageRealisateur' => 'realisateurs/SébastienPetit_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Diplômé de l\'Inraci en 1999, Sébastien Petit est successivement électro, caméraman, monteur, assistant réalisateur, etc… ainsi que réalisateur de plusieurs courts-métrages (« Le Petit Chaperon Rouge » en 1999, « Invasion » en 2004, « Gorgol et Gus » en 2005,  « Luneville » en 2008, « Chaos » en 2011). En 2004,  il lance l\'Atelier Pelloche, un atelier de réalisation de courts-métrages qui permet à des personnes adultes handicapées mentales de se familiariser avec les techniques de fabrication de films. A la même époque, il s\'associe avec 7 confrères et amis pour créer Boîte Noire, structure de production qui leur permet de réaliser leurs propres créations. ce film a été réalisé avec  les résidents et le personnel du Centre Reine Fabiola de Neufvilles. Il a reçu le prix du meilleur court métrage lors de l\'édition 2006 des « Pom\'s dor ».</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<H1>Text needed</H1>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Teemu Eramaa', 
                   'urlImageRealisateur' => 'realisateurs/TeemuEramaa_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Ce r&eacute;alisateur de 30 ans s&lsquo;est essay&eacute; tour &agrave; tour &agrave; l&rsquo;animation et la r&eacute;alisation 3D en travaillant au Royaume-Uni et &agrave; Los Angeles. A c&ocirc;t&eacute; de cette passion pour la 3D, il planche notamment sur la r&eacute;alisation d&rsquo;un film de guerilla tout en s&rsquo;adonnant au chant et &agrave; la basse.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Teemu Eramaa is an independant director and a 3D animator born in Finland in 1982. After working in commercial VFX in London, he moved back to Finland and is now running his own 3D- animation studio.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Bard Rossevol', 
                   'urlImageRealisateur' => 'realisateurs/BardRossevol_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>B&aring;rd R&oslash;ssevol est tomb&eacute; amoureux du cin&eacute;ma d&egrave;s son enfance pass&eacute;e sur une petite &icirc;le de la c&ocirc;te-ouest noriv&eacute;gienne. Etudiant en litt&eacute;rature et m&eacute;dias &agrave; l&rsquo;Universit&eacute; de Volga, il poursuit son cursus en r&eacute;alisation et production &agrave; la Griffith Film School de Brisbane et Los Angeles. Pendant cette p&eacute;riode, il r&eacute;alise quatre courts m&eacute;trages. Il se frotte au longs-m&eacute;trages et aux s&eacute;ries TV mais son premier court-m&eacute;trage en tant que r&eacute;alisateur et producteur est &ldquo;Akvarium&rdquo; sorti en 2010</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>B&aring;rd R&oslash;ssevold (b. 1981) was born, raised and fell in love with movies on the small island of Valder&oslash;y on the west coast of Norway. He started his education with studying Media Knowledge and English Literature at Volda University College, before he went on to get his degree in Film and TV Production at the Griffith Film School in Brisbane Australia, and at Ithaca College&rsquo;s Los Angeles Campus. During this period he directed four short films. After graduating he has been working on different feature films and TV series, before he wrote, directed and produced <em>Aquarium</em> in 2010, as his first short film after graduation.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'David GUIRAUD et Anne-Claire JAULIN', 
                   'urlImageRealisateur' => 'realisateurs/DavidGUIRAUDEtAnne-ClaireJAULIN_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Anne-Claire JAULIN</p>

<p>Dipl&ocirc;m&eacute;e de l&rsquo;EM Lyon avec une sp&eacute;cialisation en management des activit&eacute;s culturelles, Anne-Claire int&egrave;gre la soci&eacute;t&eacute; de production Ad Astra Films en mai 2011 en tant que chef de projet. Fin 2011, elle &eacute;crit et r&eacute;alise son premier court-m&eacute;trage, &laquo;&nbsp;L&rsquo;Assistante&nbsp;&raquo; en collaboration avec David Guiraud. Depuis, elle travaille &agrave; l&rsquo;&eacute;criture d&rsquo;un troisi&egrave;me court-m&eacute;trage &laquo;&nbsp;Sous Silence&nbsp;&raquo;, s&eacute;lectionn&eacute; cette ann&eacute;e &agrave; l&rsquo;Atelier Jeunes Auteurs du Festival Aix Tous Courts. Anne-Claire est aussi r&eacute;dactrice de critiques pour un site de cin&eacute;ma en ligne, Abus de Cin&eacute;.</p>

<p>David GUIRAUD</p>

<p>Apr&egrave;s un passage &agrave; La Sorbonne en licence Cin&eacute;ma, il devient en&nbsp;2005 assistant r&eacute;alisateur. En 2008, &agrave; 23 ans, il fonde la soci&eacute;t&eacute; de production AD ASTRA FILM. Son go&ucirc;t prononc&eacute; pour l&rsquo;esth&eacute;tique et le langage corporel lui fournissent les th&egrave;mes de son premier court m&eacute;trage &laquo;<em>Le Tonneau des Dana&iuml;des</em>&raquo;, film onirique s&eacute;lectionn&eacute; dans plus de 40 festivals internationaux. David Guiraud r&eacute;alise aussi des publicit&eacute;s. Il pr&eacute;pare actuellement&nbsp;deux nouveaux film: le film social&nbsp; &laquo;&nbsp;<em>L&rsquo;&Eacute;tranger</em>&nbsp;&raquo; et le thriller &laquo;&nbsp;<em>Le Lapin Blanc</em>&nbsp;&raquo;.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Anne-Claire JAULIN</p>

<p>After graduating from EM Lyon Business School with a specialization in Management of cultural activities, Anne-Claire Jaulin currently works for Ad Astra Films as a Project Manager. Her past experiences for the TV Channel ESPN in London and in the Finance department of Theater Ensemble - an Off-Broadway Theater in New York - led her to the movie industry. Anne-Claire is also writing cinema reviews for an online magazine Abus de Cin&eacute;. In 2011, she co-directs her first short-film &ldquo;L&rsquo;Assistante&rdquo; with David Guiraud.</p>

<p>David GUIRAUD</p>

<p>After a bachelor in Cinema at La Sorbonne in Paris, he was assistant director on the French motion picture<em>Le Serpent </em>. In early 2008, he co-founded, at only 23 years old, the Cannes-based production company AD ASTRA FILMS, in order to produce his first short film: <em>The Danaides&rsquo; barrel</em>. This dream-like film, where aesthetics and body language are meaningful, is directly influenced by renowned directors such as Werner Herzog, Kim Ki-duk or Michael Mann. It has been selected by 40 international film festivals. David Guiraud is also the director of commercials for Ad Astra Films. He&rsquo;s currently preparing two new films: a social film &quot;Je est un Autre&quot; and a thriller &quot;Le Lapin Blanc &quot;.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Genevieve Clay-Smith', 
                   'urlImageRealisateur' => 'realisateurs/GenevieveClay-Smith_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Sc&eacute;nariste et r&eacute;alisatrice australienne, Genevi&egrave;ve Clay-Smith s&rsquo;amuse &agrave; capter l&rsquo;attention du public par l&rsquo;humour et le pathos. Elle d&eacute;bute sa carri&egrave;re par des films documentaires dans le secteur non&nbsp;marchand. Jusqu&rsquo;&agrave; pr&eacute;sent, ses films explorent principalement des th&egrave;mes comme la solitude, les relations intrafamiliales ou encore le handicap. &ldquo;Be my brother&rdquo;, court- m&eacute;trage encens&eacute; par la critique, remportel le Tropfest. Deux de ses films nous sont aujourd&rsquo;hui propos&eacute;s au festival : &ldquo;Beautiful&rdquo; et &ldquo;The Interviewer&rdquo;.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Genevieve Clay-Smith is an Australian writer/director, who enjoys telling stories that uplift and inspire audiences through pathos and humor. She began her film making career with documentary film making for not-for-profit organization, Down Syndrome N.S.W, she is an advocate for inclusive film making and in 2009 won Tropfest with her critically acclaimed short film Be My Brother. To date her work explores themes to do with societal perspectives, isolation, reconciliation, the family unit and disability.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Chris Dundon', 
                   'urlImageRealisateur' => 'realisateurs/ChrisDundon_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Chris Dundon est un jeune sc&eacute;nariste et r&eacute;alisateur passionn&eacute; par les histoires des gens et leurs performances. Son film &laquo;&nbsp;Bro&nbsp;&raquo; rencontre un beau succ&egrave;s dans le circuit des festivals de court-m&eacute;trage puisqu&rsquo;il a &eacute;t&eacute; s&eacute;lectionn&eacute; dans plus de 20 comp&eacute;titions internationales. Il est actuellement en pr&eacute;-production de deux courts-m&eacute;trages et sur un projet de long-m&eacute;trage.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Chris is an award winning young writer &amp; director with a passion for storytelling and performance.&nbsp; He found great success on the film festival circuit with his first short film, Bro, which screened in competition at over twenty five international festivals. He is currently in pre-produduction on two more short films, and in development on his first feature film.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Joshua and Rebekah Weigel', 
                   'urlImageRealisateur' => 'realisateurs/JoshuaAndRebekahWeigel_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Joshua and Rebekah Weigel sont mari&eacute;s depuis presque 20 ans. Ils &eacute;crivent, r&eacute;alisent et produisent ensemble leurs films, comme une &eacute;quipe de cr&eacute;ateurs avec le but de r&eacute;aliser des films &laquo;&nbsp;grand public&nbsp;&raquo;. Le film &quot;The Butterfly Circus&quot;, a &eacute;t&eacute; film&eacute; avec des personnes renomm&eacute;es comme Nick Vujicic (un conf&eacute;rencier mondialement connu&nbsp; qui t&eacute;moigne r&eacute;guli&egrave;rement sur le handicap) ou les acteurs Eduardo Ver&aacute;stegui et Doug Jones.<br />
Apr&egrave;s ce film, vu par millions de personnes dans le monde entier et ayant recueilli de nombreuses r&eacute;compenses, Joshua et Rebekah travaillent actuellement sur un film long m&eacute;trage.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Joshua and Rebekah Weigel have been married for 15 years, and write and produce together as a creative team with the goal of creating meaningful films that entertain, challenge and inspire.&nbsp;&nbsp; Their most recent work,&ldquo;The Butterfly Circus&rdquo;, was directed by Joshua and stars Nick Vujicic, Eduardo Ver&aacute;stegui (Bella) and Doug Jones (Pan&rsquo;s Labyrinth, Fantastic Four).</p>

<p>Seen now by over 20 million people worldwide, and having garnered numerous awards, Joshua and Rebekah are currently working to expand the short into a feature length film.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Benjamin Lehrer', 
                   'urlImageRealisateur' => 'realisateurs/BenjaminLehrer_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Tout commence par la d&eacute;couverte de ce m&eacute;tier dans le monde merveilleux du latex : Les Guignols de l&rsquo;info. Apr&egrave;s quelques ann&eacute;es comme assistant-r&eacute;alisateur sur de nombreux projets dans diff&eacute;rents formats, Benjamin Lerher passage &agrave; la mise en sc&egrave;ne. Tout en alternant les tournages de courts-m&eacute;trages et de programmes pour la t&eacute;l&eacute;vision, il r&eacute;alise des sketchs &agrave; Canal+. D&rsquo;abord sur &laquo; les bonus de Guillaume &raquo;, puis sur la s&eacute;rie des &laquo;Mica &amp; Benj &raquo;. Son court-m&eacute;trage &laquo;Cendrillon du pied gauche&raquo; est plusieurs fois prim&eacute; dans des festivals en France et &agrave; l&rsquo;&eacute;tranger, et l&rsquo;am&egrave;ne aujourd&rsquo;hui au d&eacute;veloppement d&rsquo;un premier long-m&eacute;trage.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Everything started with the awesome job as&nbsp;: Les Guignols de l&rsquo;info. After few years as assistant director on several projects in various formats, Benjamin Lerher started to produce his own projects while alternating short-films shooting and TV programmes, he also produced sketches for Canal+, first &laquo; les bonus de Guillaume &raquo;, then &laquo;Mica &amp; Benj &raquo;. His short-film &laquo;Left Foot Cindrella&raquo; received several awards in Festivals in France and abroad and took him to engage into his first full feature movie. &nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Matthieu Bron', 
                   'urlImageRealisateur' => 'realisateurs/MatthieuBron_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Matthieu Bron est n&eacute; en France en 1976. Il est licenci&eacute; en Cin&eacute;ma et Audiovisuel (Universit&eacute; Paul Valery&nbsp; / Montpellier,) et en Sociologie et Psychologie du Travail (Universit&eacute; d&rsquo;Afrique du Sud)</p>

<p>Il a v&eacute;cu au Mozambique de 1998 &agrave; 2011 et a travaill&eacute; pendant 3 ans dans le secteur priv&eacute; comme chef monteur (documentaires, fictions, films institutionnels, programmes TV, etc.).</p>

<p>En 2002, il a fond&eacute; la soci&eacute;t&eacute; de production MEETINGS avec laquelle il a produit et r&eacute;alis&eacute; des films pour des institutions internationales, des ONG, les secteurs public et priv&eacute;. Il a d&eacute;velopp&eacute; en parall&egrave;le des documentaires de cr&eacute;ation. &laquo;&nbsp;Corps et &acirc;me&nbsp;&raquo; est son premier long m&eacute;trage documentaire. Il a &eacute;t&eacute; produit &agrave; Maputo, capitale du Mozambique, sur une p&eacute;riode de trois ans.</p>

<p>Depuis Aout 2011, Matthieu Bron est install&eacute; au Danemark o&ugrave; il continue &agrave; travailler dans l&rsquo;industrie audiovisuelle.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Matthieu Bron was born in France in 1976. He graduated in Cinema and Audiovisual Arts (University Paul Valery/Montpellier) and in Sociology and Labour Phsychology (University of South Africa).</p>

<p>He lived in Mozambique from 1998 to 2011 and worked&nbsp; in the private sector for three years as chief editor (documentaries, fictions, institutional films, TV programmes etc.).</p>

<p>In 2002, he founded the Production Company MEETINGS and directed and produced films for International Institutions, NGOs, private and public sector. He also developed creative documentaries. &laquo;&nbsp;Corps et &acirc;me&nbsp;&raquo; [Bodies and Souls] is his first long documentary. It was produced in Maputo, over a period of three years. Since August 2011, Matthieu Bron lives in Denmark where he continues to work in the audiovisual sector. &nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Pascal Roy', 
                   'urlImageRealisateur' => 'realisateurs/PascalRoy_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Surnomm&eacute; le &quot;psyn&eacute;aste&quot; par Patrice Leconte, en r&eacute;f&eacute;rence &agrave; son parcours hybride entre la psychologie et le cin&eacute;ma, Pascal Roy concilie ses deux passions, cin&eacute;ma et &eacute;tude de ses contemporains. <em>Corps solidaires, </em>son 3e court-m&eacute;trage, tourn&eacute; en 2011 et produit par C Ton Film Productions, a &eacute;t&eacute; s&eacute;lectionn&eacute; dans de nombreux festivals. Il a &eacute;t&eacute; prim&eacute; &agrave; Ebensee, Hy&egrave;res, Tirana et Cleveland. Actuellement, Pascal termine le montage d&rsquo;un documentaire, &laquo;&nbsp;<em>Ultreia&nbsp;! Sur le chemin de Compostelle</em>&nbsp;&raquo;. En parall&egrave;le, il pr&eacute;pare le tournage d&rsquo;un nouveau court-m&eacute;trage et travaille &agrave; l&rsquo;&eacute;criture d&rsquo;un sc&eacute;nario de long m&eacute;trage en d&eacute;veloppement chez C Ton Film Productions.&nbsp; Il a &eacute;galement publi&eacute; une nouvelle, <em>Chronique d&#39;une mal&eacute;diction, </em>aux Editions L&#39;Harmattan.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Often nicknamed by Patrice Leconte as the &laquo;&nbsp;psyco-director&nbsp;&raquo; as a reference to his hybrid path between psychology and cinema, Pascal Roy quite confidently blends his two passions, cinema and research on his fellows contemporaries. Bodies Solidarity is its third short-film, shot in 2011. It was produced by C Ton Film Productions and was selected for several &nbsp;Festivals. It received an Award at Ebensee, Hy&egrave;res, Tirana and Cleveland. Pascal is currently completing the editing of a documentary&nbsp; &laquo;&nbsp;<em>Ultreia&nbsp;! Journey to Compostelle</em>&nbsp;&raquo;. Simultaneously he is preparing the shooting of a new short-film and works on a long feature film scenario for C Ton Film Productions. He also published a novel &laquo;&nbsp; Tale of a Curse&nbsp;&raquo;&nbsp; published by L&#39;Harmattan.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jean-Claude Rozec', 
                   'urlImageRealisateur' => 'realisateurs/Jean-ClaudeRozec_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>avec des amis d&rsquo;enfance, ce jeune Rennois de 32 ans monte en 2001 une association qui produit des films d&rsquo;animation. Travaillant d&rsquo;abord comme animateur sur plusieurs films, il s&rsquo;engage alors dans la r&eacute;alisation. Pl&eacute;biscit&eacute; dans plusieurs festivals, il se voit r&eacute;compens&eacute; de sept prix pour &ldquo;Cul de Bouteille&rdquo;.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>In 2001, with some childhood friends, this young 32 yrs old man from Rennes, set up a production company producing animation movies. He first started to work as animator on several films before evolving as a director. He was often praised at several Festivals before being awarded seven prizes for&nbsp; &ldquo;Bottle Bottom&rdquo;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'William Mager', 
                   'urlImageRealisateur' => 'realisateurs/WilliamMager_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>William Mager a deux films s&eacute;lectionn&eacute;s cette ann&eacute;e &agrave; EOP! : &ldquo;Deaf mugger&rdquo; et &ldquo;Hands solo&rdquo;. Il est producteur/r&eacute;alisateur &agrave; la BBC. Il fait ses armes aupr&egrave;s d&rsquo;Andrew Davies (Pride and Prejudice, Bridget Jones&rsquo;Diary). D&eacute;butant comme web &eacute;diteur &agrave; la BBC, il poursuit sa carri&egrave;re comme r&eacute;alisateur ind&eacute;pendant for Channel 4. Apr&egrave;s son retour &agrave; la BBC comme r&eacute;alisateur sur &ldquo;Watchdog&rdquo;, ses documentaires d&rsquo;investigation font parler de lui. Il dirige plusieurs films &agrave; l&rsquo;&eacute;tranger : Amsterdam, Copenhague, New-York et Chicago. Mager a plusieurs projets dans ses tiroirs dans des genres inexplor&eacute;s jusqu&rsquo;alors : thriller, action et suspense. L&rsquo;ombre d&rsquo;Alfred Hitchcock et des fr&egrave;res Cohen n&rsquo;est pas loin&hellip;</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>William started out as a web editor on the BBC Films Website, and then moved to <em>Top of the Pops</em>, BBC News and CBBC before becoming a freelance director for Maverick Television&#39;s <em>VEE-TV</em> for Channel 4. William then returned to the BBC as a director on <em>Watchdog</em> where his investigative films into major companies made front page news. He has written and directed several short films, which have been screened in London, Amsterdam, Copenhagen, New York and most notably in Chicago.</p>

<p>William has two further short films in the pipeline and his long-term ambition is to develop feature films in the genres of action, thriller, and suspense, taking inspiration from a variety of directors including Alfred Hitchcock, The Coen Brothers, Paul Greengrass and John Huston.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Diane Wilkins', 
                   'urlImageRealisateur' => 'realisateurs/DianeWilkins_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Diane Wilkins, originaire de Floride, est une r&eacute;alisatrice ind&eacute;pendante maintes fois r&eacute;compens&eacute;e dans des festivals internationaux. Surtout connue pour ses documentaires, ses th&egrave;mes de pr&eacute;dilection sont notamment le handicap et l&rsquo;homosexualit&eacute;. Elle collabore &eacute;galement avec une troupe th&eacute;&acirc;trale, the &ldquo;Mickee Faust Club&rdquo;, active dans ces deux domaines.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Diane Wilkins is an independent award-winning filmmaker from Thallahassee , Florida best known for high definition corporate and documentary production. Diane also produces gay and disablility themed shorts in collaboration with the Mickeee Faust Club, a theatre group focused on gay and disability activism. Shorts have screened in film festivals around the world.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jérome Guiot', 
                   'urlImageRealisateur' => 'realisateurs/JéromeGuiot_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>J&eacute;rome Guiot est dipl&ocirc;m&eacute; de l&rsquo;Inraci en 2009. On lui doit un autre court-m&eacute;trage (&laquo;&nbsp;Retour simple&nbsp;&raquo;), &nbsp;des publicit&eacute;s et des clips vid&eacute;os dont les clips officiels de Stromae&nbsp;: &laquo;&nbsp;Alors on danse&nbsp;&raquo; et &laquo;&nbsp;Te quiero&nbsp;&raquo;. Il est &eacute;galement monteur.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>J&eacute;rome Guiot graduated from INRACI in 2009. He has since produced another short-film (&laquo;&nbsp;Return &raquo;), &nbsp;some adverstising and short clips as the officials Stromae&nbsp;: &laquo;&nbsp;Let&rsquo;s Dance&nbsp;&raquo; and &laquo;I love You&raquo;. He also is an editor.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Gwenael Cohenner et le groupe Démosthène', 
                   'urlImageRealisateur' => 'realisateurs/GwenaelCohennerEtLeGroupeDémosthène_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Ce spot est le fruit d&rsquo;une collaboration entre le Groupe D&eacute;mosth&egrave;ne et le r&eacute;alisateur.<br />
Le Groupe D&eacute;mosth&egrave;ne, en r&eacute;f&eacute;rence au c&eacute;l&egrave;bre orateur grec, s&#39;adresse &agrave; ceux qui ont des difficult&eacute;s d&#39;&eacute;locution et &agrave; ceux qui veulent plus ais&eacute;ment communiquer avec eux en d&eacute;pit de ce handicap.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>This short-film is the result of a partnership between Le Groupe D&eacute;mosth&egrave;ne and the Director. Le Groupe D&eacute;mosth&egrave;ne, which is named after the famous Greek speaker, provides support to persons having speech challenges &nbsp;and those willing to communicate with them in spite of the challenges.</p>

<p>&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Marie Mandy', 
                   'urlImageRealisateur' => 'realisateurs/MarieMandy_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Marie Mandy est une <a href="\">r&eacute;alisatrice</a> <a href="\">belge</a>, n&eacute;e en <a href="\">1961</a> &agrave; <a href="\">Louvain</a>. Apr&egrave;s une licence en <a href="\">philologie</a> romane dans cette ville, elle obtient un dipl&ocirc;me en Arts and Technique of Film Making &agrave; la London International Film School. R&eacute;alisatrice et photographe ind&eacute;pendante, elle r&eacute;alise avant tout de nombreux <a href="\">documentaires</a> avec un focus tout particulier pour la c&eacute;cit&eacute; (&laquo;&nbsp;voir sans les yeux&nbsp;&raquo; (2004), &laquo;&nbsp;Le regard des autres&nbsp;&raquo; (2003). Elle vit &agrave; Marseille.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Born in 1961 in Louvain, Marie Mandy &nbsp;is a Belgian director who graduated in Romance Philology before pursuing Arts Studies and further graduating Arts and Technique of Film Making at London International Film School. &nbsp;She is an independent&nbsp; director and photographer mainly producing documentaries on blindness. (&laquo;&nbsp;To see without eyes&nbsp;&raquo; (2004), &laquo;&nbsp;Other&rsquo;s Sights&nbsp;&raquo; (2003). &nbsp;She lives in Marseille.</p>

<p>&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Sergio Cruz', 
                   'urlImageRealisateur' => 'realisateurs/SergioCruz_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Sergio Cruz, dont deux films seront propos&eacute;s lors de cette &eacute;dition (&ldquo;Hanna&rdquo; et &ldquo;Feast&rdquo;) vit &agrave; Londres depuis 2005. Initialement form&eacute; &agrave; l&rsquo;image et au son, il s&rsquo;oriente ensuite vers les Beaux-arts et la danse &agrave; la London Contemporary Dance school. Pour lui, la vid&eacute;o n&rsquo;est qu&rsquo;un media parmi d&rsquo;autres pour sublimer le mouvement. Les corps pr&eacute;valent sur les mots. La musique et la danse sont omnipr&eacute;sentes dans ses cr&eacute;ations diffus&eacute;es &agrave; travers le monde.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Sergio Cruz is an artist filmmaker living in London since 2005. He initially studied sound and image at the Fine Art universities of Portugal and Holland. With the objective of combining his interest in cinema, performance and fine arts, he undertook two master degrees in London, the first in Fine Arts at Central Saint Martins and the second in &ldquo;Dance for the Screen&rdquo; at The Place - London Contemporary Dance School. Since then, his art practice has become solely devoted to film and video as a medium to articulate gesture.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Rodrigo Barriuso', 
                   'urlImageRealisateur' => 'realisateurs/RodrigoBarriuso_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Canadien d&rsquo;origine cubaine, Rodrigo Barriuso s&rsquo;int&eacute;resse &agrave; la fois &agrave; l&rsquo;&eacute;criture, la r&eacute;alisation et la production. Etudiant en cin&eacute;ma &agrave; Toronto et Londres avec l&rsquo;histoire de l&rsquo;art en toile de fond, il entame sa carri&egrave;re dans des galeries &agrave; la Havane et &agrave; Toronto. Son approche est fortement influenc&eacute;e par les valeurs esth&eacute;tiques et conceptuelles qui caract&eacute;rise le monde de l&rsquo;art. Son travail a &eacute;t&eacute; salu&eacute; dans des festivals au Canada, USA, Angleterre, Australie et France. Pour son premier film narratif, For Dorian, le r&eacute;alisateur a re&ccedil;u plusieurs distinctions.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Rodrigo Barriuso is a Cuban-Canadian filmmaker whose areas of interest include writing, directing and producing. He studied film in Toronto, Canada and London, England. With a background in art theory and many years spent employed at art galleries in Havana and Toronto, Rodrigo&rsquo;s cinematic approach is highly influenced by the conceptual and aesthetic values that often inform the art world. His work has been exhibited in festivals in Canada, the United States, England, Australia and France. For Dorian is Rodrigo&rsquo;s first narrative film, for which he received the Norman Jewison Filmmakers Award 2012, an Honorable Mention at the UK Film Festival 2012, the Lindalee Tracey Award in 2013 and the Best Canadian Film Award at the Inside Out Film Festival. Rodrigo is currently in development of his next film project, a short biopic based on the late years of internationally acclaimed 20th century photographer, Andre Kertesz.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Roswitha Chesher', 
                   'urlImageRealisateur' => 'realisateurs/RoswithaChesher_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Roswitha a &eacute;t&eacute; form&eacute;e &agrave; l&#39;origine comme danseur et chor&eacute;graphe &agrave; The Laban Centre et aiment&nbsp; joindre cette connaissance &agrave; un travail de cin&eacute;aste et de photographe. Elle cr&eacute;e des chor&eacute;graphies pour des films et des installations. Elle collabore r&eacute;guli&egrave;rement avec des danseurs divers et des chor&eacute;graphes ( Rosemary Lee, Protein Dance and Candoco Dance Company), the English National Balle etc. . Ces collaborations diverses lui donnent l&rsquo;occasion de travailer sous diverses approches et des personnes vari&eacute;es.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Roswitha originally trained as a dancer and choreographer at The Laban Centre and enjoys bringing that knowledge to her work as a filmmaker and photographer. She creates dance for camera films, (e.g. &lsquo;Hidden Spaces&rsquo;, commissioned by Bromley Council &amp; Big Dance) and video installations for live work (e.g. &lsquo;Gravity&rsquo;, projection on Queens House, Greenwich commissioned by Greenwich and Docklands Festival) as well as documenting artist&rsquo;s work both on stage and in the studio. She regularly collaborates with various dancers and choreographers including Rosemary Lee, Protein Dance and Candoco Dance Company as well as working with organisations including Trinity Laban, English National Ballet, Entelechy Arts and Evelina Hospital School at St. Thomas&rsquo;s. This diverse range of projects gives her the wonderful opportunity to work with a richly diverse mix of people and performers.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Bill Plympton', 
                   'urlImageRealisateur' => 'realisateurs/BillPlympton_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Bill Plympton est un dessinateur de <a href=\"http://fr.wikipedia.org/wiki/Bande_dessin%C3%A9e\">bande dessin&eacute;e</a> et un r&eacute;alisateur de <a href=\"http://fr.wikipedia.org/wiki/Films_d%27animation\">films d&#39;animation</a> <a href=\"http://fr.wikipedia.org/wiki/%C3%89tats-Unis\">am&eacute;ricain</a> n&eacute; le <a href=\"http://fr.wikipedia.org/wiki/30_avril\">30</a>&nbsp;<a href=\"http://fr.wikipedia.org/wiki/Avril_1946\">avril</a>&nbsp;<a href=\"http://fr.wikipedia.org/wiki/1946\">1946</a> (&agrave; <a href=\"http://fr.wikipedia.org/wiki/Portland\">Portland</a> (<a href=\"http://fr.wikipedia.org/wiki/%C3%89tats-Unis\">&Eacute;tats-Unis</a>).</p>

<p>&Agrave; partir de 1968, il prend des cours &agrave; la <a href=\"http://fr.wikipedia.org/wiki/School_of_Visual_Arts\">School of Visual Arts</a> de <a href=\"http://fr.wikipedia.org/wiki/New_York\">New York</a>. Il devient ensuite dessinateur de Bande dessin&eacute;e et de caricatures pour de nombreux magazines. Certains de ses courts m&eacute;trages, comme Plymptoons, sont des adaptations de ses <a href=\"http://fr.wikipedia.org/wiki/Bande_dessin%C3%A9e\">bandes dessin&eacute;es</a>. Il a obtenu deux Grands prix du long m&eacute;trage au <a href=\"http://fr.wikipedia.org/wiki/Festival_international_du_film_d%27animation_d%27Annecy\">Festival international du film d&#39;animation d&#39;Annecy</a>: en <a href=\"http://fr.wikipedia.org/wiki/1998\">1998</a> pour &laquo;&nbsp;Lune de Miel&nbsp;!&nbsp;&raquo;et en <a href=\"http://fr.wikipedia.org/wiki/2001\">2001</a> pour &laquo;&nbsp;Les mutants de l&rsquo;espace&nbsp;&raquo;. Il y re&ccedil;oit une mention sp&eacute;ciale en 2008 pour &laquo;&nbsp;Guide dog&nbsp;&raquo;. Il a &eacute;galement obtenu en 2001 &agrave; Cannes le Prix Canal+ du meilleur court m&eacute;trage par la &laquo;&nbsp;Semaine Internationale de la Critique&nbsp;&raquo; pour le court m&eacute;trage d&#39;animation &laquo;&nbsp;Eat&raquo;.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Bill Plympton is an American animator, graphic designer cartoonist, director, screenwriter and producer best known for his 1987 Academy Award-nominated animated short<em> Your Face</em> and his series of shorts <em>Guard Dog</em>, <em>Guide Dog</em>, <em>Hot Dog</em> and <em>Horn Dog</em>.</p>

<p>Bill Plympton was born in Portland, Oregon, to Don and Wilda Plympton. From 1964 to 1968, he studied Graphic Design at Portland State University, where he was a member of the film society and worked on the yearbook. In 1968, he transferred to the School of Visual Arts in New York City, where he majored in cartooning.</p>

<p>As of 2012, Plympton had created over 40 animated short films and six animated features. He has also published a comic book, <em>The Sleazy Cartoons of Bill Plympton</em>.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Collectif  A chacun son cinéma', 
                   'urlImageRealisateur' => 'realisateurs/CollectifAChacunSonCinéma_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>L&#39;objectif du collectif &laquo;&nbsp;A chacun son cin&eacute;ma&nbsp;&raquo; est de proposer des formations audiovisuelles pour adultes durant toute l&#39;ann&eacute;e mais aussi des stages de cin&eacute;ma pour enfants durant les vacances scolaires. Les stages et formations se d&eacute;roulent au Th&eacute;&acirc;tre en Ile rue M&eacute;an &agrave; Li&egrave;ge.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>The goal of the collective crew &laquo;&nbsp;A chacun son cin&eacute;ma&nbsp;&raquo; is to offer audiovisual trainings for adults the whole year long as well as cinema workshops for childnre during school holidays. Trainings and workshops are held at the &laquo;&nbsp;Th&eacute;&acirc;tre en Ile&nbsp;&raquo; rue M&eacute;an in Li&egrave;ge ( Belgium)</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Heidi Sundby', 
                   'urlImageRealisateur' => 'realisateurs/HeidiSundby_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Heidi Sundby (b. 1965) est photographe. Elle a &eacute;tudi&eacute; les Beaux arts &agrave; l&#39;Acad&eacute;mie norv&eacute;gienne d&#39;art et &agrave; Florence enItalie, mais aussi communication m&eacute;diatique et l&rsquo;italien &agrave; l&#39;Universit&eacute; d&#39;Oslo. Elle a int&eacute;gr&eacute;&nbsp; the Foundation Bj&oslash;rka en 1998, un atelier photographique permanent pour la photographie qui a servi de laboratoire et a offert un travail collectif pour un certain nombre d&#39;artistes pendant 15 ans.<br />
Les &oelig;uvres de Sundby ont &eacute;t&eacute; largement expos&eacute;es dans des expositions collectives et en solo. Elle donne des cours &agrave; l&#39;Acad&eacute;mie Bergen D&#39;art.<br />
&laquo;&nbsp;The Hummingchild&nbsp;&raquo; est son premier documentaire.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Heidi Sundby (b. 1965) studied Fine Arts at the Norwegian Art Academy and in Florence, Italy, as well as media communication and Italian language at the University of Oslo.</p>

<p>She works with still photography as an artistic medium. Sundby initiated the Foundation Bj&oslash;rka in 1998, a permanent workshop for photography which has served as a dark room and working collective for a number of artists for 15 years.</p>

<p>Sundby&rsquo;s works have been widely exhibited in collective and solo exhibitions. She has lectured at the Bergen Art Academy.</p>

<p><em>The Hummingchild</em> is her first documentary.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Marion Casabianca', 
                   'urlImageRealisateur' => 'realisateurs/MarionCasabianca_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Avant tout com&eacute;dienne, diplom&eacute;e de l&rsquo;ENSATT en 2008, Marion Casabianca d&eacute;croche le premier r&ocirc;le f&eacute;minin du film chinois XIEN XINGHAI de Duan Guoping. Elle a &eacute;galement tourn&eacute; avec Jacques Malaterre dans CARMEN, dans SPORT DE FILLES au cin&eacute;ma r&eacute;alis&eacute; par Patricia Mazuy aupr&egrave;s de Marina Hands. Elle sera prochainement Jess dans &quot;Love and Money&quot; mis en sc&egrave;ne par Illia Delaigle au Th&eacute;&acirc;tre National de Mulhouse.</p>

<p>&quot;Je viens de loin&quot; est sa premi&egrave;re r&eacute;alisation o&ugrave; elle met en sc&egrave;ne Mathilde Planchon, son amie d&#39;enfance dans un court-m&eacute;trage qui sillonne d&eacute;sormais le monde.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>In 2008 Marion Casabianca graduated from ENSATT and is primarily an actress. After graduating she got the first female role in Duan Guoping&rsquo;s XIEN XINGHAI. She also starred with Jacques Malaterre in CARMEN, and Patricia Mazuy and Marina Hands&rsquo;s GIRLS SPORT. She will soon act as Jess in &quot;Love and Money&quot; directed by llia Delaigle at the National Theatre of Mulhouse.</p>

<p>&quot;I Am Coming From Afar&quot; portrays Mathilde Planchon, her childhood friend and is her first short-film production as Director and is currently touring the world.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Florian Kuhn', 
                   'urlImageRealisateur' => 'realisateurs/FlorianKuhn_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>N&eacute; en 1979 &agrave; Avignon, Florian Kuhn a fait des &eacute;tudes d&#39;histoire &agrave; l&#39;Universit&eacute; Paul Val&eacute;ry de Montpellier. C&#39;est en 2004 qu&#39;il prend la voie du cin&eacute;ma et commence &agrave; travailler comme assistant r&eacute;alisateur. L&#39;Am&eacute;rique des Autres est son premier film documentaire. C&#39;est l&#39;autisme de sa grande soeur qui l&#39;a men&eacute; &agrave; s&#39;int&eacute;resser &agrave; ce handicap et &agrave; rencontrer les jeunes dont il raconte ici l&#39;aventure.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Florian Kuhn was born in Avignon in 1979 and graduated in History from the University Paul Val&eacute;ry in Montpellier. His first steps in cinema date from 2004 when he started to work as an assistant director. &ldquo;Other People&rsquo;s America&rdquo; is his first documentary. His inspiration on the topic of handicap and autism in particular came from his sister and the young people he met and of whom the film tells the adventure.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Collectif', 
                   'urlImageRealisateur' => 'realisateurs/Collectif_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Ce film d&rsquo;animation a &eacute;t&eacute; r&eacute;alis&eacute; par 15 adultes d&eacute;ficients visuels, moteurs &amp; cognitifs, sous la direction et la coordination de Louise-Marie Colon et Siona Vidakovic.</p>

<p>Camera-etc est un atelier de production o&ugrave; enfants, jeunes et adultes r&eacute;alisent des films d&rsquo;animation de mani&egrave;re collective, entour&eacute;s de professionnels. Camera-etc produit &eacute;galement des &oelig;uvres d&rsquo;auteurs et travaille en coproduction.&nbsp;&nbsp;La structure soutient la cr&eacute;ation d&rsquo;&oelig;uvres cin&eacute;matographiques en favorisant l&rsquo;apprentissage par tous et la diffusion pour tous du langage audiovisuel.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>This cartoon was realized by 15 adults persons with visual impairment, driving and cognitive, under the direction and the coordination of Louise-Marie Colon and Siona Vidakovic.<br />
Camera-etc is a production company where children, young people and adults realize cartoon movies in a collective way, surrounded with professionals. Camera-etc also produces authors&#39; works and works in coproduction. The structure supports the creation of film works by favoring the apprenticeship by all and the broadcasting for all of the media language.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Marianne Cramer et Robert Iséni', 
                   'urlImageRealisateur' => 'realisateurs/MarianneCramerEtRobertIséni_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>La r&eacute;alisatrice :</p>

<p>Biologiste et journaliste scientifique de formation.<br />
Durant plusieurs ann&eacute;es, Marianne Cramer a travaill&eacute; en presse &eacute;crite (Science &amp; Vie, Le Monde de l&rsquo;Intelligence, l&rsquo;Humanit&eacute;, Le Monde des Ados&hellip;), avant d&rsquo;int&eacute;grer le monde de l&rsquo;audiovisuel. Depuis 8 ans, elle met ses comp&eacute;tences d&rsquo;enqu&ecirc;trice, d&rsquo;auteur et de r&eacute;alisatrice au service de nombreuses &eacute;missions de science et de d&eacute;couverte telles que C&rsquo;est pas sorcier (France 3) et ADN (France 2), et de plusieurs documentaires diffus&eacute;s sur les grandes cha&icirc;nes de t&eacute;l&eacute;vision fran&ccedil;aise.</p>

<p>Le r&eacute;alisateur :</p>

<p>Le r&eacute;alisateur&nbsp;:</p>

<p>Touche a tout, autodidacte et passionn&eacute; d&rsquo;image, Robert Iseni a commenc&eacute; &agrave; travailler sur des films documentaires en tant que monteur au milieu des ann&eacute;es 90, un tremplin id&eacute;al pour se lancer ensuite dans le cadre et la r&eacute;alisation. Chef op&eacute;rateur &eacute;clectique et curieux, il a sign&eacute; &agrave; l&rsquo;image de nombreux films dans des domaines vari&eacute;s. Parall&egrave;lement, il r&eacute;alise aussi en solo plusieurs documentaires : &laquo; Les Sentinelles de la nature &raquo;, &laquo; La patrouille maritime &raquo; &laquo; la guerre des jetons &raquo;. La proximit&eacute; avec les gens qu&rsquo;il c&ocirc;toie et l&rsquo;empathie dont il sait faire preuve en toutes circonstances l&rsquo;ont tout naturellement conduit &agrave; r&eacute;aliser des documentaires intimistes. Ses images, d&rsquo;une grande qualit&eacute;, sont toujours au service d&rsquo;histoires humaines fortes.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Marianne Cramer has a background in biology and scientific journalism. For many years she worked for specialised publishers &nbsp;(Science &amp; Vie, Le Monde de l&rsquo;Intelligence, l&rsquo;Humanit&eacute;, Le Monde des Ados&hellip;) before entering the audiovisual world. For the past 8 years she has devoted her surveyor, journalist, author and director skills and competences to scientific and exploration programmes &laquo;&nbsp;C&rsquo;est pas sorcier&nbsp;&raquo; (France 3) and ADN (France 2) as well as for several documentaries broadcast on mainstream TV Channels in France.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Aniko Ozorai', 
                   'urlImageRealisateur' => 'realisateurs/AnikoOzorai_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Etre proche, proche des autres... c&#39;est un peu mon leitmotiv que ce soit en t&eacute;l&eacute;vision r&eacute;gionale, le m&eacute;dia de la proximit&eacute; par excellence ou lors de reportages &agrave; l&#39;&eacute;tranger (P&eacute;rou, Afghanistan, Congo, Inde, Canada, B&eacute;nin...pour des ONG). Licenci&eacute;e de l&#39;IHECS en presse information, je travaille avec un bonheur &eacute;gal &agrave; No t&eacute;l&eacute;, t&eacute;l&eacute;vision r&eacute;gionale de Wallonie Picarde depuis plus de 20 ans. Je prends plaisir &agrave; partager mon exp&eacute;rience : je suis &eacute;galement professeur d&#39;expression&nbsp;&nbsp;orale &agrave; la Helha (baccalaur&eacute;at en communication) &agrave; Tournai.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>To be close, to be closed to others... is her motto either at the regional television channel, the real proximity channel, or during reports abroad (Peru, Afghanistan, Congo, India, Canada, Benin...for NGOs). I graduated from IHECS with major in press news&nbsp; and happily works&nbsp; for over 20 years at No t&eacute;l&eacute;, regional television channel for Wallonie Picarde. I feel happy to share my experience: I also teach oral Expression at Helha (Communication ) in Tournai.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Francisco Taranto jr', 
                   'urlImageRealisateur' => 'realisateurs/FranciscoTarantoJr_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Francisco Taranto Junior, n&eacute; en 1977 &agrave; Rio de Janeiro, a d&eacute;couvert quand il &eacute;tait adolescent deux passions qui n&#39;allaient plus le quitter : l&#39;escalade et la photographie. En 2002, il quitte le monde du photo-journalisme dans le but de r&eacute;aliser des reportages li&eacute;s &agrave; la montagne. Apr&egrave;s 26 ans pass&eacute;s &agrave; Rio, il arrive en France, o&ugrave; il vit toujours. En 2011, il rencontre et photographie certains des meilleurs grimpeurs au monde. Depuis 2012, il varie les projets : vid&eacute;os promotionnelles, films documentaires tourn&eacute;s en Iran et au Br&eacute;sil, web-s&eacute;rie en cours de production, en Gr&egrave;ce et en Turquie... Des projets vari&eacute;s mais toujours dans le domaine de l&#39;escalade !</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Born in 1977 in Rio de Janeiro, Francisco Taranto Junior discovered&nbsp; two passions that will never leave him since he was a teenager&nbsp;: hicking and photography. In 2002 he steps away from phot-journalism and starts directing documentaries on mountains . He spent 26 years in Rio and then moved to France where he still lives. In 2011, he meets and takes photographs of some of the most well-known world hickers. Since 2012, he&nbsp; diversifies his projects&nbsp;: promotional videos, documentaries directed in Iran and Brazil, , web-series in production in Greece and Turkey&hellip; A variety of projects always focused on hicking&nbsp;!</p>

<p>&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Collectif sous la direction de Aline Moens', 
                   'urlImageRealisateur' => 'realisateurs/CollectifSousLaDirectionDeAlineMoens_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Ce film est une r&eacute;alisation collective sous la direction de Aline MOENS.<br />
Aline Moens est responsable &nbsp;de projets &agrave; l&#39;Atelier Graphoui depuis 1991, animatrice d&#39;atelier de r&eacute;alisation, formatrice, et r&eacute;alisatrice.</p>

<p>On lui doit depuis 1993, pas moins de &nbsp;54 r&eacute;alisations, que ce soit des films d&rsquo;animation en dessins anim&eacute;s ou collage, p&acirc;te &agrave; modeler, pixillation etc.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Since 1991, Aline MOENS is project manager at Atelier Graphoui, animator, trainer and facilitator of workshops on production and film making. She also is a director. Since 1993 she has produced over fifty-four films in various formats ( animation, cartoons, pixilation, art paste or collage)</p>

<p>&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Daniel Metge', 
                   'urlImageRealisateur' => 'realisateurs/DanielMetge_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Daniel Metge a 41 ans, il est originaire de la r&eacute;gion Rh&ocirc;ne-Alpes &agrave; laquelle il est tr&egrave;s attach&eacute;, et fait partie de l&rsquo;association de sc&eacute;naristes et r&eacute;alisateurs lyonnais <em>Pr&eacute;misses</em>.</p>

<p>Litt&eacute;raire contrari&eacute;, embarqu&eacute; par hasard dans des &eacute;tudes scientifiques et lanc&eacute; dans une prometteuse carri&egrave;re d&rsquo;informaticien, il r&eacute;alise au passage de la trentaine qu&rsquo;il a fait fausse route et s&rsquo;est &eacute;loign&eacute; de son projet de toujours&nbsp;: raconter des histoires. Apr&egrave;s s&rsquo;&ecirc;tre form&eacute; &agrave; l&rsquo;&eacute;criture de sc&eacute;nario, il se lance en autodidacte dans la r&eacute;alisation. Il tourne un premier film produit en 2007 (<em>Ciels de tra&icirc;ne</em>), puis un second en 2010 (<em>Orni&egrave;res</em>). <em>Mon amoureux</em>, produit par Les Films du Cygne, est son troisi&egrave;me film. Il travaille actuellement sur le d&eacute;veloppement d&rsquo;une s&eacute;rie en format court et d&rsquo;un projet de long m&eacute;trage.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Daniel Metge is 41 years old. He is very attached to the Rhones-Alpes Region from where he originates, and he belongs to the script-writers and directors association of Lyons called <em>Pr</em><em>&eacute;misses</em>.</p>

<p>&nbsp;</p>

<p>Controversial literary, casually embarked on a scientific academic path which directed&nbsp; him towards a potentially successfull IT career, Daniel realises at thirty years old that he is on a wrong journey that took him away from his passion&nbsp;: story-telling. After training as a script-writer, he projects himself on a self-taught journey as film director.&nbsp; He directed his first movie in 2007 (Ciels de Traine), then a second one in 2010 (Ornieres).</p>

<p>Mon Amoureux ( My Boyfriend), produced by Les Films du Cygne, is his third movie.&nbsp; He is currently working on a short-film series and a long-film.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Timothy Wood et Rohan Brooks', 
                   'urlImageRealisateur' => 'realisateurs/TimothyWoodEtRohanBrooks_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Tim Wood est r&eacute;alisateur de films. Ses sujets de pr&eacute;dilections sont &nbsp;principalement dans les domaines de la multiculturalit&eacute;, le communautaire, l&rsquo;&eacute;ducation et la promotion de la sant&eacute;. Ces derni&egrave;res ann&eacute;es Tim a travaill&eacute; &eacute;troitement avec des communaut&eacute;s Indig&egrave;nes australiennes &agrave; travers l&#39;Australie. Tim est une des personnalit&eacute;s montantes de l&#39;Audiovisuel australien.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Tim Wood shoots and directs&nbsp;film, tv and video; working predominantly in the cross-cultural, community development, education and health promotion environments. In recent years Tim has worked closely with Australian Indigenous communities across Australia. Tim has a strong reputation Internationally and is one of Australia&#39;s rising stars behind the camera.&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Shira Avni', 
                   'urlImageRealisateur' => 'realisateurs/ShiraAvni_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Professeur &agrave; la Concordia Film Animation, Shira Avni est dipl&ocirc;m&eacute;e d&rsquo;un MFA en Film/Video/New Media de la &laquo;&nbsp;School of the Art Institute of Chicago&nbsp;&raquo; (2003). Ses films (Petra&#39;s Poem (2012), Tying Your Own Shoes (2009), John and Michael (2005), and From Far Away (2000)) ont r&eacute;colt&eacute; plus de 30 prix et distinctions en ce compris le prestigieux &laquo;&nbsp;DOK Leipzig Golden Dove&nbsp;&raquo; et le &laquo;&nbsp;NHK Japan Prize&nbsp;&raquo;, et ont &eacute;t&eacute; projet&eacute;s dans plus de 100 festivals de par le monde et en t&eacute;l&eacute;vision. Ses films abordent les questions de la diff&eacute;rence et de la justice sociale. La recherche actuelle d&#39;Avni explore l&rsquo;intersection entre l&rsquo;invalidit&eacute;, l&#39;identit&eacute; et l&#39;ind&eacute;pendance avec des outils mutilm&eacute;dias.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Concordia Film Animation Professor Shira Avni holds an MFA in Film/Video/New Media from the School of the Art Institute of Chicago (2003), and has been creating award-winning animated shorts with the National Film Board of Canada since 1997. Avni&#39;s films <em>Petra&#39;s Poem </em>(2012), <em>Tying Your Own Shoes </em>(2009), <em>John and Michael </em>(2005), and <em>From Far Away</em> (2000) have garnered over 30 grants and awards, including the prestigious DOK Leipzig Golden Dove and the NHK Japan Prize, and have screened in over 100 festivals worldwide, as well as on CBC, PBS, Bravo, and TV5 television networks. Her films address questions of difference and social justice in ways that gently break down the viewer&#39;s habitual barriers. Avni&rsquo;s current research explores the intersection of disability, identity and independence through a combination of animation/documentary media and collaborative, community-based animation films.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Seung Jun Yi', 
                   'urlImageRealisateur' => 'realisateurs/SeungJunYi_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Seung-juin Yi vit en Cor&eacute;e et est r&eacute;alisateur de documentaires depuis 1999. Il a fait beaucoup de documentaires pour des cha&icirc;nes de t&eacute;l&eacute;vision cor&eacute;ennes. &laquo;&nbsp;Plante of snail&nbsp;&raquo; est le deuxi&egrave;me film documentaire long m&eacute;trage. Il a commenc&eacute; sa carri&egrave;re en r&eacute;alisant le documentaire &quot;la Guerre Invisible - le rapport India Bihar&quot; en 1999. Il a gagn&eacute; &agrave; S&eacute;oul la meilleure r&eacute;compense au Festival Documentaire Ind&eacute;pendant avec &quot;la Respiration, &agrave; une terre superflue&quot; (2002). Son int&eacute;r&ecirc;t principal comme un r&eacute;alisateur de documentaire est de d&eacute;couvrir quelque chose de nouveau, int&eacute;ressant, la tristesses et les valeurs quotidiennes des &ecirc;tres humains qui ne devraient pas facilement exprim&eacute;.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Seung-jun Yi is living in Korea and is director of documentaries since 1999. He made a lot of documentaries for Korean TV channels. Planet of Snail is the second feature length documentary film. He started his career joining the documentary &laquo;&nbsp;Invisible War - India Bihar report&nbsp;&raquo; in 1999 and won Seoul Independent Documentary Festival&#39;s best short documentary award with &laquo;&nbsp;Breathing, in a waste land&nbsp;&raquo; (2002). He also won the 20th Korea producer &amp; director&#39;s association award with &lt;like wild=&quot;&quot; flower=&quot;&quot; -=&quot;&quot; two=&quot;&quot; women&#39;s=&quot;&quot; story=&quot;&quot;&gt;(2007). His main interest as a documentary director is to discover something new, interesting, sad and valuable in everyday lives of human being which is not to be seen easily, that is, to show &#39;another world&#39; of &#39;this world&#39;.</p>

<p>&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jukka Karkkainen et JP Passi', 
                   'urlImageRealisateur' => 'realisateurs/JukkaKarkkainenEtJPPassi_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jukka K&auml;rkk&auml;inen est r&eacute;alisateur de films documentaires depuis 2003. Il est aussi le cofondateur de la maison de production Mouka Filmi. Filmographie: &laquo;&nbsp;Do you still remember Hilma Limperi&nbsp;&raquo; (2009), &laquo;&nbsp;The living room of the nation&nbsp;&raquo; (2009), &laquo;&nbsp;Tomorrow was yesterday&nbsp;&raquo; (2009), &laquo;&nbsp;The somking room&nbsp;&raquo; (2006), &laquo;&nbsp;Zetor &ndash; born free&nbsp;&raquo; (2005).</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jukka K&auml;rkk&auml;inen is director of documentary since 2003. He is the co-founder of Mouka Filmi production company. Filmography&nbsp;: &laquo;&nbsp;Do you still remember Hilma Limperi&nbsp;&raquo; (2009), &laquo;&nbsp;The living room of the nation&nbsp;&raquo; (2009), &laquo;&nbsp;Tomorrow was yesterday&nbsp;&raquo; (2009), &laquo;&nbsp;The somking room&nbsp;&raquo; (2006), &laquo;&nbsp;Zetor &ndash; born free&nbsp;&raquo; (2005).</p>

<p>&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Franco Dipietro', 
                   'urlImageRealisateur' => 'realisateurs/FrancoDipietro_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Franco Dipietro (1978) est dipl&ocirc;m&eacute; en production de l&rsquo;&eacute;cole polytechnique de Torino, charg&eacute; de cours de scenario &agrave; la Scuola Holden. Il est fondateur de Monete D&ucirc;, sa maison de production bas&eacute;e &agrave; Turin. Il a &eacute;t&eacute; choisi pour Lancement d&#39;EuropeanShort en 2008 et pour le Torino Film Lab en 2010. Il est r&eacute;alisateur, sc&eacute;nariste et conteur. Son dernier travail &quot;Ruggero&quot; a &eacute;t&eacute; achet&eacute; par Canal + en 2013 en France et en Afrique francophone. Le prochain court-m&eacute;trage, &quot;la Vie comme une pi&egrave;ce de monnaie&quot;, a &eacute;t&eacute; cofinanc&eacute;e par le Centre Audiovisuel croate. Il travaille actuellement sur un documentaire interactif appel&eacute; &quot;la Glaciation europ&eacute;enne&quot;, financ&eacute; par la Commission du Film de Turin.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Franco Dipietro, 1978, graduated in Production Engineering in Politecnico di Torino, Master in Storytelling at Scuola Holden. Founder of Due Monete, production company based in Turin. Selected for EuropeanShort Pitch in 2008, selected for Torino Film Lab in 2010. Director, screenwriter and storyteller. His last work &quot;Ruggero&quot; has been broadcasted by Canal+ in 2013 in France and francophone Africa. His next short, &quot;Life as a coin&quot;, has been funded by Croatian Audiovisual Centre. Franco is actually producing an interactive documentary called &quot;European Glaciation&quot;, funded by Turin Film Commission.&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Mark Michel', 
                   'urlImageRealisateur' => 'realisateurs/MarkMichel_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Mark Michel a grandi dans un petit village dans la Saxe, en Allemagne. Il a travaill&eacute; pendant plusieurs ann&eacute;es comme un auteur ind&eacute;pendant pour la radio publique allemande et comme cin&eacute;aste pour MDR, ARTE et 3sat. Avant cela il a &eacute;tudi&eacute; &agrave; Jena, Leipzig, &agrave; the bath (UK), &agrave; Toronto CA (la Sociologie) et la Politique Internationale et au Weimar Visual Communication. Depuis lors il travaille comme un cin&eacute;aste ind&eacute;pendant.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Mark Michel grew up in a small village in Saxony, in Germany. Worked for several years as a freelance writer for the radio German public radio and as a filmmaker for MDR, ARTE and 3sat. Before that he studied in Jena, Leipzig, Bath (UK) and Toronto (Canada) Sociology and International Politics and in Weimar Visual Communication. Since then he is working as a freelance filmmaker and director.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Filip Jacobson', 
                   'urlImageRealisateur' => 'realisateurs/FilipJacobson_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Filip Jacobson est un jeune r&eacute;alisateur et ce court-m&eacute;trage a &eacute;t&eacute; realize dans le cadre de ses etudes cin&eacute;matographiques. Le film a &eacute;t&eacute; projet&eacute; dans de nombreux festivals (Los Angeles, Israel, Slov&eacute;nie et Pologne) et a re&ccedil;u le &ldquo;Students Jury price at Krakow Film Festival 2012&rdquo; et le &ldquo;Best documentary, Media Days 2013&rdquo;, en Slov&eacute;nie.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Filip Jacobson is a young director and this short film was realize within the framework of its film studies. The movie was shown in a lot of festivals (Los Angeles, Israel, Slovenia and Poland) and received &quot; Students Jury price at Krakow Film Festival on 2012 &quot; and &quot; Best documentary, Media Days on 2013 &quot;, in Slovenia.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Ted Evans', 
                   'urlImageRealisateur' => 'realisateurs/TedEvans_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>L&#39;auteur / r&eacute;alisateur Ted Evans a pass&eacute; plusieurs ann&eacute;es &agrave; aiguiser ses comp&eacute;tences tant dans des projets de film ind&eacute;pendants que dans le cadre des organisations comme la BBC. La Fin est son deuxi&egrave;me court-m&eacute;trage financ&eacute; par le BSLBT.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Writer / Director Ted Evans has spent several years honing his skills in both independent film projects and also as part of organisations such as the BBC. The End is his second short film funded by the BSLBT.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Catherine  Scott', 
                   'urlImageRealisateur' => 'realisateurs/CatherineScott_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Catherine Scott est une r&eacute;alisatrice/Productrice ind&eacute;pendante en Australie. Elle &eacute;tait un ancien membre de &laquo;&nbsp;Paper Tiger TV&nbsp;&raquo;&nbsp; (collectif) pendant dix ans &agrave; New York. Elle &eacute;tait Directrice/Co-scenariste de &laquo;&nbsp;Selling Sickness&nbsp;&raquo;&nbsp; et Directrice/Co-productrice de &laquo;&nbsp;Selling Sickness&nbsp;&raquo; prim&eacute; partout dans le monde.</p>

<p>&nbsp;Cathy &eacute;tait coordinatrice et Coproductrice de &laquo;&nbsp;the Gulf Crisis TV Project&nbsp;&raquo;, une s&eacute;rieen dix &eacute;pisodes sur la Guerre du Golfe r&eacute;alis&eacute;s par &laquo;&nbsp;Paper Tiger TV&nbsp;&raquo;&nbsp; et le R&eacute;seau &laquo;&nbsp;Deep</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p><strong>Catherine Scott</strong> is an independent Director/Producer in Australia. She was a former member of the Paper Tiger TV collective for ten years in New York City. She was Director/Co-writer of <em>Selling Sickness</em> and Director/Co-producer of the Walkley award-winning <em>Business Behind Bars</em> screened on SBS and many TV markets around the world. Her productions include <em>Breathless</em>; <em>Drawing the Line at Pitston</em> and <em>Staking a Claim in Cyberspace</em>. She has been a frequent Coordinating Producer/Director for Deep Dish TV producing <em>Who&rsquo;s Afraid of the Little Yellow School Bus?, Lock Down USA</em>, (WNET) <em>The Last Graduation</em>. Cathy was a coordinator and Co-producer of the Gulf Crisis TV Project, a timely ten-part series about the Gulf War by Paper Tiger TV and the Deep Dish Network, aired on PBS affiliates nationally, Channel Four (UK), SBS television (Australia). Catherine produced <em>TV Connections</em>, which was part of the <em>Signal to Noise</em> series, and ITVS funded project broadcast on the PBS network in the USA.<br />
<br />
&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Lars Feldball Petersen', 
                   'urlImageRealisateur' => 'realisateurs/LarsFeldballPetersen_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>&nbsp;Producteur et r&eacute;alisateur, Lars Feldballe a r&eacute;alis&eacute; pendant les 20 ans un grand nombre de documentaires pour la t&eacute;l&eacute;vision - DR TV ou TV2/DENMARK et des stations de TV internationales.<br />
Il est profond&eacute;ment impliqu&eacute; dans toutes les &eacute;tapes de ses projets. Il a une grande exp&eacute;rience de tournage dans des pays du monde entier.<br />
En 2008 il a gagn&eacute; le Prix de Journalisme du Parlement europ&eacute;en dans la cat&eacute;gorie TV pour le documentaire LA BATAILLE SUR DES PRODUITS CHIMIQUES (2008).</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Producer and Director Lars Feldballe has over the past 20 years directed a large number of documentaries for primetime television &ndash; DR TV or TV2/Denmark and international tv-stations.</p>

<p>He is deeply involved in all stages of his projects. &nbsp;He has experience in filming in countries all over the world, working with both professionals.</p>

<p>In 2008 he won the European Parliament Journalism Prize in the Category TV for the documentary THE BATTLE ON CHEMICALS (2008).</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Sophie Hyde', 
                   'urlImageRealisateur' => 'realisateurs/SophieHyde_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Sophie Hyde est la fondatrice et co-directrice de Closer Production.</p>

<p>Elle aime r&eacute;aliser des fictions provocatrices et intimes, des films documentaires et chor&eacute;graphiques&nbsp;: <em>Bittersweet</em> <em>Freedom</em> (2009) for SBS, <em>Ok</em>, <em>Let&#39;s</em> <em>Talk</em> <em>About</em> <em>Me</em> (nominated for an ATOM award 2005), <em>Beyond</em> <em>Beliefs</em> (2007) (winner of IQ One World Award 2009) and <em>Risking</em> <em>It</em> <em>All:</em> <em>Initial</em> <em>D </em>(2007 part of a series for SBS). Son court-m&eacute;trage <em>My</em> <em>Last</em> <em>Ten</em> <em>Hours</em> <em>With</em> <em>You</em> et d&rsquo;autres documentaires qu&rsquo;elle a r&eacute;alis&eacute;s ont re&ccedil;u de nombreux prix internationaux.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Sophie Hyde is a founder and co‐director of Closer Productions. She makes provocative and intimate drama and documentary films, as well as working as a video artist for dance and text based performance&nbsp;: <em>Bittersweet</em> <em>Freedom</em> (2009) for SBS, <em>Ok</em>, <em>Let&#39;s</em> <em>Talk</em> <em>About</em> <em>Me</em> (nominated for an ATOM award 2005), <em>Beyond</em> <em>Beliefs</em> (2007) (winner of IQ One World Award 2009) and <em>Risking</em> <em>It</em> <em>All:</em> <em>Initial</em> <em>D </em>(2007 part of a series for SBS). Her short film <em>My</em> <em>Last</em> <em>Ten</em> <em>Hours</em> <em>With</em> <em>You</em> and Her documentaries has won numerous awards</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Sophie Robert', 
                   'urlImageRealisateur' => 'realisateurs/SophieRobert_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>A partir de 1997, Sophie Robert s&rsquo;installe &agrave; Paris et devient auteure de fictions et de documentaires pour la t&eacute;l&eacute;vision. Elle sera successivement sc&eacute;nariste, script doctor et directrice de collection, avant de passer &agrave; la r&eacute;alisation de documentaires. En 2011, elle r&eacute;alise &laquo; Le Mur ou la psychanalyse &agrave; l&rsquo;&eacute;preuve de l&rsquo;autisme &raquo;, premier volet d&rsquo;une s&eacute;rie documentaire sur la psychanalyse. Son deuxi&egrave;me documentaire, le long m&eacute;trage &quot;Quelque chose en plus, autisme et ABA : le bonheur d&rsquo;apprendre&quot; est sorti en salles le 2 avril 2014. Sophie Robert vit aujourd&rsquo;hui &agrave; Lille. Elle poursuit son travail de r&eacute;alisatrice tout en d&eacute;veloppant des fictions, clips et documentaires d&rsquo;autres r&eacute;alisateurs au sein de la soci&eacute;t&eacute; Oc&eacute;an Invisible Productions.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Sophie Robert settles down in Paris in 1997 and becomes an author of fictions and documentaries for television. She will be successively a scriptwriter, script doctor and collection manager, before she decided to start directing documentaries. In 2011, she direct &laquo;&nbsp;Le Mur ou la psychanalyse &agrave; l&rsquo;&eacute;preuve de l&rsquo;autisme&nbsp;&raquo;, first of a series about psychoanalysis. Her second documentary &laquo;&nbsp;Quelque chose en plus, autisme et ABA&nbsp;: le bonheur d&rsquo;apprendre&nbsp;&raquo; was released in theaters on April 2, 2014. Nowadays she lives in Lille where she pursues her work as a director while developing fictions, clips and documentaries of other Invisible Ocean Productions directors.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Luc Boland', 
                   'urlImageRealisateur' => 'realisateurs/LucBoland_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>est un imb&eacute;cile</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p></p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Shahriar Pourseyedian', 
                   'urlImageRealisateur' => 'realisateurs/ShahriarPourseyedian_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Shahriar Pourseyedian, n&eacute; en Iran, est dipl&ocirc;m&eacute; de l&#39;Universit&eacute; d&rsquo;Art de T&eacute;h&eacute;ran. Il est actuellement professeur dans l&rsquo;enseignement sup&eacute;rieur. Il a d&eacute;but&eacute; en 2005 en tant qu&#39;auteur et r&eacute;alisateur et a obtenu plus de 40 prix en festivals.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Shahriar Pourseyedian was born in Iran and graduated from the Tehran University of Art. He is currently a high school teacher. He made his debut as a film writer and director in 2005 and has won more than 40 awards since then.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Joseph Le Baron', 
                   'urlImageRealisateur' => 'realisateurs/JosephLeBaron_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>En 2011, Joseph LeBaron et Travis Pitcher ont cr&eacute;&eacute; ensemble l&rsquo;agence The Good Line, dont le but est de raconter des histoires &agrave; travers des films documentaires et les nouveaux m&eacute;dias. Avec l&rsquo;exp&eacute;rience de Joseph dans la publicit&eacute; et celle de Travis dans le film documentaire, le duo se r&eacute;unit pour cr&eacute;er et partager des histoires authentiques. L&rsquo;agence The Good Line veut capturer la vie comme elle est et ainsi montrer que la beaut&eacute; se trouve partout.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Joseph LeBaron and Travis Pitcher came together in early 2011 to form The Good Line, a creative agency focused on telling stories through documentary film and new media marketing. With Joseph&#39;s background in ad copywriting and Travis&#39; training in documentary film, the pair works together to capture and share authentic human stories. The Good Line aims to &quot;capture life as it is&quot;&ndash;to portray honest moments and to show that there is beauty all around us.&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Laure de Clermont', 
                   'urlImageRealisateur' => 'realisateurs/LaureDeClermont_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Laure de Clermont (1983) est une com&eacute;dienne et r&eacute;alisatrice fran&ccedil;aise.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Laure de Clermont (1983) is a french actress and director.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Ray Jacobs', 
                   'urlImageRealisateur' => 'realisateurs/RayJacobs_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Ray Jacobs utilise les supports de l&#39;image, le cin&eacute;ma et le mouvement pour mettre en &eacute;vidence l&#39;int&eacute;grit&eacute; et la beaut&eacute; de l&#39;art au quotidien. Ray est un artiste exp&eacute;riment&eacute; qui a travaill&eacute; au cours des 15 derni&egrave;res ann&eacute;es en tant qu&#39;interpr&egrave;te et r&eacute;alisateur, &agrave; la cr&eacute;ation d&#39;&oelig;uvres originales et puissantes, avec une grande vari&eacute;t&eacute; d&#39;entreprises, d&#39;artistes et de groupes participatifs, collaborant en particulier avec des artistes handicap&eacute;s.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Ray Jacobs uses the mediums of image, film and movement to highlight the integrity and beauty of art found in everyday life. Ray is an experienced artist who has worked over the last 15 years as a performer and director, creating imaginative and powerful works with a wide variety of companies, performers and participatory groups notably collaborating with disabled artists.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Michelle Friedline', 
                   'urlImageRealisateur' => 'realisateurs/MichelleFriedline_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Michelle&nbsp;Friedline a obtenu un MFA du programme en film documentaire de la Wake Forest University. Elle travaille actuellement comme productrice et comme assistante &agrave; l&#39;Universit&eacute; de Floride. Dans ses films, elle a tendance &agrave; raconter l&#39;histoire de personnes qui se confrontent &agrave; leurs limites avec dignit&eacute;. Elle est convaincue que les films documentaires peuvent &ecirc;tre un outil int&eacute;ressant pour inspirer des changements de soci&eacute;t&eacute; et pour promouvoir diff&eacute;rentes cultures. Dans ses films, elle essaie de provoquer une r&eacute;flexion et d&#39;encourager une plus grande tol&eacute;rance.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Michelle Friedline received an MFA from the Documentary Film Program at Wake Forest University. She currently works as a video producer and adjunct professor at the University of Florida. In her films, she tends to tell the stories of people who face their limits with dignity. She believes documentaries can be a valuable tool to inspire social change and to promote different cultures. In her films, she tries to trigger reflection and to encourage greater tolerance and understanding among people.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Edward Young Lee', 
                   'urlImageRealisateur' => 'realisateurs/EdwardYoungLee_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Edward Young Lee&nbsp;est dipl&ocirc;m&eacute; de l&#39;Universit&eacute; Harvard o&ugrave; il a &eacute;tudi&eacute; la gestion et l&#39;&eacute;conomie. Avant de fonder Jubilee Project, Eddie a travaill&eacute; comme directeur des nouveaux m&eacute;dias pour la campagne de Barack Obama, comme directeur des nouveaux m&eacute;dias pour le minist&egrave;re am&eacute;ricain de l&#39;Education et plus r&eacute;cemment comme directeur associ&eacute; de la communaut&eacute; de AAPI &agrave; la Maison-Blanche.&nbsp;</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Edward Young Lee&nbsp;is a graduate of Harvard University where he studied in Government and Economics. Before founding Jubilee Project, Eddie worked as State New Media Director for the Barack Obama campaign, New Media Director for the U.S. Department of Education and most recently as the AAPI community Associate Director at the White House Office of Public Engagement.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Amir Masoud Soheili', 
                   'urlImageRealisateur' => 'realisateurs/AmirMasoudSoheili_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Masoud Soheili a obtenu un baccalaur&eacute;at en droit de l&#39;Universit&eacute; Ferdowsi. Il travaille depuis plus de sept ans dans l&#39;industrie du cin&eacute;ma comme assistant r&eacute;alisateur. Il est l&rsquo;auteur de plusieurs courts-m&eacute;trages, comme &quot;Ceci est l&#39;acte de M. le docteur!&quot; (2010) et &quot;Pari&quot; (2015), qui ont tous deux &eacute;t&eacute; s&eacute;lectionn&eacute;s et r&eacute;compens&eacute;s dans des festivals nationaux et internationaux.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Masoud Soheili earned a BA degree in Law from Ferdowsi University. He has been working for more than seven years in the film industry as an Assistant Director.&nbsp; He enjoys writing scripts. &quot;This is the deed Mr. Doctor!&quot; (2010) ,&quot;Pari&quot;(2015) were both selected and awarded in some national and&nbsp;international festivals.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Miles Jay', 
                   'urlImageRealisateur' => 'realisateurs/MilesJay_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Miles Jay a r&eacute;alis&eacute; des clips et des publicit&eacute;s pour de nombreux clients internationaux, comme Facebook ou Google. Son travail repousse les fronti&egrave;res de la narration traditionnelle pour le rendre attractive.</p>

<p>Le travail de Miles a &eacute;t&eacute; &eacute;norm&eacute;ment salu&eacute;, notamment au One Show Film Festival, au Webby Awards et au Saatchi &amp; Saatchi New Directors Showcase. En juillet 2015, il a &eacute;t&eacute; f&eacute;licit&eacute; au Young Directors Awards, en gagnant le premier prix dans la cat&eacute;gorie Broadcast NA et le second prix dans la cat&eacute;gorie Short Film NA.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Miles Jay directed music videos and commercial spots for numerous international clients, such as Facebook or Google. His work pushes the boundaries of traditional narrative filmmaking into the interactive realm.</p>

<p>Miles&rsquo; work has accumulated numerous accolades and shortlists, including The One Show Film Festival, the Webby Awards and the Saatchi &amp; Saatchi New Directors Showcase. In July 2015, Miles was recognized at The Young Directors awards, winning first prize in the Broadcast NA category and second prize in Short Film NA.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Pierre Verdez', 
                   'urlImageRealisateur' => 'realisateurs/PierreVerdez_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Depuis 25 ans, Pierre Verdez assure la double fonction de r&eacute;alisateur et de cadreur. Apr&egrave;s avoir fait ses armes dans le film institutionnel, il pige pour diff&eacute;rentes cha&icirc;nes et consacre aujourd&rsquo;hui la plupart de son travail &agrave; concevoir des images sur des reportages et des documentaires. En parall&egrave;le, il &eacute;crit et r&eacute;alise ses propres films, comme &laquo;&nbsp;M&eacute;moire de Picardie&nbsp;&raquo; pour France 3, France 5 et la cha&icirc;ne Histoire ou &laquo;&nbsp;La Fuggere&iuml;&nbsp;&raquo; pour &quot;Faut pas r&ecirc;ver&quot; sur France 3, et des s&eacute;ries comme &laquo;&nbsp;L&rsquo;Europe &agrave; vol d&rsquo;oiseau&nbsp;&raquo; pour Arte.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>For 25 years, Pierre Verdez has been both director and camera operator. Having cut his teeth in the institutional film industry, he now works as a freelance for different channels, and devotes most of his time to documentaries and reports. He also writes et directs his own films, including &laquo;&nbsp;M&eacute;moire de Picardie&nbsp;&raquo; for France 3, France 5 and Histoire and &laquo;&nbsp;La Fuggere&iuml;&nbsp;&raquo; for France 3 &laquo;&nbsp;Faut par r&ecirc;ver&nbsp;&raquo; and series like &laquo;&nbsp;L&#39;Europe &agrave; vol d&#39;oiseau&nbsp;&raquo; for Arte.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Tarik Ben Salah', 
                   'urlImageRealisateur' => 'realisateurs/TarikBenSalah_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Tarik Ben Salah est n&eacute; le 9 octobre 1982 &agrave; Argenteuil. C&#39;est pendant un volontariat civil qu&#39;il a d&eacute;couvert le monde du handicap. Educateur aupr&egrave;s de personnes handicap&eacute;es depuis quelques ann&eacute;es et passionn&eacute; de cin&eacute;ma, autodidacte, il prend des cours de cin&eacute;ma, de r&eacute;alisation, d&rsquo;&eacute;criture et de montage sur le net. En 2010, avec des jeunes en d&eacute;crochage scolaire, il r&eacute;alise &quot;Ne baisse pas les bras&quot; pour le compte de la mairie de Suresnes. En 2013, il r&eacute;alise &quot;Chamalow&quot; et le pr&eacute;sente &agrave; Cannes au festival Entr&rsquo;2 Marches. La m&ecirc;me ann&eacute;e, il tourne un autre court m&eacute;trage &ldquo;Wesh bien&rdquo; pour le Festival des Moktars, et esp&egrave;re avec ce film changer les mentalit&eacute;s sur les musulmans et de casser les pr&eacute;jug&eacute;s. En 2014, il tourne un moyen m&eacute;trage &quot;Entre les mots&nbsp;&raquo;, la suite de &quot;Chamalow&quot;. Il travaille actuellement sur un long m&eacute;trage, dernier volet de cette trilogie, et sur un projet de web s&eacute;rie.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Tarik Ben Salah was born October 9, 1982 in Argenteuil. It was during a civil volunteering that he discovered the world of disability. Educator with people with disabilities for several years and movie fan, self-taught, he takes film courses on directing, writing and editing on the net. In 2010, with young people dropping out, he directed &laquo;&nbsp;Ne baisse pas les bras&nbsp;&raquo; on behalf of the municipality of Suresnes. In 2013, he directed &quot;Chamalow&quot; and presents it to Cannes&rsquo; Festival Entr&#39;2 Marche. The same year, he directs another short film &quot;Wesh bien&quot; for Moktars Festival, and hope with this film to change opinions on Muslims and break prejudices. In 2014, he turns an average film &quot; Entre les mots&quot;, following &quot; Chamalow&quot;. He is currently working on a feature film, the last part of this trilogy, and a web series project.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Cathy Heffernan', 
                   'urlImageRealisateur' => 'realisateurs/CathyHeffernan_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Cathy Heffernan est journaliste &agrave; The&nbsp;Guardian. Elle a travaill&eacute; comme documentaliste &agrave; la t&eacute;l&eacute;vision, puis a coproduit &laquo;&nbsp;Deaf Sisterhood&nbsp;&raquo; avec Redbird Media pour The British Sign Language Broadcasting Trust. &laquo;&nbsp;Crossing the Divide&nbsp;&raquo; est son premier film en tant que r&eacute;alisatrice.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Cathy Heffernan is a journalist at The&nbsp;Guardian. Previously, she worked as a TV researcher. She co-produced &laquo;&nbsp;Deaf Sisterhood&nbsp;&raquo; with Redbird Media for the BSL Zone. &laquo;&nbsp;Crossing the Divide&nbsp;&raquo; is her first film as a director.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Pedro Solis Garcia', 
                   'urlImageRealisateur' => 'realisateurs/PedroSolisGarcia_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Pedro Sol&iacute;s vient du monde du jeu vid&eacute;o. Il a particip&eacute; en tant qu&#39;artiste 3D dans les films d&#39;animation &quot;Tadeo Jones&quot; et &quot;Tadeo Jones and the Temple of Doom&quot;. &quot;Le Bruxa&quot;, son premier film a obtenu plusieurs r&eacute;compenses dont le Prix Goya 2011 pour le meilleur court m&eacute;trage d&#39;animation. &quot;Cuerdas&quot; est son deuxi&egrave;me court-m&eacute;trage en tant que sc&eacute;nariste et r&eacute;alisateur.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Pedro Sol&iacute;s comes from the video game world. He has participated as a 3D Artist in the animated shorts &quot;Tadeo Jones&quot; and &quot;Tadeo Jones and the Temple of Doom&quot;. He received some major prices, including the 2011 Goya Award for Best Animated Short Film, for his first film &laquo;&nbsp;The Bruxa&nbsp;&raquo;. &quot;Strings&quot; is his second short film as a scriptwriter and director.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jessica Ashman', 
                   'urlImageRealisateur' => 'realisateurs/JessicaAshman_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jessica Ashman est une r&eacute;alisatrice de films d&rsquo;animation prim&eacute;e. Elle a r&eacute;cemment obtenu une ma&icirc;trise en animation au Royal College of Art de Londres. Elle aime animer des objets minuscules et cr&eacute;er des mondes imaginaires. Comme r&eacute;aliste, ses clients sont notamment la BBC, Channel. Elle r&eacute;alise aussi de nombreux projets ind&eacute;pendants. Ses projets ont &eacute;t&eacute; appr&eacute;ci&eacute;s par UK Film Council, DigiCult et B3 Media. En 2011, &laquo;&nbsp;Fixing Luka&nbsp;&raquo; &eacute;tait en comp&eacute;tition dans plus de 30 festivals &agrave; travers le monde. Elle travaille aussi en freelance comme animatrice pour des films publicitaires.&nbsp;</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jessica Ashman is an award winning animator and director. She recently earned a master&rsquo;s degree in Animation at the Royal College of Art in London. She loves moving things in tiny increments, creating imaginative worlds that are too epic for their own good. As a director, her clients include the BBC, Channel 4 and numerous independent film productions, both personal and commission based. Her independent short film projects as a writer and director have seen her working with the likes of UK Film Council, DigiCult and B3 Media. In 2011 &ldquo;Fixing Luka&rdquo; competed in over 30 festivals worldwide. She also works freelance as an animator and modelmaker on advertisements.&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Sebastian Alfie', 
                   'urlImageRealisateur' => 'realisateurs/SebastianAlfie_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Sebasti&aacute;n Alfie est n&eacute; &agrave; Buenos Aires en 1971. Il a &eacute;tudi&eacute; le cin&eacute;ma avec le r&eacute;alisateur Jose Martinez Suarez. Il a travaill&eacute; comme assistant r&eacute;alisateur sur diff&eacute;rents films, dont &quot;Le m&eacute;decin de campagne&quot; &agrave; la New York Film Academy. Ses trois premiers films, tourn&eacute;s &agrave; Buenos Aires et Madrid, ont remport&eacute; plusieurs prix lors de festivals locaux et internationaux.<br />
Son film documentaire &quot;Gabor&quot; a remport&eacute; le Prix du public et du meilleur r&eacute;alisateur au Festival de Malaga et le Prix du meilleur documentaire Gaud&iacute;. Il vit aujourd&rsquo;hui &agrave; Madrid et est membre de l&#39;Acad&eacute;mie de Cin&eacute;ma catalan.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Sebastian Alfie was born in Buenos Aires in 1971. He studied film with director Jose Martinez Suarez. He has worked as an assistant director on several films, including &quot;The Country Doctor&quot; at the New York Film Academy. His first three films, shot in Buenos Aires and Madrid, have won several awards at local and international festivals.<br />
His documentary film &quot;Gabor&quot; won the Audience Award and Best Director at the Festival of Malaga and the Gaud&iacute; Award for Best Documentary. He now lives Madrid and is a member of the Catalan Film Academy.&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Enric Ribes & Oriol Martinez', 
                   'urlImageRealisateur' => 'realisateurs/EnricRibes&OriolMartinez_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Oriol Martinez et Enric Ribes sont dipl&ocirc;m&eacute;s en &eacute;tude des m&eacute;dias. Ils ont commenc&eacute; leur aventure dans le domaine de la fiction courte afin de trouver leur v&eacute;ritable passion : le monde du documentaire, une forme d&#39;expression libre et une fa&ccedil;on de d&eacute;couvrir de nouvelles cultures.<br />
Ils pr&eacute;parent leur deuxi&egrave;me documentaire &quot;Qian&rsquo;s Obsession&quot;, l&#39;histoire d&#39;une usine &agrave; textiles chinoise tr&egrave;s particuli&egrave;re o&ugrave; des &laquo;castells&raquo; (tours humaines) ont lieu &agrave; la fin de la journ&eacute;e de travail.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Oriol Martinez and Enric Ribes are graduates in Media Studies from Barcelona. They started their adventure in the field of short fiction in order to find their true passion: the world of documentary, a free form of expression and a way to experience new cultures.<br />
They are currently filming their second documentary, &laquo;&nbsp;Qian&rsquo;s Obsession&nbsp;&raquo;, the story of a very special Chinese textile factory where &ldquo;castells&rdquo; (human towers) take place at the end of the workday.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Diego Robles', 
                   'urlImageRealisateur' => 'realisateurs/DiegoRobles_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Diego Robles est originaire de San Diego et &eacute;tudie actuellement &agrave; la Los Angeles Film School. Avant de d&eacute;m&eacute;nager &agrave; Hollywood, il travaillait pour une soci&eacute;t&eacute; de production comme op&eacute;rateur de cam&eacute;ra et comme monteur pour des longs m&eacute;trages, des courts m&eacute;trages et des publicit&eacute;s.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Diego Robles was born in San Diego and is currently studying at the Los Angeles Film School. Before moving up to Hollywood, he worked for a production company as a Camera Operator and Editor for feature films, short films and commercials.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Pierre-Louis Levacher', 
                   'urlImageRealisateur' => 'realisateurs/Pierre-LouisLevacher_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Apr&egrave;s avoir r&eacute;alis&eacute; de nombreux courts m&eacute;trages avec des com&eacute;diens sourds, Pierre-Louis Levacher, interpr&egrave;te en langue des signes, est actuellement r&eacute;alisateur pour l&rsquo;&eacute;mission &laquo;&nbsp;L&rsquo;oeil et la main&nbsp;&raquo; sur France 5. Il s&rsquo;agit d&rsquo;une &eacute;mission de t&eacute;l&eacute;vision pr&eacute;sent&eacute;e en langue des signes, qui s&rsquo;adresse aux sourds comme aux entendants.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>After directing several short films with deaf actors, Pierre-Louis Leacher, a sign language interpreter, now works as a director for the TV show &laquo;&nbsp;L&rsquo;oeil et la main&nbsp;&raquo;. It is presented in sign language.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jake Willis', 
                   'urlImageRealisateur' => 'realisateurs/JakeWillis_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jake Willis est un cin&eacute;aste et photographe de Melbourne qui a r&eacute;cemment termin&eacute; son baccalaur&eacute;at en cin&eacute;ma et t&eacute;l&eacute;vision &agrave; l&#39;Universit&eacute; de Swinburne. &quot;Here In Silence&quot; est son premier film comme auteur et r&eacute;alisateur.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jake Willis is a filmmaker and photographer from Melbourne who has recently completed his bachelor of film and television at Swinburne University. &ldquo;Here In Silence&rdquo; is his first official short film that he wrote and directed.&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Carolina Giammetta', 
                   'urlImageRealisateur' => 'realisateurs/CarolinaGiammetta_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Carolina Giammetta est une sc&eacute;nariste et r&eacute;alisatrice prim&eacute;e. En tant qu&#39;actrice, elle a travaill &agrave; la t&eacute;l&eacute;vision, au cin&eacute;ma, au th&eacute;&acirc;tre et &agrave; la radio avec Mike Leigh, Julian Jarrold, Armando Lannucci, Roger Michell, Samantha Morton, Jim Loach et bien d&#39;autres.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Carolina Giammetta is an award winning writer and director. As an actress she has worked in TV, film, theatre and radio with Mike Leigh, Julian Jarrold, Armando Iannucci, Roger Michell, Samantha Morton, Jim Loach and many more.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Scott Anderson', 
                   'urlImageRealisateur' => 'realisateurs/ScottAnderson_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Scott Anderson est un homme ordinaire qui essaie tous les jours d&rsquo;&ecirc;tre un p&egrave;re extraordinaire pour ces deux enfants. Il partage certaines de ses exp&eacute;riences en tant que parent via son blog, StarBackMoonBack.com. Il est le cr&eacute;ateur de &laquo;&nbsp;I Love Grilled Cheese&nbsp;&raquo;, un court m&eacute;trage mettant en sc&egrave;ne son fils Maxwell, qui souffre de trisomie 21, et sa fille Libby, qui a &eacute;t&eacute; adopt&eacute;e en Chine. Le film a &eacute;t&eacute; cr&eacute;&eacute; en 2013, quand Max et Libby ont commenc&eacute; &agrave; participer &agrave; la campagne nationale d&rsquo;affichage de la Soci&eacute;t&eacute; canadienne du syndrome de Down. Il a &eacute;t&eacute; produit dans le but qu&rsquo;un jour, quelque part, un parent qui viendrait de recevoir un diagnostic de trisomie 21 pour son enfant pourrait le voir et se rendre que tout se passera bien - en fait, m&ecirc;me mieux que bien.&nbsp;</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Scott Anderson is an average guy trying every day to be an above average papa to two extraordinary kids. He shares some of his parenting learning experiences through his blog, StarBackMoonBack.com. He is the creator of &laquo;&nbsp; I Love Grilled Cheese&nbsp;&raquo;, a short film starring his son Maxwell, who has Down syndrome, and his daughter Libby, who was adopted from China. The movie was created in 2013, when Max and Libby became part of the Canadian Down Syndrome Society&rsquo;s national billboard campaign. It was produced in the hope that someday, somewhere, someone might see it at a time when they are receiving news their child may have Down syndrome, and through the film they would see that everything is going to be okay - in fact, that life will be better than okay.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Anja Hiddinga & Jascha Blume', 
                   'urlImageRealisateur' => 'realisateurs/AnjaHiddinga&JaschaBlume_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Anja Hiddinga (1953) a r&eacute;alis&eacute; plusieurs films sur la langue des signes et la surdit&eacute; depuis 2000. Elle est assistante au d&eacute;partement d&#39;anthropologie de l&#39;Universit&eacute; d&#39;Amsterdam. Elle &eacute;crit &eacute;galement des essais et est r&eacute;dactrice&nbsp;en chef du magazine Woord &amp; Gebaar.</p>

<p>Jascha Blume (1987) est n&eacute; sourd. Il a &eacute;tudi&eacute; pendant un an &agrave; l&#39;Universit&eacute; Gallaudet, Washington DC, la seule universit&eacute; pour les sourds dans le monde. Il est dipl&ocirc;m&eacute; de l&#39;Acad&eacute;mie des Arts de Rietveld &agrave; Amsterdam et travaille maintenant comme un vid&eacute;o-artiste ind&eacute;pendant &agrave; Amsterdam et &agrave; Bologne.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Anja Hiddinga (1953) has been involved in the production, direction and editing of independent film projects on sign language and deafness since 2000. She works as an assistant teacher at the University of Amsterdam. She also writes essays and is the Editor-in-chief of Woord &amp; Gebaar magazine.&nbsp;</p>

<p>Jascha Blume (1987) is born deaf. He studied for a year at Gallaudet University, Washington DC, the only university for the deaf in the world. He graduated from the Rietveld Art Academy in Amsterdam and now works as an independent video-artist in Amsterdam and Bologna.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Denise Janzee', 
                   'urlImageRealisateur' => 'realisateurs/DeniseJanzee_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Denise Janz&eacute;e (1966) est dipl&ocirc;m&eacute;e de l&#39;Acad&eacute;mie du Film des Pays-Bas et travaille comme monteuse depuis plus de 20 ans, contribuant &agrave; &ldquo;The Eye of the Day&rdquo; (2001) de Leonard Retel Helmich et &ldquo;La Forme de la Lune&rdquo; (2004), ainsi que &ldquo;Ochtenzwemmers&rdquo; (2001) de Nicole van Kilsdonk. Apr&egrave;s avoir r&eacute;alis&eacute; plusieurs courts m&eacute;trages documentaires, elle sort en 2008 son premier long m&eacute;trage documentaire, &ldquo;Seul dans le monde&rdquo; (2008). &ldquo;Le Combat de Jamey&rdquo; (2013) est son dernier court-m&eacute;trage.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Denise Janz&eacute;e (1966) graduated from the Netherlands Film Academy and has worked as a film editor for more than 20 years, contributing to Leonard Retel Helmich&#39;s &ldquo;The Eye of the Day&rdquo; (01) and &ldquo;Shape of the Moon&rdquo; (04), as well as &ldquo;Ochtenzwemmers&rdquo; (01) by Nicole van Kilsdonk. After directing several documentary shorts, she made her documentary feature debut with &ldquo;Alone in the World&rdquo; (08). &ldquo;Jamey&#39;s Fight&rdquo; (13) is her latest short film.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Adam Goldhammer', 
                   'urlImageRealisateur' => 'realisateurs/AdamGoldhammer_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Adam Goldhammer est diplom&eacute; en th&eacute;&acirc;tre, philosophie et psychologie de l&#39;Universit McGill. Pendant ses &eacute;tudes, Adam a mont&eacute; la soci&eacute;t&eacute; de production Purple Duck. Il a &eacute;crit, dirig&eacute; et jou&eacute; dans de nombreuses vid&eacute;os comiques, qui ont eu un certain succ&egrave;s sur internet. En 2011, il a continu&eacute;&agrave; explorer les possibilit&eacute;s de l&#39;internet avec &quot;Little Cat Version of Me&quot;, une fiction qui suit deux acteurs dans leur tentative de devenir c&eacute;l&egrave;bre sur YouTube. La m&ecirc;me ann&eacute;e, il a &eacute;crit, dirig&eacute; et produit son premier court-m&eacute;trage &quot;1-800-CHOICES&quot;. Il est actuellement en train de d&eacute;velopper un long-m&eacute;trage et une sitcom, tout en r&eacute;alisant des clips pour des jeunes artistes.&nbsp;</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Adam Goldhammer gradutated in Drama, Philosophy and Psychology from McGill University. While studying, Adam started his own production company, Purple Duck. He wrote, directed and acted in numerous comedy videos on the internet. in 2011, he kept on exploring the possibilites given by the internet with &quot;Little Cat Version of Me&quot;, a fiction following two actors in their quest for YouTube stardom. The same year, &nbsp;he wrote, directed and produced his first short &quot;1-800-CHOICES&quot;. He is currently developping his first feature film and a sitcom, while directing music videos for up-and-coming artists.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Clark Matthews', 
                   'urlImageRealisateur' => 'realisateurs/ClarkMatthews_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Clark Matthews est le cocr&eacute;ateur, sc&eacute;nariste, r&eacute;alisateur et monteur du film prim&eacute; &laquo;&nbsp;Krutch&nbsp;&raquo;, son premier film. R&eacute;alis&eacute; en collaboration avec la com&eacute;dienne&nbsp;Mia Gimp, il explore des probl&eacute;matiques importantes pour Clark : le handicap, la perception et l&#39;authenticit&eacute; &agrave; travers la repr&eacute;sentation et la paternit&eacute;. Il r&eacute;side actuellement &agrave; Philadelphie, titulaire d&rsquo;un baccalaur&eacute;at en Film and Media Arts &agrave; l&#39;Universit&eacute; Temple.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Clark Matthews is the co-creator, writer, director and editor of the award-winning erotic crip short &ldquo;Krutch&rdquo;, his first film. Made with collaborator and star Mia Gimp, it explores issues close to Clark&#39;s heart: disability, perception and authenticity through representation and authorship. He currently resides in Philadelphia, having earned a bachelor&#39;s degree in Film and Media Arts at Temple University.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Ricardo Di Gerlando', 
                   'urlImageRealisateur' => 'realisateurs/RicardoDiGerlando_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Riccardo Di Gerlando est n&eacute; &agrave; San Remo en 1980. Il est pr&eacute;sident du &laquo;&nbsp;Cultural Sanremo Cinema&quot; depuis 2003. Apr&egrave;s avoir &eacute;t&eacute; dipl&ocirc;m&eacute; en r&eacute;alisation &agrave; la SDAC G&ecirc;nes, il a &eacute;crit une th&egrave;se sur le handicap dans le cin&eacute;ma. Il a r&eacute;alis&eacute; avec son fr&egrave;re Marco dix courts m&eacute;trages, dont Taxi (2008), gagnant de plus de trente prix internationaux dont le prestigieux Festival de Reelshow &agrave; Londres. Depuis 2009, il est aussi &eacute;ducateur dans une &eacute;cole pour personnes ayant une d&eacute;ficience intellectuelle, o&ugrave; il anime un atelier de cin&eacute;ma.&nbsp;</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Riccardo Di Gerlando was born in Sanremo in 1980. He is the president of the Cultural Sanremo Cinema since 2003. After graduating in film directing at the SDAC Genoa, he graduated at Dams in Imperia with a thesis on disability in cinema. With his brother Marco, he directed ten short films, including Taxi (2008), winner of over thirty international awards, including the prestigious Reelshow Film Festival in London. Since 2009, he also works as an educator in a school for people with intellectual disabilities, where he runs a cinema workshop.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Sarah-Laure Estragnat', 
                   'urlImageRealisateur' => 'realisateurs/Sarah-LaureEstragnat_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Graphiste diplom&eacute;e de l&#39;ESAG Penninghen, Sarah-Laure sera journaliste pour TF1 et attach&eacute;e de presse avant de se passionner pour la photographie. Elle devient pendant plusieurs mois l&#39;assistante de Paolo Roversi et travaillera &eacute;galement avec Michel-Angelo Di Battista, puis organise sa premire exposition photo/painting dans un h&ocirc;tel particulier parisien. Son exp&eacute;rience des plateaux de cin&eacute;ma et de la photo ont r&eacute;cemment facilit&eacute; son passage &agrave; la r&eacute;alisation. Elle a &eacute;crit, r&eacute;alis&eacute; et produit 4 courts m&eacute;trages et d&eacute;veloppe actuellement un 90 minutes avec Comic Strip Productions.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Graphic designer from FASE Penninghen, Sarah-Laure was a reporter for TF1 and press agent before turning to photography. She was the Paolo Roversi&#39;s assistant for several months, and also worked with Michael Angelo Di Battista; then organized her first exhibition in a Parisian hotel. Her experience of movie sets and of phototagraphy have recently facilitated her transition to directing. She wrote, directed and produced 4 short films and is now working on a 90 minutes film with Comic Strip Productions.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'David Pantaleon', 
                   'urlImageRealisateur' => 'realisateurs/DavidPantaleon_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>David Pantaleon est n&eacute; en 1978 &agrave; Valleseco, Gran Canaria, Espagne. Il a obtenu un baccalaur&eacute;at&nbsp;&agrave; la Drama School for Actors Islands. Il a d&eacute;but&eacute; sa carri&egrave;re de r&eacute;alisateur en 2006 et a depuis obtenu plus de trente prix dans des festivals nationaux et internationaux.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>David Pantaleon was born in 1978 in Vallesco, Gran Canaria, Spain. He graduated from the Drama School for Actors Islands. He started his career as a film director in 2006 and has since then received more than thirty awards in various national and international festivals.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Eric Montchaud', 
                   'urlImageRealisateur' => 'realisateurs/EricMontchaud_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Eric Montchaud int&egrave;gre la premi&egrave;re promotion de l&rsquo;&eacute;cole d&rsquo;animation La Poudri&egrave;re &agrave; Valence en 1999. Son film de fin d&rsquo;&eacute;tudes &laquo; Les Animals &raquo; et son film autoproduit &laquo; L&rsquo;odeur du chien mouill&eacute; &raquo; remportent tous deux un succ&egrave;s dans les festivals tels que Annecy, Clermont-Ferrand, Hiroshima&hellip; Eric devient ensuite animateur de stopmotion en travaillant principalement pour la publicit&eacute;. Il est &eacute;galement&nbsp; l&rsquo;un des animateurs des longs-m&eacute;trages de Michel Gondry : &laquo; La Science des r&ecirc;ves &raquo; et &laquo; L&rsquo;&eacute;cume des jours &raquo;. Lorsque son fils lui rapporte le livre d&#39;Isabelle Carrier &laquo; La petite casserole d&rsquo;Anatole &raquo;, Eric en imagine un film avec des marionnettes, qui devient donc son premier court-m&eacute;trage professionnel.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Eric Montchaud was a student in the first class of the animation school of La Poudri&egrave;re in Valence in 1999. His final project &laquo;&nbsp;Les Animals&nbsp;&raquo; and his self-produced film &laquo;&nbsp;L&#39;odear du chien mouill&eacute;&nbsp;&raquo; were both success in festivals such as Annecy, Clermont-Ferrand and Hiroshima. Eric then became a stopmotion animator, working mainly for commercials. He was also one of the animators for Michel Gondry&#39;s feature films &laquo;&nbsp;The Science of Sleep&nbsp;&raquo; and &laquo;&nbsp;Mood Indigo&nbsp;&raquo;. When his son showed him &laquo;&nbsp;Anatole&#39;s little saucepan&nbsp;&raquo;, a book by Isabelle Carrier, Eric dreamt up a film with puppets, which became his first professional short film.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Mario Ventura', 
                   'urlImageRealisateur' => 'realisateurs/MarioVentura_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>M&aacute;rio Ventura a commenc&eacute; &agrave; explorer la prise de vue et le montage en filmant ses amis qui dansaient dans les rues. Il a ensuite &eacute;tudi&eacute; la r&eacute;alisation &agrave; l&#39;ETIC &agrave; Lisbonne. En 2012, il &eacute;tait l&#39;un des huit sc&eacute;naristes s&eacute;lectionn&eacute;s pour Guimaraes 2012 (Capitale europ&eacute;enne de la Culture), ce qui lui a permis de r&eacute;aliser son premier court-m&eacute;trage&nbsp; &laquo;&nbsp;Le berceau imparfait&nbsp;&raquo;. Avec cette fiction sur le handicap et la d&eacute;couverte de soi, il a remport&eacute; le &laquo;&nbsp;Prix d&#39;excellence&nbsp;&raquo; au San Francisco Films Awards et le &laquo;&nbsp;Prix du M&eacute;rite&nbsp;&raquo; au IndiFEST Film Awards.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>M&aacute;rio Ventura started exploring video capture and editing filming his friends while they were dancing in the streets. He then studied film directing at ETIC in Lisbon. In 2012, he was one of eight screenwriters selected for Guimaraes 2012 &ndash; European Capital of Culture &ndash; which allowed him to direct his first short fiction &laquo;&nbsp;The Imperfect Cradle&nbsp;&raquo;. With this fiction about disabilities and self discovery, he won the &laquo;&nbsp;Award of Excellence&nbsp;&raquo; at the San Francisco Film Awards and the &laquo;&nbsp;Award of Merit&nbsp;&raquo; at the IndieFEST Film Awards.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Vanessa Clement', 
                   'urlImageRealisateur' => 'realisateurs/VanessaClement_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Vanessa Cl&eacute;ment, autodidacte, d&eacute;bute au cin&eacute;ma&nbsp; &agrave; 17 ans. Elle a travaill&eacute; avec Jean-Fran&ccedil;ois Fontanel&nbsp;et Gilles Marchand sur un long m&eacute;trage intitul&eacute; &laquo;&nbsp;La Disparue&nbsp;&raquo;, qui a remport&eacute; les Prix junior du meilleur sc&eacute;nario et l&#39;aide &agrave; l&#39;&eacute;criture&nbsp;du CNC. En 2011, elle r&eacute;alise son premier court m&eacute;trage &laquo; A trois&nbsp;&raquo;, avec Sarah Grappin et Jean Emmanuel Pagni. En 2014, elle continue sa collaboration avec &laquo;&nbsp;Les Films du Cygne&nbsp;&raquo; et r&eacute;alise &laquo;&nbsp;Le Premier Pas &raquo;, avec Sarah Grappin et Antoine Mathieu.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Vanessa Cl&eacute;ment is an autodidact who made her debut on film sets at the age of 17. She worked alongside Jean-Fran&ccedil;ois Fontaneland and Gilles Marchand on a feature film named &laquo;&nbsp;The Missing&nbsp;&raquo;, for which she won the Junior Price for best screenplay from the CNC. In 2011, she directed her first short film &laquo;&nbsp;Three&nbsp;&raquo;, with Sarah Grappin et Jean Emmanuel Pagni. In 2014, she continues her collaboration with &laquo;&nbsp;Les Films du Cygne&nbsp;&raquo; and directs &laquo;&nbsp;The First Step&nbsp;&raquo;, with Sarah Grappin and Antoine Mathieu.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Arjanmar Rebeta', 
                   'urlImageRealisateur' => 'realisateurs/ArjanmarRebeta_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Arjanmar H. Rebeta est un &eacute;crivain et cin&eacute;aste originaire des Philippines. Il est &eacute;galement portraitiste et photographe de mariage.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Arjanmar H. Rebeta is a writer &amp; filmmaker from Philippines. He is also an active wedding &amp; portrait photographer.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Joel Simon', 
                   'urlImageRealisateur' => 'realisateurs/JoelSimon_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Joel Simon est un&nbsp;artiste multidisciplinaire belge, dont le travail est influenc&eacute; par les bandes dessin&eacute;es fran&ccedil;aises et belges. R&eacute;sidant &agrave; Belfast, son travail a &eacute;t&eacute; appr&eacute;ci&eacute; partout dans le monde. En 2003, il fonde le studio d&#39;animation Flickerpix. Il a r&eacute;alis&eacute; de nombreux court m&eacute;trages et s&eacute;ries TV comme &laquo;&nbsp;Horn OK Please&nbsp;&raquo;, qui a re&ccedil;u le IFTA award, et &laquo;&nbsp;Macropolis&nbsp;&raquo;, qui faisait partie du London 2012 Cultural Olympiad et a &eacute;t&eacute; s&eacute;lectionn&eacute; parmi plus de 200 festivals de&nbsp;films internationaux. Il a &eacute;galement dirig&eacute; des programmes d&#39;animation pour Children In Need, BBC ONE, CBBC, Channel 4, Comic Relief, Discovery Channel et Sesame Street.&nbsp;</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Joel Simon is a multidisciplinary artist from Belgium, whose work is influenced by French and Belgian comic books. Residing in Belfast, his work has been prized all over the world. In 2003, he founded the animation studio Flickerpix. He directed multiple award winning TV series and short films such as IFTA-winning &ldquo;Horn Ok Please&rdquo; and &ldquo;Macropolis&rdquo;, which formed part of the London 2012 Cultural Olympiad and has been selected by over 200 international film festivals. He has directed animated programs for Children In Need, BBC ONE, CBBC, Channel 4, Comic Relief, Discover Channel and Sesame Street.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Ignacio Tatay', 
                   'urlImageRealisateur' => 'realisateurs/IgnacioTatay_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Ignacio Tatay a suivi un cours en&nbsp;arts m&eacute;diatiques &agrave; l&rsquo;Universit&eacute; de Londres - Royal Holloway, avant de terminer une ma&icirc;trise en r&eacute;alisation cin&eacute;matographique &agrave; l&rsquo;ESCAC de Barcelone. Depuis, il a travaill&eacute; dans la publicit&eacute; et la r&eacute;alisation de vid&eacute;os musicales, tout en d&eacute;veloppant son premier long m&eacute;trage, &laquo;&nbsp;60 Mississippi&nbsp;&raquo;.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Ignacio Tatay read Media Arts at Royal Holloway, University of London before achieving a masters in Film Direction at ESCAC in Barcelona. Since then he has been working in advertising and directing music videos whilst developing his first feature film, &ldquo;60 Mississippi&rdquo;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Shanoli Bose', 
                   'urlImageRealisateur' => 'realisateurs/ShanoliBose_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Shanoli Bose poss&egrave;de une ma&icirc;trise en r&eacute;alisation de l&#39;&eacute;cole de cin&eacute;ma de l&#39;UCLA et vit actuellement entre Los Angeles et Mumbai. &laquo;&nbsp;Margarita, With a Straw&nbsp;&raquo; est son deuxi&egrave;me long m&eacute;trage.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Shanoli Bose has an MFA in Directing from the UCLA Film School and currently lives between Los Angeles and Mumbai. &laquo;&nbsp;Margarita with a Straw&nbsp;&raquo; is her second feature film.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Karim Ayari', 
                   'urlImageRealisateur' => 'realisateurs/KarimAyari_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Karim Ayari est un jeune cin&eacute;aste canadien n&eacute; &agrave; Ottawa. Il est dipl&ocirc;m&eacute; en communication de l&#39;Universit&eacute; d&#39;Ottawa et en radio-diffusion de la Cit&eacute; coll&eacute;giale. Son dernier projet &ldquo;Lost Rails into the Kingdom&rdquo;, un documentaire dans lequel il suit trois voyageurs au Cambodge, a &eacute;t&eacute; diffus&eacute; par la CBC. En 2012, Karim a &eacute;crit et r&eacute;alis&eacute; son premier long m&eacute;trage, &ldquo;Thirteen Downs&rdquo;, qui a ouvert le Festival du Film International d&#39;Ottawa. Il a &eacute;galement &eacute;t&eacute; directeur de photographie pour le court m&eacute;trage &ldquo;Algebra&rdquo;, qui a remport&eacute; le Prix de la meilleure qualit&eacute; technique au dernier Digi60 Ottawa Digital Filmmakers&#39; Festival.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Karim Ayari is a young Canadian filmmaker born in Ottawa. He earned degrees in Communications from the University of Ottawa and in radio-broadcasting from the City College. His last project &ldquo;Lost Rails into the Kingdom&rdquo;, a documentary in which he follows three travelers to Cambodia, was broadcasted by the CBC. In 2012, Karim wrote and directed his first feature film, &ldquo;Thirteen Downs&rdquo;, which opened the Ottawa International Film Festival. He also worked as a cinematographer for short film &ldquo;Algebra&rdquo;, which won Best Technical Quality Award at Digi60 Ottawa Digital Filmmakers&#39; Festival.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Nicholas Jeffries', 
                   'urlImageRealisateur' => 'realisateurs/NicholasJeffries_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Nick Jeffries a obtenu un baccalaur&eacute;at en Film et T&eacute;l&eacute;vision &agrave; Swinburne en Australie. Ayant travaill&eacute; comme ouvrier, il apporte une approche audiovisuelle tr&egrave;s personnelle qui le distingue des approches traditionnelles.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Nick Jeffries graduated with a BA in Film and Television in Swinburne, Australia. Having worked as a labourer, he brings a unique perspective to cinema that sets him apart from traditional approaches.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Anais Barbeau-Lavalette & Andre Turpin', 
                   'urlImageRealisateur' => 'realisateurs/AnaisBarbeau-Lavalette&AndreTurpin_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Ana&iuml;s Barbeau-Lavalette a r&eacute;alis&eacute; plusieurs documentaires, notamment &laquo;&nbsp;Les Petits G&eacute;ants&nbsp;&raquo; et &laquo;&nbsp;Se souvenir des cendres&nbsp;&raquo;, qui ont tous les deux remport&eacute;&nbsp;le prix G&eacute;meaux du Meilleur documentaire. Elle signe &eacute;galement deux long m&eacute;trages &laquo;&nbsp;Le Ring&nbsp;&raquo; et &laquo;&nbsp;Inch&#39;Allah&nbsp;&raquo;, prim&eacute;s dans de nombreux festivals. Elle a &eacute;crit un roman et publie &eacute;galement des chroniques de voyage. En 2012, elle est nomm&eacute;e Artiste pour la Paix. Au printemps 2013, la Place des Arts lui offre une carte blanche. Elle y monte le cabaret &laquo;&nbsp;Vous &ecirc;tes libres&nbsp;&raquo;.</p>

<p>&nbsp;</p>

<p>Andr&eacute; Turpin &eacute;tait le sc&eacute;nariste, r&eacute;alisateur et directeur de la photographie pour &ldquo;Un crabe dans la t&ecirc;te&rdquo;, son plus r&eacute;cent long m&eacute;trage. Ses r&eacute;alisations comprennent &ldquo;Cosmos&rdquo;, long m&eacute;trage d&#39;anthologie, ainsi que &ldquo;Zigrail&rdquo;, son premier long m&eacute;trage. Turpin a &eacute;galement travaill&eacute; comme directeur de la photographie pour de nombreux films, comme les tr&egrave;s prim&eacute;s &ldquo;Maelstr&ouml;m&rdquo; de Denis Villeneuve, &ldquo;C&#39;est pas moi, je le jure!&rdquo; de Philippe Falardeau ou encore &ldquo;Incendies&rdquo;.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Ana&iuml;s Barbeau-Lavalette directed several documentarie, notably &ldquo;Les Petits G&eacute;ants&rdquo; and &ldquo;Se souvenir des cendres&rdquo;, both winners of the Gemini Award for Best Documentary. She also worked on two feature-length fictions &ldquo;Le Ring&rdquo; and &ldquo;Inch&#39;Allah&rdquo;, awarded in numerous festivals. She wrote a novel and publishes travel chronics. In 2012, she was named Artist for Peace. In the spring of 2013, the Place des Arts offers her a white card. She creates the cabaret &ldquo;Vous &ecirc;tes libres&rdquo;.</p>

<p>&nbsp;</p>

<p>Andr&eacute; Turpin worked as writer, director and director of photography on &ldquo;Un crabe dans la t&ecirc;te&rdquo;, his latest feature film. His previous works include &ldquo;Cosmos&rdquo;, an anthology feature, and &ldquo;Zigrail&rdquo;, his first feature film. Turpin also worked as director of photography on many feature films, including Denis Villenneuve&#39;s award-winning &ldquo;Maelstr&ouml;m&rdquo;, Philippe Falardeau&#39;s &ldquo;C&#39;est pas moi, je le jure!&rdquo; and most recently on &ldquo;Incendies&rdquo;.&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

       

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Christopher Cass', 
                   'urlImageRealisateur' => 'realisateurs/ChristopherCass_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Christopher Cass, n&eacute; en 1958 &agrave; New York, a travaill&eacute; avec Stephen Spielberg, Ridley Scott, Taylor Hackford, John Malkovich, Celeste Holm, Tom Beringer, Abigail Breslin, Melora Hardin, Jonathan Winters, Stephen Tobolowsky, Cherry Jones &amp; Randy Mantooth (pour ne citer qu&#39;eux).</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Christopher Cass, born in 1958 in New York, has worked with Stephen Spielberg, Ridley Scott, Taylor Hackford, John Malkovich, Celeste Holm, Tom Beringer, Abigail Breslin, Melora Hardin, Jonathan Winters, Stephen Tobolowsky, Cherry Jones &amp; Randy Mantooth (to name a few).</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Patty Berne', 
                   'urlImageRealisateur' => 'realisateurs/PattyBerne_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Patricia Berne est le metteur en sc&egrave;ne du film et cofondateur du projet &laquo;&nbsp;Sins Invalid&nbsp;&raquo;. Novice dans la r&eacute;alisation, les exp&eacute;riences de Berne comme femme homosexuelle handicap&eacute;e nippo-ha&iuml;tienne garantissent une bonne base pour son travail dans la cr&eacute;ation de &quot;zones lib&eacute;r&eacute;es&quot; pour les voix marginalis&eacute;es. Son parcours professionnel comprend un soutien en sant&eacute; mentale aux survivants de la violence; un plaidoyer pour les immigrants qui demandent l&#39;asile en raison de la guerre et de la torture; un travail de soutien au mouvement d&eacute;mocratique du Guatemala et dans la diaspora ha&iuml;tienne; un travail avec les jeunes incarc&eacute;r&eacute;s vers des alternatives au syst&egrave;me de justice p&eacute;nale; un plaidoyer pour la communaut&eacute; LGBTQI&nbsp;; des perspectives de droits pour les personnes handicap&eacute;es dans le domaine des technologies g&eacute;n&eacute;tiques et de reproduction&nbsp;; et un activisme culturel pour centraliser les voix marginalis&eacute;es, en particulier celles des personnes handicap&eacute;es.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Patricia Berne is the director of the film and is a co-founder of the &ldquo;Sins Invalid&rdquo; performance project. A first time filmmaker, Berne&#39;s experiences as a Japanese-Haitian queer disabled woman provides grounding for her work creating &ldquo;liberated zones&rdquo; for marginalized voices.&nbsp; Her professional background includes offering mental health support to survivors of violence; advocacy for immigrants who seek asylum due to war and torture; support work for the Guatemalan democratic movement and within the Haitian diaspora; work with incarcerated youth toward alternatives to the criminal legal system; advocating for LGBTQI community and disability rights perspectives within the field of reproductive and genetic technologies and cultural activism to centralize marginalized voices, particularly those of people with disabilities.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Michael Dinesen', 
                   'urlImageRealisateur' => 'realisateurs/MichaelDinesen_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Michael Dinesen est n&eacute; en 1976 et est dipl&ocirc;m&eacute; en th&eacute;&acirc;tre, film et t&eacute;l&eacute;vision. In 2007, il fonde sa propre compagnie de production Staalfilm. Il a r&eacute;alis&eacute; et produit de nombreux documentaires, comme &ldquo;A Donor Child&rdquo;, &ldquo;Wimmer over Everest&rdquo;, &ldquo;DR2&rdquo; et &ldquo;Market for Livet&rdquo;.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Michael Dinesen was born in 1976 and graduated in Theater, Film and Television. In 2007, he founded his own production company Staalfilm. He directed and produced several documentaries, such as &quot; A Donor Child&quot;, &quot;Wimmer over Everest&quot;, &quot;DR2&quot; and &quot;Market for Livet&quot;.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jose Cruz Gurrutxaga & Aitor Aranguren', 
                   'urlImageRealisateur' => 'realisateurs/JoseCruzGurrutxaga&AitorAranguren_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jose Cruz Gurrutxaga est n&eacute; en 1973. Il a &eacute;tudi&eacute; le cin&eacute;ma dans les ann&eacute;es 90. Parall&egrave;lement, il suit des cours de th&eacute;&acirc;tre et commence une carri&egrave;re comme acteur de th&eacute;&acirc;tre, de cin&eacute;ma, mais aussi de t&eacute;l&eacute;vision. Il est &eacute;galement cosc&eacute;nariste de la pi&egrave;ce &laquo;&nbsp;La Gondole Myst&eacute;rieuse&nbsp;&raquo;. C&#39;est en r&eacute;alisant la s&eacute;rie &laquo;&nbsp;Goenkale&nbsp;&raquo; qu&#39;il a rencontr&eacute; Aitor Aranguren.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jose Cruz Gurrutxaga was born in 1973. He studied cinema in the 90&#39;s. At the same time, he was studying drama and started his career as an actor on stage, but also in movies and TV series. He is also the co-writer of the play &laquo;&nbsp;The Mysterious Gondola&nbsp;&raquo;. He met Aitor Aranguren while directing the TV series &laquo;&nbsp;Goenkale&nbsp;&raquo;.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Geraldine Wurzburg', 
                   'urlImageRealisateur' => 'realisateurs/GeraldineWurzburg_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Geraldine Wurzburg, r&eacute;alisatrice et productrice, a re&ccedil;u l&#39;Oscar du meilleur court m&eacute;trage documentaire en 1993 pour son film HBO &quot;Educating Peter&quot;. En 2004, son film &quot;Autism is a World&quot; a &eacute;galement &eacute;t&eacute; nomin&eacute; pour l&#39;Oscar. Il a &eacute;t&eacute; diffus&eacute; &agrave; travers le monde sur CNN. Elle est la fondatrice et pr&eacute;sidente de State of the Art, Inc., une soci&eacute;t&eacute; de communication &agrave; Washington DC dont le travail se concentre sur l&#39;utilisation des m&eacute;dias pour promouvoir le changement dans l&#39;&eacute;ducation et la sant&eacute;.&nbsp;</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Geraldine Wurzburg, director and producer, received the Academy Award&reg; for Best Documentary Short Subject in 1993 for her HBO film &quot;Educating Peter&quot;.&nbsp; In 2004, her film &quot;Autism is a World&quot; was also nominated for the Academy Award&reg;. It was broadcast worldwide on CNN. She is the Founder and President of State of the Art, Inc., a communication company in Washington DC whose work focuses on the use of media to promote change in education and health.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Alex Vetrov & Uladzimir Taukachou', 
                   'urlImageRealisateur' => 'realisateurs/AlexVetrov&UladzimirTaukachou_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Alex Vertov a travaill&eacute; dix ans dans une bo&icirc;te de production en tant que r&eacute;alisateur de publicit&eacute;s et de clips. Certaines de ses cr&eacute;ations ont re&ccedil;u des prix, comme ceux de la meilleure cin&eacute;matographie. Il a travaill&eacute; sur plusieurs courts m&eacute;trages avec Uladzimir pendant ces deux derni&egrave;res ann&eacute;es. Il reste occup&eacute; en &eacute;crivant des sc&eacute;narios pour des longs et courts m&eacute;trages.</p>

<p>Uladzimir Taukachou est n&eacute; et a grandi dans l&#39;ex-Union sovi&eacute;tique. Alors &acirc;g&eacute; d&rsquo;une vingtaine d&rsquo;ann&eacute;es, il d&eacute;cide de quitter la Bi&eacute;lorussie totalitaire pour &eacute;migrer aux &Eacute;tats-Unis. C&#39;est un cin&eacute;aste accompli travaillant autant sur sc&eacute;nario qu&#39;en improvisant, et ce pour des documentaires, des fictions, des courts et des longs m&eacute;trages. Son travail est empreint de sa vision unique, lui qui a v&eacute;cu deux syst&egrave;mes politiques oppos&eacute;s (communisme et capitalisme).</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Alex Vertov&nbsp;spent a decade working in production house company directing commercials and music videos. Some of them, like music videos, won prizes as breakthrough ideas and best cinematography. He worked on several short movies in collaboration with Uladzimir for the last two years. He keeps him busy by writing screenplays for feature films and short movies.</p>

<p>Uladzimir Taukachou was born and raised in the former Soviet Union. He immigrated to the US from totalitarian Belarus in his twenties. He is an accomplished cinematographer, working both scripted and unscripted, and on documentaries, fictions, shorts and feature films. His work reveals his unique vision, having experienced opposite political systems (communism and capitalism).</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Mahboubeh Honarian', 
                   'urlImageRealisateur' => 'realisateurs/MahboubehHonarian_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Mahboubeh Honorian est n&eacute;e en Iran en 1962. Apr&egrave;s avoir termin&eacute; ses &eacute;tudes, elle a dirig&eacute; son premier documentaire, centr&eacute; sur les enfants. Elle a depuis produit et r&eacute;alis&eacute; de nombreux documentaires (films et s&eacute;ries t&eacute;l&eacute;vis&eacute;es), ayant majoritairement pour th&egrave;mes les probl&egrave;mes sociaux et culturels, et centr&eacute;s sur les femmes et les enfants.</p>

<p>Mahboubeh est membre de l&rsquo;&nbsp;&laquo;&nbsp;International Academy of Television Arts &amp; Sciences&nbsp;&raquo;. Elle a &eacute;t&eacute; membre des jurys de nombreux festivals internationaux, comme le &laquo;&nbsp;International Emmy Awards&nbsp;&raquo; &agrave; New York ou &laquo;&nbsp;Pulling Voices&nbsp;&raquo; in Dubai. Elle a &eacute;galement &eacute;t&eacute; pr&eacute;sidente de l&rsquo;&nbsp;&laquo;&nbsp;Association iranienne des r&eacute;alisateurs de documentaires&nbsp;&raquo; pendant quatre ans (2004-2008).</p>

<p>Mahboubeh est &eacute;galement la fondatrice de l&rsquo; &laquo;&nbsp;Organisation des r&eacute;alisateurs immigr&eacute;s&nbsp;&raquo;, une assocation sans but lucratif bas&eacute;e &agrave; Toronto, qui offre diff&eacute;rents services et activit&eacute;s aux artistes immigr&eacute;s.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Mahboubeh Honorian was born in Iran in 1962. &nbsp;After graduation, she started her first documentary focused on children. Since then, she has produced and directed a broad range of documentary films and TV series, mainly focused on Social and Cultural issues and emphasizing on women and children.</p>

<p>Mahboubeh is a member of the &laquo;&nbsp;International Academy of Television Arts &amp; Sciences&nbsp;&raquo;. She has been a jury member for several international film festivals, such as the &laquo;&nbsp;International Emmy Awards&nbsp;&raquo; in New York or &laquo;&nbsp;Pulling Voices&nbsp;&raquo; in Dubai. She has also been the President of the &laquo;&nbsp;Iranian Documentary Filmmakers Association&nbsp;&raquo; for four years (2004-2008).</p>

<p>Mahboubeh is also the founder of the &laquo;&nbsp;Immigrant Filmmakers Organization&nbsp;&raquo;, a media arts non profit based in Toronto, that provides various activities and services to immigrant artists. She was also among 20 women from around the world involved in the project &laquo;&nbsp;Women as Peacemakers through Religion&nbsp;&raquo;, a joint workshop of Muslims and Christians.&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Charlie Swinbourne', 
                   'urlImageRealisateur' => 'realisateurs/CharlieSwinbourne_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Charlie Swinbourne a &eacute;crit et r&eacute;alis&eacute; de nombreux drames et com&eacute;dies prim&eacute;s incluant des personnes sourdes qui parlaient la langue des signes, comme par exemple &quot;Four Deaf Yorkshiremen go to Blackpool&quot;. Il a &eacute;galement &eacute;crit et r&eacute;alis&eacute; les drames &quot;My Song&quot; et &quot;Departure Lounge&quot;. Avec l&#39;aide du UK Film Council, il a travaill&eacute; sur &quot;Hands solo&quot; et &quot;The Fingerspellers&quot;, deux courts m&eacute;trages qui ont obtenu plus de 200,000 vues sur YouTube.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Charlie Swinbourne wrote and directed a number of award-winning dramas and comedies featuring deaf characters in sign language, such as the &quot;Four Deaf Yorkshiremen go to Blackpool&quot;. He also wrote and directed the dramas &quot;My Song&quot;, and &quot;Departure Lounge&quot;. With the help of the UK Film Council, he also worked on &quot;Hands solo&quot; and &quot;The Fingerspellers&quot;, two shorts that gained over 200,000 views each on YouTube.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Samara Hersch', 
                   'urlImageRealisateur' => 'realisateurs/SamaraHersch_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Samara Hersch est une r&eacute;alisatrice prim&eacute;e de Melbourne, artiste dramaturge et enseignante. Elle a obtenu une ma&icirc;trise en pratique Th&eacute;&acirc;tre du Victorian College of the Arts en 2010. Samara a &eacute;t&eacute; encadr&eacute;e par Bruce Gladwin, de Back to Back Theatre Co. &agrave; travers le Programme national de JUMP (2010) et en 2013 a travaill&eacute; comme r&eacute;alisatrice de spectacle sur leur production de &quot;Super Discount&quot; (Sydney Theatre Company et Malthouse Theatre). Samara est actuellement metteuse&nbsp;en sc&egrave;ne en r&eacute;sidence au Th&eacute;&acirc;tre Malthouse. Samara est une passionn&eacute;e et a beaucoup travaill&eacute; avec un groupe qui prend en charge les jeunes adultes ayant une d&eacute;ficience intellectuelle pour cr&eacute;er une gamme de projets de th&eacute;&acirc;tre et de cin&eacute;ma.&nbsp;</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Samara Hersch is an award winning, Melbourne based director, dramaturg and teaching artist. She graduated with a Masters in Theatre Practice from Victorian College of the Arts. Samara was mentored by Bruce Gladwin, from Back to Back Theatre Co. through the JUMP National Mentorship Program (2010) and in 2013 worked as a show director on their production of Super Discount (Sydney Theatre Co. and Malthouse Theatre). Samara is currently female director in residence at the Malthouse Theatre. Samara is passionate about making work that represents a diverse range of voices and perspectives &ndash; and has worked extensively with community group Access Inc. (that supports young adults with intellectual disabilities) to create a range of theatre and film projects.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jérôme Thomas & Olivier Marchal', 
                   'urlImageRealisateur' => 'realisateurs/JérômeThomas&OlivierMarchal_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Olivier Marchal, professeur de Langue des Signes, encadre depuis cinq ans l&#39;atelier audiovisuel du Lyc&eacute;e Arthur Varoquaux. Cet atelier permet la rencontre de jeunes sourds et entendants qui d&eacute;couvrent l&#39;Image et ces diff&eacute;rents degr&eacute;s de lecture. Ils cr&eacute;ent ensemble des clips en LSF, des documentaires et des courts-m&eacute;trages accessibles &agrave; tous.<br />
Tous les ans Olivier Marchal et son &eacute;quipe organisent le festival Sourd M&eacute;trage.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Olivier Marchal, a sign language teacher, has been leading the Lyc&eacute;e Arthur Varoquaux audiovisual workshop for five years. It brings together deaf and hearing teenagers in discovering Image and its different interpretations. They create documentaries and short movies in LSF, accessible to all.&nbsp;<br />
Every year, Olivier Marchal and his team organize the &laquo; Sourd M&eacute;trage &raquo; festival.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Noah David Smith', 
                   'urlImageRealisateur' => 'realisateurs/NoahDavidSmith_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Noah David Smith est un cin&eacute;aste, directeur de photographie&nbsp;et photographe se sp&eacute;cialisant dans les images authentiques o&ugrave; r&eacute;sonnent les &eacute;motions. Son portrait de Steven Wiltshire, un artiste autiste, a gagn&eacute; de nombreux prix.</p>

<p>Travaillant avec une approche intens&eacute;ment collaborative, Noah cr&eacute;e des images&nbsp;belles et &eacute;vocatrices dans leur composition esth&eacute;tique naturelle et &eacute;l&eacute;gante. Sa technique est profond&eacute;ment enracin&eacute;e dans la peinture de portraits &agrave; la lumi&egrave;re&nbsp;naturelle, dans les rues des villes, dans les paysages ruraux,&nbsp;et dans son amour du cin&eacute;ma.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Noah David Smith is a Director, Cinematographer and Photographer specializing in authentic and emotionally resonating images. His profile of Steven Wiltshire, an autistic, artistic savant, earned the Grand Midas award for best financial film, and was honored at the 2012 AICP&rsquo;s Next Awards as a top web film.</p>

<p>Working with an intensely collaborative approach, Noah creates beautiful and evocative images with his natural aesthetic, distinct composition and elegant style. His technique is deeply rooted in strong portraiture, storytelling, natural light, city streets and rural landscapes, and his love of filmmaking.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jake Alexander McAfee', 
                   'urlImageRealisateur' => 'realisateurs/JakeAlexanderMcAfee_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Travaillant comme r&eacute;alisateur de publicit&eacute;s&nbsp;pour Rabbit depuis 2013, Jake Alexander McAfee cr&eacute;e depuis une dizaine d&#39;ann&eacute;es des contenus m&eacute;morables. Il est reconnu pour sa capacit&eacute; &agrave; capturer les &eacute;motions de ses personnages, en les pla&ccedil;ant dans un&nbsp;espace-temps qui les renforce. Il appr&eacute;cie particuli&egrave;rement l&#39;architecture, les d&eacute;cors ont donc un r&ocirc;le tr&egrave;s important dans son style de r&eacute;alisation. Il est attir&eacute; par la c&eacute;l&eacute;bration de l&#39;espace urbain, que ce soit une f&ecirc;te dans un b&acirc;timent abandonn&eacute; de Detroit, un tour dans le Parc Vondel, manger des criquets frits &agrave; c&ocirc;t&eacute; d&#39;un &eacute;l&eacute;phant &agrave; Bangkok, ou encore des enfants jouant au football dans les rues de Cape Town.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Joining Rabbit in 2013 as a commercial director, Jake Alexander McAfee has directed memorable content for over a decade. He is known for capturing characters&rsquo; emotions and placing each one in a physical location or time and space that reinforces that emotional experience. With a strong appreciation for architecture, location and scenery play an integral role in Jake&rsquo;s directing style. He is drawn to work that celebrates the urban experience; from an amazing techno party inside an abandoned building in Detroit to riding through Vondel Park, eating fried crickets as an elephant walks past you in downtown Bangkok and kids playing football on a Cape Town street.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Thomas Rhazi', 
                   'urlImageRealisateur' => 'realisateurs/ThomasRhazi_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Derni&egrave;re arriv&eacute; &agrave; l&rsquo;agence Division Paris, Thomas Rhazi travaillait avant comme photographe de mode et comme directeur de photographie. La musique a toujours eu une grande importance pour lui. Dans son travail, il aime mixer la musique contemporaine et la musique pop.<br />
Thomas a r&eacute;alis&eacute; des clips pour Anton, The Dandy Warhols, Goose, etc. En 2014, il a &eacute;t&eacute; nomin&eacute; &agrave; l&rsquo;Award du Meilleur Clip urbain at UKMVa avec le groupe londonais Hawk House.<br />
Il a r&eacute;cemment r&eacute;alis&eacute; &laquo; Pusher &raquo;, un clip pour Alt J. En 2015, il a gagn&eacute; deux &laquo; Wood Pencils &raquo; au D&amp;AD pour &laquo; Dans les yeux d&rsquo;un enfant &raquo;, un campagne qu&rsquo;il a dirig&eacute; pour Leo Burnett.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Last signature of Division Paris, Thomas Rhazi used to work as a fashion photographer &amp; DOP before starting his career as director. Music was always important in his evolution. In his work, he likes to mix contemporary art and pop culture.&nbsp;<br />
Thomas has directed music videos for Anton, The Dandy Warhols, Goose with French singer Soko. In 2014 he is nominated for Best urban video at the UKMVA for the London hiphop band Hawk House.&nbsp;<br />
He recently directed &ldquo;Pusher&rdquo; an intense music video for Alt J. In 2015, he won two wood pencils at the D&amp;AD (Branded Film Content &amp; Entertainment) for &ldquo;The eyes of a child&rdquo;, a campaign he directed for Leo Burnett.&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Collectif (films multiples)', 
                   'urlImageRealisateur' => 'realisateurs/Collectif(filmsMultiples)_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Pas d&#39;information</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>No information</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Miguel Jiron', 
                   'urlImageRealisateur' => 'realisateurs/MiguelJiron_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Miguel Jiron est un animateur et r&eacute;alisateur de Los Angeles, Californie. Son travail a &eacute;t&eacute; pr&eacute;sent&eacute; dans de nombreux festivals &agrave; travers le monde, comme le SXSW, l&rsquo;Ottawa International Animation Film Festival, le New York International Children&rsquo;s Festival, le TIFF, et a re&ccedil;u des critiques du NPR, de Radiolab, de The Dish et de Vimeo. Il &eacute;tait auparavant assistant de Takashi Murakami dans ses studios &agrave; New York et Tokyo. Il a obtenu son MFA &agrave;&nbsp;l&rsquo;Universit&eacute; de Californie du Sud en 2013. Il est actuellement artiste de storyboard pour Illumination Entertainment.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Miguel Jiron is an animator and director based in Los Angeles, CA. His work has screened at film festivals around the world, such as SXSW, Ottawa International Animation Film Festival, New York International Children&rsquo;s Festival, TIFF and has been profiled by NPR, Radiolab, Andrew Sullivan&rsquo;s The Dish, and Vimeo. Previously he was a painting assistant for Takashi Murakami in his New York and Tokyo based studios. He received his MFA in USC&rsquo;s Hench Division of Animation and Digital Arts in 2013. Currently he is a storyboard artist for Illumination Entertainment.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Nima Raoofi', 
                   'urlImageRealisateur' => 'realisateurs/NimaRaoofi_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Nima Roofi est sc&eacute;nariste, r&eacute;alisateur, producteur et animateur 3D &agrave; Triangle Pictures &agrave; Melbourne.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Nima Raoofi is Writer, Director and Producer (Filmmaker) &amp; 3D Animator at Triangle pictures in Melbourne.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jimmy Ennett', 
                   'urlImageRealisateur' => 'realisateurs/JimmyEnnett_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jimmy Ennett est le directeur de cr&eacute;ation et le fondateur de M&eacute;dias de Crux Media, une maison de production de vid&eacute;o qui utilise des techniques cr&eacute;atives pour la r&eacute;alisation de</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jimmy Ennett is Creative Director and founder of Crux Media, a boutique video production company that uses creative techniques and storytelling for a traditionally corporate minded industry.</p>

<p>&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Yan Giroux', 
                   'urlImageRealisateur' => 'realisateurs/YanGiroux_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>En documentaire ou en fiction, Yan Giroux accorde une place pr&eacute;pond&eacute;rante &agrave; l&rsquo;exp&eacute;rience cin&eacute;matographique. Sa r&eacute;flexion sur la dur&eacute;e et le territoire se manifeste par l&rsquo;utilisation fr&eacute;quente du plan s&eacute;quence. Il r&eacute;alise trois documentaires pr&eacute;sent&eacute;s dans de nombreux festivals et plusieurs courts-m&eacute;trages de fiction, dont &quot;Surveillant&quot; s&eacute;lectionn&eacute; au festival de Sundance en 2012 et qui a gagn&eacute;&nbsp;le prix du meilleur court m&eacute;trage de fiction au Festival International du Film de San Francisco.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>In documentaries and in fictions, Yan Giroux is attentive to the cinematographic experience. His reflection on timing and placing shows through his frequent use of sequence shots. He has directed three documentaries that were presented in numerous festivals and many short fictions, such as &quot;Surveillant&quot; -&nbsp;selected at Sundance Festival in 2012 &nbsp;and winner of the Best Fiction Short at the San Francisco International Film Festival.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Olivier Marchal Jerome Thomas et les eleves', 
                   'urlImageRealisateur' => 'realisateurs/OlivierMarchalJeromeThomasEtLesEleves_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Olivier Marchal, professeur de Langue des Signes, encadre depuis cinq ans l&#39;atelier audiovisuel du Lyc&eacute;e Arthur Varoquaux. Cet atelier permet la rencontre de jeunes sourds et entendants qui d&eacute;couvrent l&#39;Image et ses diff&eacute;rents degr&eacute;s de lecture. Ils cr&eacute;ent ensemble des clips en LSF, des documentaires et des courts-m&eacute;trages accessibles &agrave; tous.<br />
Tous les ans Olivier Marchal et son &eacute;quipe organisent le festival Sourd M&eacute;trage.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Olivier Marchal, a sign language teacher, has been leading the Lyc&eacute;e Arthur Varoquaux audiovisual workshop for five years. It brings together deaf and hearing teenagers in discovering Image and its different interpretations. They create documentaries and short movies in LSF, accessible to all.<br />
Every year, Olivier Marchal and his team organize the &laquo;&nbsp;Sourd M&eacute;trage&nbsp;&raquo; festival.</p>

<p>&nbsp;</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Jade Le Bloas & Camille Mapoula', 
                   'urlImageRealisateur' => 'realisateurs/JadeLeBloas&CamilleMapoula_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Jeune r&eacute;alisatrice de 20 ans en formation, Jade Le Bloas travaille en collaboration avec d&#39;autres r&eacute;alisateurs afin de mieux apprendre son m&eacute;tier. Elle est passionn&eacute;e par l&#39;image et l&#39;&eacute;criture depuis son plus jeune &acirc;ge. C&#39;est le m&eacute;dia par lequel elle s&#39;exprime le mieux. Elle estime qu&#39;il faut pouvoir confronter nos id&eacute;es et notre exp&eacute;rience pour apporter des r&eacute;ponses nouvelles et un regard juste &agrave; notre soci&eacute;t&eacute; actuelle.</p>

<p>Camille Mapoula a&nbsp;lui aussi fait un cursus artistique qui lui a permis de d&eacute;velopper sa sensibilit&eacute; &agrave; l&#39;image, aux mati&egrave;res et&nbsp;couleurs. Artiste autodidacte, il peint, filme, photographie et nourrit depuis toujours le d&eacute;sir de travailler dans le cin&eacute;ma. Il participe &agrave; diff&eacute;rents projets cin&eacute;matographiques pour apprendre son m&eacute;tier.&nbsp;</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>20-year-old director in the making, Jade Le Bloas works in collaboration with other directors in order to learn more and more. She&#39;s been fascinted with images and works since her youngest age. It is the best way for her to express herself. She believes we need to be able to confront our ideas and our experience in order to bring new answers and a new light to our society.</p>

<p>Camille Mapoula received an artistic formation, which allowed him to develop his sensibility to images, textures and colours. Self-taught artist, he paints, films, photographs et has always wanted to work in cinema. He tries to participate in different cinematographic projects in order to get better at his job.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Asaf Korman', 
                   'urlImageRealisateur' => 'realisateurs/AsafKorman_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>N&eacute; en 1982 &agrave; Tel Aviv, Asaf r&eacute;alise des films et cr&eacute;e de la musique depuis ses seize ans. Il a r&eacute;alis&eacute; plusieurs courts-m&eacute;trages qui ont &eacute;t&eacute; pr&eacute;sent&eacute;s dans des festivals internationaux. A l&rsquo;heure actuelle, il est l&rsquo;un des monteurs les plus occup&eacute;s d&rsquo;Isra&euml;l, avec des titres tels que &laquo; Big Bad Wolves &raquo; de Paposhado et Keshale, &laquo; Jaffa &raquo; de Yedaya ou encore &laquo; God&#39;s Neighbors &raquo; de Yaesh.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Born in 1982 in Tel Aviv, Asaf has been making films and music since the age of sixteen. He made several short films that showed at many international film festivals. Today he is one of Israel&rsquo;s busiest film editors, with titles such as Paposhado and Keshales&rsquo;s &laquo; Big Bad Wolves &raquo;, Yedaya&rsquo;s &laquo; Jaffa &raquo; and Yaesh&rsquo;s &laquo; Gods Neighbors &raquo;, amongst others, in his resume.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Alain Gsponer', 
                   'urlImageRealisateur' => 'realisateurs/AlainGsponer_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Bient&ocirc;t</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Soon</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Steve Cope', 
                   'urlImageRealisateur' => 'realisateurs/SteveCope_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Director Steve Cope collaborated with the National Autistic Society to create an inspirational film to raise awareness for the cause during National Autism Awareness Month. Steve Cope and Kit Dayaram of The News, developed the script to illustrate one symptom many people with autism experience - sensory sensitivity.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Director Steve Cope collaborated with the National Autistic Society to create an inspirational film to raise awareness for the cause during National Autism Awareness Month. Steve Cope and Kit Dayaram of The News, developed the script to illustrate one symptom many people with autism experience - sensory sensitivity.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Joseph Schovanec', 
                   'urlImageRealisateur' => 'realisateurs/JosephSchovanec_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Joseph Schovanec n&#39;est pas un r&eacute;alisateur (pas encore ?) mais un philosophe et auteur, porteur d&#39;autisme Asperger. Il est l&#39;auteur des best-sellers &laquo;&nbsp;Je suis &agrave; l&rsquo;est&nbsp;&raquo; et &laquo;&nbsp;Eloge du voyage &agrave; l&rsquo;usage des autistes et de ceux qui ne le sont pas assez&nbsp;&raquo;. Il sera non seulement membre du jury, mais donnera &eacute;galement une conf&eacute;rence/&laquo;&nbsp;stand up&nbsp;&raquo; charg&eacute;e de l&rsquo;humour dont il a le secret.</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>Joseph Schovanec is not a director (or not yet?), but a philosopher and author, with Asperger syndrome. He is the author of best-sellers such as &quot;Je suis &agrave; l&#39;est&quot; and &quot;Eloge du voyage &agrave; l&#39;usage des autistes et de ceux qui ne le sont pas assez&quot;. He will be a member of the jury and will also give a humourous stand-up conference.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );

           

           $id = DB::table('Realisateur')
               ->insertGetId([
                   'nomRealisateur' => 'Félix Fernández de Castro', 
                   'urlImageRealisateur' => 'realisateurs/FélixFernándezDeCastro_100.jpg']);

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>F&eacute;lix Fern&aacute;ndez de Castro est n&eacute; &agrave; Barcelone en 1963. Avant d&#39;&ecirc;tre r&eacute;alisateur, il a &eacute;t&eacute;&nbsp;directeur de cr&eacute;ation pendant treize ans. En tant que tel, il a gagn&eacute; tous les prix possibles dans tous les festivals de publicit&eacute; du monde, notamment un Lion d&#39;or et un Lion d&#39;argent &agrave; Cannes, ainsi qu&#39;un Soles d&#39;or et un Soles d&#39;argent au Festival de San Sebasti&aacute;n. Il a &eacute;galement &eacute;t&eacute; membre du jury du Festival de San Sebasti&aacute;n, du Fiap, de LAUS, du C&iacute;rculo de Creativos, ...</p>

<p>Vers la fin des ann&eacute;es 90, il a commenc&eacute; &agrave; r&eacute;aliser quelques projets avec l&#39;agence Delvico. En 1997, il quitte l&#39;agence and fonde la SCPF avec Toni Segarra, Luis Cuesta et Ignasi Puig. &nbsp;Onze mois plus tard, il quitte SCPF pour se d&eacute;dicacer exclusivement &agrave; la r&eacute;alisation de publicit&eacute;s. Comme r&eacute;alisateur, il a &eacute;t&eacute; r&eacute;compens&eacute; dans plusieurs festivals de publicit&eacute;.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>', 
                   'initialLangue' => 'fr', 
                   'idRealisateur'=> $id]
               );

           DB::table('RealisateurTraduction')
               ->insert([
                   'presentationRealisateur' => '<p>F&eacute;lix Fern&aacute;ndez de Castro was born in Barcelona in 1963. Before directing he was a creative director for thirteen years. As such he has won all possible awards within all advertising festivals worldwide. Among his career highlights are gold and silver Lions at Cannes and as many golds Soles in the San Sebasti&aacute;n Festival. He has also been part of the Jury in San Sebasti&aacute;n, Fiap, LAUS, C&iacute;rculo de Creativos, Eurobest, among others.<br />
By the end of 90s he began to direct some projects by himself at Delvico. In 1997 he left that agency and founded SCPF in Barcelona together with Toni Segarra, Luis Cuesta and Ignasi Puig. Eleven months later he left SCPF to exclusively dedicate himself to directing commercials. As a director, he has been awarded in advertising festivals such as Cannes Festival, San Sebasti&aacute;n Festival, el C&iacute;rculo de Creativos, and others.</p>', 
                   'initialLangue' => 'en', 
                   'idRealisateur'=> $id]
               );
        
        // Seance
        /*
                    
                    
         SELECT 
                concat("
                    
                    
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '",YEAR(b.date)," - ",REPLACE(a.lieux, '\'', '\\\''),"')->count();
if ($nb == 0) {
    DB::table('LieuSeance')
        ->insert([
            'adminNomLieuSeance' => '",YEAR(b.date)," - ",REPLACE(a.lieux, '\'', '\\\''),"',
            'adresse1LieuSeance' => '', 
            'adresse2LieuSeance' => '', 
            'codePostalLieuSeance' => '', 
            'localiteLieuSeance' => '', ]);"),
                               
                concat("
    DB::table('LieuSeanceTraduction')
        ->insert([
            'adminNomLieuSeance' => '",YEAR(b.date)," - ",REPLACE(a.lieux, '\'', '\\\''),"', 
            'initialLangue' => 'fr', 
            'nomLieuSeance' => '",REPLACE(a.lieux, '\'', '\\\''),"']);"),
                               
                concat("
    DB::table('LieuSeanceTraduction')
        ->insert([
            'adminNomLieuSeance' => '",YEAR(b.date)," - ",REPLACE(a.lieux, '\'', '\\\''),"', 
            'initialLangue' => 'en', 
            'nomLieuSeance' => '",REPLACE(a.lieux, '\'', '\\\''),"']);
}"),
                               
                concat(
                "
$id = DB::table('Seance')
    ->insertGetId([
        'adminNomLieuSeance' => '",YEAR(b.date)," - ",REPLACE(a.lieux, '\'', '\\\''),"', 
        'dateTimeSeance' => '",b.date,"', 
        'dureeMinuteSeance' => '",(b.dureeMinute + b.dureeHeure * 60),"']);"),
                
                concat("
DB::table('SeanceTraduction')
    ->insert([
        'idSeance' => $id, 
        'initialLangue' => 'fr', 
        'nomSeance' => '",REPLACE(b.nomFr, '\'', '\\\''),"']);"),
                
                concat("
DB::table('SeanceTraduction')
    ->insert([
        'idSeance' => $id, 
        'initialLangue' => 'en', 
        'nomSeance' => '",REPLACE(b.nomEn, '\'', '\\\''),"']);")
                
                FROM seance a, seance b 
                WHERE b.id = a.seanceParent_id 
                ORDER BY a.id;
          
          
          
          
          
          
            SELECT 
                concat("
                    
                    
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '",YEAR(date)," - ",REPLACE(lieux, '\'', '\\\''),"')->count();
if ($nb == 0) {
    DB::table('LieuSeance')
        ->insert([
            'adminNomLieuSeance' => '",YEAR(date)," - ",REPLACE(lieux, '\'', '\\\''),"',
            'adresse1LieuSeance' => '', 
            'adresse2LieuSeance' => '', 
            'codePostalLieuSeance' => '', 
            'localiteLieuSeance' => '', ]);"),
                               
                concat("
    DB::table('LieuSeanceTraduction')
        ->insert([
            'adminNomLieuSeance' => '",YEAR(date)," - ",REPLACE(lieux, '\'', '\\\''),"', 
            'initialLangue' => 'fr', 
            'nomLieuSeance' => '",REPLACE(lieux, '\'', '\\\''),"']);"),
                               
                concat("
    DB::table('LieuSeanceTraduction')
        ->insert([
            'adminNomLieuSeance' => '",YEAR(date)," - ",REPLACE(lieux, '\'', '\\\''),"', 
            'initialLangue' => 'en', 
            'nomLieuSeance' => '",REPLACE(lieux, '\'', '\\\''),"']);
}"),
                               
                concat(
                "
$id = DB::table('Seance')
    ->insertGetId([
        'adminNomLieuSeance' => '",YEAR(date)," - ",REPLACE(lieux, '\'', '\\\''),"', 
        'dateTimeSeance' => '",date,"', 
        'dureeMinuteSeance' => '",(dureeMinute + dureeHeure * 60),"']);"),
                
                concat("
DB::table('SeanceTraduction')
    ->insert([
        'idSeance' => $id, 
        'initialLangue' => 'fr', 
        'nomSeance' => '",REPLACE(nomFr, '\'', '\\\''),"']);"),
                
                concat("
DB::table('SeanceTraduction')
    ->insert([
        'idSeance' => $id, 
        'initialLangue' => 'en', 
        'nomSeance' => '",REPLACE(nomEn, '\'', '\\\''),"']);")
                
                
         
                FROM seance
                WHERE seance.genreSeance = 'alone';
                
          
         */   
                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Liège')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Liège',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Liège', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Liège']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Liège', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Liège']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Liège', 
       'dateTimeSeance' => '2013-11-29 10:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séances "avant-première" délocalisée (S 1 à 4)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Preview (S 1 à 4)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Woluwe')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Woluwe',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Woluwe', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Woluwe']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Woluwe', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Woluwe']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Woluwe', 
       'dateTimeSeance' => '2013-11-29 10:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séances "avant-première" délocalisée (S 1 à 4)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Preview (S 1 à 4)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Libramont')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Libramont',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Libramont', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Libramont']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Libramont', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Libramont']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Libramont', 
       'dateTimeSeance' => '2013-11-29 10:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séances "avant-première" délocalisée (S 1 à 4)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Preview (S 1 à 4)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Mons')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Mons',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Mons', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Mons']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Mons', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Mons']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Mons', 
       'dateTimeSeance' => '2013-11-29 10:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séances "avant-première" délocalisée (S 1 à 4)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Preview (S 1 à 4)']);
                             
                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Namur - Liège - Tournai - Libramont')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur - Liège - Tournai - Libramont',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur - Liège - Tournai - Libramont', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Liège - Tournai - Libramont']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur - Liège - Tournai - Libramont', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Liège - Tournai - Libramont']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Namur - Liège - Tournai - Libramont', 
       'dateTimeSeance' => '2011-12-02 10:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séances délocalisées AVANT-PREMIERE (1)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Relocated sessions PREVIEW']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Charleroi')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Charleroi',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Charleroi', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Charleroi']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Charleroi', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Charleroi']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Charleroi', 
       'dateTimeSeance' => '2011-12-02 14:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séances délocalisées AVANT-PREMIERE (2)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Relocated sessions PREVIEW']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Namur', 
       'dateTimeSeance' => '2011-12-03 11:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance 2 \'Focus belge\'']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Session 2 \'Belgian focus\'']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Namur', 
       'dateTimeSeance' => '2011-12-03 13:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance 3 \'témoignage\'']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Session 3 \'Testimony\'']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Namur', 
       'dateTimeSeance' => '2011-12-03 15:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance 4 \'cécité\'']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Session 4 \'Blindness\'']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Namur', 
       'dateTimeSeance' => '2011-12-03 17:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance 5 \'chorégraphie et handicap\'']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Session 5 \'Choreography and handicap\'']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Namur', 
       'dateTimeSeance' => '2011-12-03 19:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance 6 \'vie affective et sexuelle 1\'']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Session 6 \'Emotional and sexual life 1\'']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Namur', 
       'dateTimeSeance' => '2011-12-03 22:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance 7 \'vie affective et sexuelle 2\'']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Session 7 \'Emotional and sexual life 2\'']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Namur', 
       'dateTimeSeance' => '2011-12-04 10:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance 8 \'famille\'']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Session 8 \'Family\'']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Namur', 
       'dateTimeSeance' => '2011-12-04 13:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance 9 \'surdité\'']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Session 9 \'Deafness\'']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Namur', 
       'dateTimeSeance' => '2011-12-04 15:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance 10 \'autisme\'']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Session 10 \'Autism\'']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Namur', 
       'dateTimeSeance' => '2011-12-04 17:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance 11 \'courts métrages\'']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Session 11 \'Short films\'']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2011 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2011 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2011 - Namur', 
       'dateTimeSeance' => '2011-12-04 20:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Gala de clôture - Séance 12 Sur invitation']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Closing gala - Session 12 on invitation']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-11-29 20:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Gala ouverture (S 7)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Opening screening']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-11-30 10:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Regards (courts métrages - S 8)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Views shorts films (S8)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-11-30 13:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Musique (S 9)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Music (S 9)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Charleroi (Ciné le Parc)')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Charleroi (Ciné le Parc)',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Charleroi (Ciné le Parc)', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Charleroi (Ciné le Parc)']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Charleroi (Ciné le Parc)', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Charleroi (Ciné le Parc)']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Charleroi (Ciné le Parc)', 
       'dateTimeSeance' => '2013-11-29 14:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séances "avant-première" délocalisée (S 5)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Preview (5)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Bruxelles (Salle Fabry - WSP)')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Bruxelles (Salle Fabry - WSP)',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Bruxelles (Salle Fabry - WSP)', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Bruxelles (Salle Fabry - WSP)']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Bruxelles (Salle Fabry - WSP)', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Bruxelles (Salle Fabry - WSP)']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Bruxelles (Salle Fabry - WSP)', 
       'dateTimeSeance' => '2013-11-29 14:00:01', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séances "avant-première" délocalisée ( surdité - S 6)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Preview "deafness" (6)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-11-30 15:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Ailleurs (S 10)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Foreign S 10']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-11-30 17:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Surdité (S 11)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Deafness (S 11)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-11-30 19:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Ailleurs 2 (S 12)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Foreign 2 (S 12)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-11-30 22:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Sexualité et handicap (S 13)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Disability and sexuality (S 13)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-01 10:15:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Animation  (Séance famille -  14)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Cartoon (S 14)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-01 11:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Avant-première (S 15)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'First screening (S 15)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-01 13:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Libres paroles (S 16)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'They speak about (S 16)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-01 16:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Chorégraphie (S 17)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Dance (S 17)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-01 18:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Comédies (sourts- métrages) (S 18)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Comedy (shorts) (S 18)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-01 20:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'C\'est quoi ton handicap  (S 19)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'What\'s your disability  (S 19)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-02 09:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance pédagogique (primaire) (S 20)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Pedagogic']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-02 11:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance Pédagogique (professionnels) (S 21)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Pedagogic']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-02 13:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance pédagogique (secondaire) (S 22)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Pedagogic']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-02 17:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Témoignage (Philippe Croizon) (S 23)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Testimony (Philippe Croizon)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-02 20:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Paralympics (S 24)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Paralympics (S 24)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-03 09:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance pédagogique (secondaire - supérieur) (S 25)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Pedagogic']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-03 11:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance pédagogique (surdité) (S 26)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Pedagogic deafness']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-03 14:00:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Séance Bonheur (public - péda - pro) (S 27)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Pedagogic']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2013 - Namur - Maison de la Culture')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur - Maison de la Culture']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2013 - Namur - Maison de la Culture', 
       'dateTimeSeance' => '2013-12-03 19:30:00', 
       'dureeMinuteSeance' => '0']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'Gala de clôture et Wippy d\'or']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'Closing ceremony']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-11 20:00:00', 
       'dureeMinuteSeance' => '120']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'GALA D\'OUVERTURE (GUILLAUME AU PAYS DES MERVEILLES)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'OPENNING CEREMONY']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-11 16:15:00', 
       'dureeMinuteSeance' => '60']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'PUB COM et HANDICAP']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'COMMERCIALS and DISABILITY']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-11 14:00:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'I SIGN I LIVE (SEANCE SURDITE)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'DEAFNESS']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-11 11:30:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'GLANCE UP (GRAND DOC)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'GLANCE UP']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-11 09:30:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'PANORAMA (VILLE DE NAMUR)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'PANORAMA (NAMUR CITY)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-12 09:00:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE PEDAGOGIQUE (ENS. FONDAMENTAL)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'PEDAGOGIC (SCHOOL)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-12 11:00:00', 
       'dureeMinuteSeance' => '150']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'CELUI QUI CHANTE (NAMUSIQ)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'MUSIC']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-12 14:00:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE PEDAGOGIQUE (SEC. SUP. et HAUTES ECOLES)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SCHOOL SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-12 16:00:00', 
       'dureeMinuteSeance' => '120']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE BEST OF 2013']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'BEST OF 2013 SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-12 18:30:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'UNKNOWN BEAUTY (SEANCE IRAN)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'IRANIAN SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-13 09:00:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE PEDAGOGIQUE (ENS. SECONDAIRE INFERIEUR)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SCHOOL SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-13 11:15:00', 
       'dureeMinuteSeance' => '135']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'WRETCHES ET JABBERERS (SEANCE AUTISME 1)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'WRETCHES & JABBERERS']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-13 14:15:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'QUELQUE CHOSE EN PLUS (SEANCE AUTISME 2)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SOMETHING MORE']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-13 16:30:00', 
       'dureeMinuteSeance' => '60']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'PUB COM et HANDICAP']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'COMMERCIALS and DISABILITY']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-13 18:15:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SKIN & BONES (SEANCE SEXUALITE ET HANDICAP 1)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SEX & DISABILITY 1 (SKIN & BONES)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-13 20:30:00', 
       'dureeMinuteSeance' => '135']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'COURTS METRAGES (SEANCE SEXUALITE ET HANDICAP 2 )']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SEX & DISABILITY 1 (SHORTS)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-14 10:00:00', 
       'dureeMinuteSeance' => '60']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'PUB COM et HANDICAP']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'COMMERCIALS and DISABILITY']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-14 11:30:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE COURTS-METRAGES DE FICTION 1']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SHORT FEATURE FILMS 1']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-14 13:45:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE COURTS-METRAGES DE FICTION 2']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SHORT FEATURE FILMS 2']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-14 15:45:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE COURTS-METRAGES DOCUMENTAIRES']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SHORT DOCUMENTARY FILMS']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-14 17:30:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE COURTS-METRAGES DE FICTION 3 (COMEDIES)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SHORT FEATURE FILMS 3 (COMEDY)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-14 20:00:00', 
       'dureeMinuteSeance' => '120']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'MARGARITA IN THE STRAW (SEANCE AVANT-PREMIERE )']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'MARGARITA IN THE STRAW']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-15 10:00:00', 
       'dureeMinuteSeance' => '75']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE FAMILLES (DESSINS ANIMES ET CM)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'FAMILY SCREENING (CARTOONS)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-15 11:30:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'GABOR (SEANCE GRAND DOC.)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'GABOR']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-15 14:00:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'CHELLI (NEXT TO HER) (SEANCE AVANT-PREMIERE)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'CHELLI (NEXT TO HER)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-15 16:30:00', 
       'dureeMinuteSeance' => '60']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'PUB COM et HANDICAP']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'COMMERCIALS and DISABILITY']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-15 20:00:00', 
       'dureeMinuteSeance' => '120']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'GALA DE CLOTURE - REMISE DES PRIX']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'CLOSING CEREMONY - AWARDS']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Bruxelles')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Bruxelles',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Bruxelles', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Bruxelles']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Bruxelles', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Bruxelles']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Bruxelles', 
       'dateTimeSeance' => '2015-11-10 09:30:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE PEDAGOGIQUE (ENS. FONDAMENTAL)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SCHOOL SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Mons')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Mons',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Mons', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Mons']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Mons', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Mons']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Mons', 
       'dateTimeSeance' => '2015-11-10 09:30:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE PEDAGOGIQUE (ENS. SECONDAIRE INFERIEUR)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SCHOOL SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Bruxelles')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Bruxelles',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Bruxelles', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Bruxelles']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Bruxelles', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Bruxelles']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Bruxelles', 
       'dateTimeSeance' => '2015-11-10 13:30:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE PEDAGOGIQUE (ENS. SECONDAIRE INFERIEUR)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SCHOOL SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Bruxelles')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Bruxelles',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Bruxelles', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Bruxelles']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Bruxelles', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Bruxelles']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Bruxelles', 
       'dateTimeSeance' => '2015-11-10 11:30:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE AVANT-PREMIERE']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'PREVIEWS SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Liège')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Liège',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Liège', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Liège']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Liège', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Liège']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Liège', 
       'dateTimeSeance' => '2015-11-10 12:00:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE AVANT-PREMIERE']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'PREVIEWS SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Bruxelles.')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Bruxelles.',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Bruxelles.', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Bruxelles.']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Bruxelles.', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Bruxelles.']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Bruxelles.', 
       'dateTimeSeance' => '2015-11-10 14:00:00', 
       'dureeMinuteSeance' => '120']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE BEST OF 2013']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'BEST OF 2013 SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Namur')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Namur']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Namur', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Namur']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Namur', 
       'dateTimeSeance' => '2015-11-12 20:30:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'CONFERENCE "STAND-UP" par JOSEPH SCHOVANEC']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'STAND-UP (Joseph Schovanec)']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Liège')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Liège',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Liège', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Liège']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Liège', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Liège']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Liège', 
       'dateTimeSeance' => '2015-11-10 09:30:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE PEDAGOGIQUE (ENS. FONDAMENTAL)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SCHOOL SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Charleroi')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Charleroi',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Charleroi', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Charleroi']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Charleroi', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Charleroi']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Charleroi', 
       'dateTimeSeance' => '2015-11-10 09:30:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE PEDAGOGIQUE (ENS. FONDAMENTAL)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SCHOOL SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Libramont')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Libramont',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Libramont', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Libramont']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Libramont', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Libramont']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Libramont', 
       'dateTimeSeance' => '2015-11-10 09:30:00', 
       'dureeMinuteSeance' => '105']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE PEDAGOGIQUE (ENS. SECONDAIRE INFERIEUR)']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'SCHOOL SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Charleroi')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Charleroi',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Charleroi', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Charleroi']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Charleroi', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Charleroi']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Charleroi', 
       'dateTimeSeance' => '2015-11-10 11:30:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE AVANT-PREMIERE']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'PREVIEWS SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Mons')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Mons',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Mons', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Mons']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Mons', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Mons']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Mons', 
       'dateTimeSeance' => '2015-11-10 11:30:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE AVANT-PREMIERE']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'PREVIEWS SCREENING']);

                   
                   
$nb = DB::table('LieuSeance')->where('adminNomLieuSeance', '=', '2015 - Libramont')->count();
if ($nb == 0) {
   DB::table('LieuSeance')
       ->insert([
           'adminNomLieuSeance' => '2015 - Libramont',
           'adresse1LieuSeance' => '', 
           'adresse2LieuSeance' => '', 
           'codePostalLieuSeance' => '', 
           'localiteLieuSeance' => '', ]);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Libramont', 
           'initialLangue' => 'fr', 
           'nomLieuSeance' => 'Libramont']);

   DB::table('LieuSeanceTraduction')
       ->insert([
           'adminNomLieuSeance' => '2015 - Libramont', 
           'initialLangue' => 'en', 
           'nomLieuSeance' => 'Libramont']);
}

$id = DB::table('Seance')
   ->insertGetId([
       'adminNomLieuSeance' => '2015 - Libramont', 
       'dateTimeSeance' => '2015-11-10 11:30:00', 
       'dureeMinuteSeance' => '90']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'fr', 
       'nomSeance' => 'SEANCE AVANT-PREMIERE']);

DB::table('SeanceTraduction')
   ->insert([
       'idSeance' => $id, 
       'initialLangue' => 'en', 
       'nomSeance' => 'PREVIEWS SCREENING']);            
    /*
        SELECT concat("



        $id = DB::table('Article')
            ->insertGetId([
                'urlImageArticle' => '",REPLACE(image.url,'\'','\\\'') ,"', 
                'nomCategorieArticle' => '",REPLACE(categorie.nomFr,'\'','\\\'') ,"', 
                'ordreArticle' => '",article.ordre,"', 
                'dateTimeArticle' => '",article.date,"']);

        DB::table('ArticleTraduction')
            ->insert([
                'idArticle' => $id, 
                'initialLangue' => 'fr', 
                'titreArticle' => '",REPLACE(article.titreFr,'\'','\\\'') ,"', 
                'contenuArticle' => '",REPLACE(article.contenuFr,'\'','\\\'') ,"']);

        DB::table('ArticleTraduction')
            ->insert([
                'idArticle' => $id, 
                'initialLangue' => 'en', 
                'titreArticle' => '",REPLACE(article.titreEn,'\'','\\\'') ,"', 
                'contenuArticle' => '",REPLACE(article.contenuEn,'\'','\\\'') ,"']);


        ")from article, image, categorie where image.id = article.image_id and categorie.id = article.categorie_id;
     */


        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/TV:INFOJTRTBF_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '2', 
               'dateTimeArticle' => '1970-01-09 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'TV : INFO JT RTBF', 
               'contenuArticle' => '<p>JT 19h30 de la RTBF du 2-12-2011 . <a href="http://www.youtube.com/watch?v=d4nTg2Eqkls" style="background-color:#002f66;background:-moz-linear-gradient(center top , #669ad9 0%, #002f66) repeat scroll 0% 0% padding-box transparent;border-radius:4px 4px 4px 4px;border:1px solid #002f66;color:#FFF;cursor:pointer;font-family:arial,helvetica,sans-serif;font-size:0.9em;padding:6px 24px;text-align:right;text-decoration:none;" target="_blank">Voir la vid&eacute;o</a>.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'TV : INFO JT RTBF', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/TV:CINESTRATION(RTBF)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '3', 
               'dateTimeArticle' => '1970-01-09 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'TV : CINESTRATION (RTBF)', 
               'contenuArticle' => '<p><span style="font-size:12pt">Emission &quot;Cinestation&quot; de Philippe Reynaert. <a href="http://www.youtube.com/watch?v=GSVFZw6uwUM" target="_blank">Voir la vid&eacute;o</a>.</span></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'TV : CINESTRATION (RTBF)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/TV:CABOUGE(RTBF)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '4', 
               'dateTimeArticle' => '1970-01-09 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'TV : CA BOUGE (RTBF)', 
               'contenuArticle' => '<p>Reportage r&eacute;alis&eacute; par l&#39;&eacute;mission &quot;Ca Bouge&quot; (RTBF) .</p>

        <p><a href="http://www.youtube.com/watch?v=9iCGzhb4OPE" target="_blank">Voir l&#39;&eacute;mission</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'TV : CA BOUGE (RTBF)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/TV:JTCANALC_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '5', 
               'dateTimeArticle' => '1970-01-09 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'TV : JT CANAL C', 
               'contenuArticle' => '<p>Luc Boland, interview&eacute; lors du journal t&eacute;l&eacute;vis&eacute; de Canal C.</p>

        <p><a href="http://www.youtube.com/watch?v=ez3HPj_X1-g" target="_blank">voir l&#39;interview</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'TV : JT CANAL C', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/TV:WEB:HORIZON2000_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '6', 
               'dateTimeArticle' => '1970-01-09 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'TV WEB : HORIZON 2000', 
               'contenuArticle' => '<p>Interview de Luc Boland, administrateur d&eacute;l&eacute;gu&eacute; du festival par Serge Van Brakel de Horizon 2000.</p>

        <p><a href="http://www.youtube.com/watch?v=asU9m_qlO-c" target="_blank">Voir l&#39;interview</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'TV WEB : HORIZON 2000', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/RADIO:BEL-RTL(journalParlé)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '7', 
               'dateTimeArticle' => '1970-01-08 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'RADIO : BEL-RTL (journal parlé)', 
               'contenuArticle' => '<p>Journal parl&eacute; radio du 2/12/11 (direct avec Luc Boland)</p>

        <p>Podcast :<a href="http://www.a-lou.com/videos/BEL_RTL-Bruxelles-EOP.mp3" target="_blank">Ecouter le podcast</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'RADIO : BEL-RTL (journal parlé)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/RADIO:RTBF(toutAutreChose)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '8', 
               'dateTimeArticle' => '1970-01-08 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'RADIO : RTBF (tout autre chose)', 
               'contenuArticle' => '<p><u><strong>RTBF La Premi&egrave;re &#39;Tout autre chose&#39; &ndash; en direct</strong></u><br />
        V&eacute;ronique Thyberghien<br />
        avec Luc Boland, Nicole Gillet, Jaco Van Dormael, Renaud, Fran&ccedil;ois Collinet.</p>

        <p>Podcast :<a href="http://www.a-lou.com/videos/tout_autre_chose_14:11:2011_-_EOP" target="_blank">Ecouter le podcast</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'RADIO : RTBF (tout autre chose)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PRESSE:LALIBREBELGIQUE(1)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '9', 
               'dateTimeArticle' => '1970-01-07 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'PRESSE : LA LIBRE BELGIQUE (1)', 
               'contenuArticle' => '<p><u><strong>Le festival des &quot;intouchables&quot;</strong></u></p>

        <p><strong><u>Une premi&egrave;re &agrave; l&rsquo;occasion de la journ&eacute;e mondiale de la personne handicap&eacute;e.</u></strong></p>

        <p><img src="http://eopfestival.be/uploads/media/hasta1.jpg" style="height:229px; width:344px" /></p>

        <p><br />
        Ce n&rsquo;est pas l&rsquo;effet &quot;Intouchables&quot; - la manifestation fut organis&eacute;e &quot; in tempore non suspecto&quot; - mais le premier festival Eop ! (pour Extra &amp; Ordinary People !) tombe &agrave; point nomm&eacute; pour rebondir sur l&rsquo;engouement autour du film d&rsquo;Olivier Nakache et Eric Toledano (1). Eop ! se tiendra &agrave; Namur du 2 au 4 d&eacute;cembre, en marge de la journ&eacute;e mondiale de la personne handicap&eacute;e. Soutenu par l&rsquo;Agence wallonne pour l&rsquo;int&eacute;gration de la personne handicap&eacute;e (Awiph), Cap 48, le Festival international du film francophone et les minist&egrave;res de l&rsquo;Egalit&eacute; des chances et de l&rsquo;Audiovisuel, le festival est une initiative de Luc Boland, r&eacute;alisateur et p&egrave;re d&rsquo;un petit gar&ccedil;on aveugle.<br />
        Temp&eacute;rons un brin l&rsquo;affirmation des organisateurs selon laquelle les films traitant du handicap sont absents des &eacute;crans. R&eacute;guli&egrave;rement, ils font de grands succ&egrave;s et des films &quot;&agrave; Oscar&quot; (ou C&eacute;sar) : citons &quot;Rain Man&quot;, &quot;Un homme d&rsquo;exception&quot;, &quot;Le scaphandre et le papillon&quot; &quot;Hasta la Vista !&quot; du Belge Goeffrey Enthoven, com&eacute;die autour de trois jeunes parapl&eacute;giques se rendant dans un bordel en Espagne, vient de faire un carton en Flandre. Le film ressort d&rsquo;ailleurs ce mois-ci en Wallonie et fait partie de la programmation d&rsquo;Eop !<br />
        Parmi les dix longs ou moyens m&eacute;trages et la vingtaine de courts m&eacute;trages ou de clips pr&eacute;sent&eacute;s, les documentaires ou les docu-fictions dominent. &quot;Sexe, amour et handicap&quot; de Jean-Michel Carr&eacute; apportera ainsi un contrepoint documentaire &agrave; &quot;Hasta la Vista !&quot; &quot;Marathon&quot; de Chung Yoon-chul, est une fiction cor&eacute;enne inspir&eacute;e d&rsquo;une histoire vraie, o&ugrave; un jeune autiste tente de trouver sa place dans la soci&eacute;t&eacute; par le marathon. &quot;L&rsquo;homme qui ne voulait pas &ecirc;tre fou&quot; de Bernadette Saint-Remi et V&eacute;ronique Fievet conte le combat de Patrick contre la schizophr&eacute;nie<br />
        Tr&egrave;s logiquement, le festival est ouvert &agrave; tous. Une fois n&rsquo;est pas coutume, tous les lieux de projection sont accessibles aux personnes &agrave; mobilit&eacute; r&eacute;duite (avec un service de transport ad hoc) et les s&eacute;ances s&rsquo;accompagnant de sous-titres, d&rsquo;interpr&eacute;tation en langage des signes, de pictogrammes ou d&rsquo;audio-description, ainsi que de programmes en braille ou Daisy. Une initiative &agrave; m&eacute;diter pour les autres festivals, voire pour toutes les s&eacute;ances publiques. Eop ! ouvrira, peut-&ecirc;tre, ce d&eacute;bat-l&agrave; aussi.</p>

        <p><br />
        A.Lo.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'PRESSE : LA LIBRE BELGIQUE (1)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PRESSE:LALIBREBELGIQUE(2)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '10', 
               'dateTimeArticle' => '1970-01-06 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'PRESSE : LA LIBRE BELGIQUE (2)', 
               'contenuArticle' => '<p><u><strong>Eop : le handicap a son festival</strong></u><br />
        A.-F.So.<br />
        <br />
        <strong>Eop ! premier clap en Belgique, du 2 au 4 d&eacute;cembre.</strong></p>

        <p><br />
        Premi&egrave;re belge, EOP ! (Extra&amp;Ordinary People !) organise le 3 d&eacute;cembre, &agrave; l&rsquo;occasion de la journ&eacute;e mondiale de la personne handicap&eacute;e, son festival international du film, &agrave; Namur. Soutenu par l&rsquo;Agence wallonne pour l&rsquo;int&eacute;gration de la personne handicap&eacute;e (Awiph), Cap 48, le Festival international du film francophone (Fiff) et les minist&egrave;res de l&rsquo;Egalit&eacute; des chances et de l&rsquo;Audiovisuel, le festival est l&rsquo;initiative de Luc Boland, administrateur d&eacute;l&eacute;gu&eacute; de l&rsquo;ASBL, r&eacute;alisateur et p&egrave;re d&rsquo;un petit gar&ccedil;on aveugle. Luc Boland a sign&eacute; notamment &quot;Une sir&egrave;ne dans la nuit&quot; avec Roland Magdane ou encore &quot;Lettre &agrave; Lou&quot; sur son fils porteur d&rsquo;un syndrome tr&egrave;s rare. &quot;Loin de c&eacute;l&eacute;brer la grand-messe du handicap entre int&eacute;ress&eacute;s, notre volont&eacute; est de toucher le grand public, souligne Luc Boland. C&rsquo;est l&rsquo;occasion de rendre le handicap plus humain, de d&eacute;mystifier la diff&eacute;rence, la d&eacute;ficience et le handicap, et de montrer au grand public des faits de la vie quotidienne.&quot; Plus de soixante films seront diffus&eacute;s du 2 au 4 d&eacute;cembre &agrave; la maison de la Culture de la province de Namur. Soit dix longs-m&eacute;trages, 14 courts-m&eacute;trages et 7 clips. Des films &eacute;manant des quatre coins du monde dont certains se sont fait remarquer lors de festivals phares comme celui de Cannes mais n&rsquo;ont jamais pu encore &ecirc;tre vus en Belgique, faute de distributeurs. Le festival a choisi la maison de la Culture de Namur pour organiser son festival. Mais des d&eacute;centralisations sont pr&eacute;vues.&nbsp;</p>

        <p><img src="http://eopfestival.be/uploads/media/nobodys-perfect.jpg" style="height:276px; width:207px" /></p>

        <p>Ainsi le film d&rsquo;ouverture &quot;Nobody&rsquo;s Perfect&quot;, de Niko Van Glasow, &eacute;voquant les s&eacute;quelles du Soft&eacute;non fera l&rsquo;objet de cinq avant-premi&egrave;res &agrave; Tournai, Li&egrave;ge, Charleroi, Libramont et Namur. Parmi les th&eacute;matiques abord&eacute;es, &eacute;pinglons, la sant&eacute; mentale, l&rsquo;autisme (&quot;Autisme, l&rsquo;espoir&quot; de Natacha Calestr&eacute;m&eacute;, du film cor&eacute;en &quot;Marathon&quot;, &quot;Mon petit fr&egrave;re de la lune&quot;), la c&eacute;cit&eacute;, la surdit&eacute;, l&rsquo;int&eacute;gration, les troubles obsessionnels compulsifs (le tr&egrave;s po&eacute;tique &quot;Anne Vliegt&quot; de Catherine Van Campen). La question de la vie affective et sexuelle sera tr&egrave;s pr&eacute;sente gr&acirc;ce &agrave; de tr&egrave;s beaux films tels que &quot;Hasta la vista&quot;, de Geoffrey Enthoven, &quot;Sexe amour&quot; et &quot;Handicap&quot; de Jean-Michel Carr&eacute;, &quot;Blind Loves&quot; ou encore &quot;Monica &amp; David&quot; d&rsquo;Alexandra Godina non d&eacute;nu&eacute; d&rsquo;humour, diffus&eacute; en cl&ocirc;ture du festival). Le festival sera &eacute;galement anim&eacute; par des rencontres avec les auteurs et acteurs des films tels que Jaco Van Dormael et par des remises de prix. EOP ! garantit sa totale accessibilit&eacute; aux personnes handicap&eacute;es : sous-titrage et langue des signes, audio-description, acc&egrave;s pour les personnes &agrave; mobilit&eacute; r&eacute;duite.<br />
        Prix : 2 euros la s&eacute;ance, 10 euros le pass. Gratuit pour les s&eacute;ances d&eacute;localis&eacute;es.<br />
        http://www.lalibre.be/actu/namur-luxembourg/article/703167/eop-le-handicap-a-son-festival.html</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'PRESSE : LA LIBRE BELGIQUE (2)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PRESSE:LALIBREBELGIQUE(3)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '11', 
               'dateTimeArticle' => '1970-01-05 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'PRESSE : LA LIBRE BELGIQUE (3)', 
               'contenuArticle' => '<p>L&rsquo;art de filmer les diff&eacute;rences</p>

        <p>Le franc succ&egrave;s en salles d&rsquo;un film comme &quot;Intouchables&quot;, d&rsquo;Eric Toledano et Olivier Nakache, ou &quot;Hasta la Vista&quot;, de Geoffroy Eenthoven, ou, plus anciens, &quot;Le Huiti&egrave;me Jour&quot;, de Jaco Van Dormael, ou encore &quot;Rain Man&quot;, de Barry Levinson, d&eacute;montre &agrave; profusion que les sujets qui abordent les diff&eacute;rences physiques ou mentales dans le genre humain suscitent l&rsquo;engouement.&nbsp;</p>

        <p><img src="http://eopfestival.be/uploads/media/baiser.jpg" style="height:198px; width:273px" /></p>

        <p>Dans une soci&eacute;t&eacute; marchande o&ugrave; les mod&egrave;les sont lisses et uniformis&eacute;s, o&ugrave; tout tend &agrave; nous faire d&eacute;sirer l&rsquo;anonymat du normal ou l&rsquo;extravagance du show, il est &eacute;tonnant de constater que l&rsquo;humain s&rsquo;&eacute;meut pour l&rsquo;humanit&eacute; dans sa complexit&eacute;. Une des qualit&eacute;s du cin&eacute;ma r&eacute;side justement &agrave; ce que le 7e art soit capable de d&eacute;noncer les in&eacute;galit&eacute;s inscrites dans le fonctionnement structurel d&rsquo;un monde. Toutes ces constatations ont certainement d&eacute;cid&eacute; Luc Boland &agrave; organiser le Festival EOP, Extra &amp; Ordinary People ! International Film Festival. Le r&eacute;alisateur, papa d&rsquo;un enfant enferm&eacute; dans son handicap, avec lequel il a fait la tr&egrave;s belle &quot;Lettre &agrave; Lou&quot;, s&rsquo;&eacute;tait d&eacute;j&agrave; mobilis&eacute; avec ce film pour d&eacute;fendre la reconnaissance des besoins particuliers des personnes d&eacute;ficientes et de leurs familles. Ce festival - qui d&eacute;bute sa toute premi&egrave;re &eacute;dition cette fin de semaine &agrave; la Maison de la culture de la province de Namur, du vendredi 2 au dimanche 3 d&eacute;cembre - propose 23 longs m&eacute;trages et une s&eacute;ance de courts, documentaires et fictions. Dans cette s&eacute;ance de courts, de petites perles sont programm&eacute;es comme &quot;Le baiser&quot;, de Jaco Van Dormael, avec Pascal Duquenne, ou &quot;Max entre ciel et terre&quot;, de Jean-Luc Slock et les enfants de l&rsquo;atelier d&rsquo;animation Cam&eacute;ra, etc. C&ocirc;t&eacute; long, le film flamand &quot;Hasta la Vista&quot; est &eacute;galement &agrave; l&rsquo;affiche. La programmation est &agrave; l&rsquo;image du film de Geoffroy Eenthoven, dr&ocirc;le, poignant, &eacute;mouvant, chaleureux et politiquement incorrect. Le but de ce festival n&rsquo;est pas de &quot;montrer&quot; la personne handicap&eacute;e, mais de sensibiliser le grand public cin&eacute;phile &agrave; la question du handicap.</p>

        <p>Par Dimitra Bouras</p>

        <p><br />
        http://www.eopfestival.be<br />
        Pour plus d&rsquo;infos sur notre cin&eacute;ma, www.cinergie.be<br />
        http://www.lalibre.be/culture/cinema/article/703285/l-art-de-filmer-les-differences.html</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'PRESSE : LA LIBRE BELGIQUE (3)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PRESSE:L\'AVENIR(1)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '12', 
               'dateTimeArticle' => '1970-01-04 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'PRESSE : L\'AVENIR (1)', 
               'contenuArticle' => '<p><u><strong>&laquo; Regardez-la juste dans les yeux&hellip; &raquo;</strong></u><br />
        &bull; C&eacute;dric FLAMENT<br />
        Un des films phare pr&eacute;sent&eacute;s au festival : &laquo; Nobody&rsquo;s perfect &raquo;, de l&rsquo;Allemand Niko Von Glasow. Comment des &ecirc;tres touch&eacute;s dans leur corps peuvent se mettre &agrave; nu.<br />
        NAMUR - Cin&eacute;ma et handicap. La Maison de la Culture accueille le festival &laquo; EOP &raquo;. Cherchez la diff&eacute;rence.Ou ne la trouvez pas&hellip;<br />
        Le cin&eacute;ma sur le handicap. Le cin&eacute;ma sur la diff&eacute;rence. Et tout un festival qui s&rsquo;attache &agrave; cela. Pas grand public comme &eacute;v&eacute;nement ? C&rsquo;est que vous avez peu de m&eacute;moire.<br />
        Allez, souvenez &ndash; vous. Il y a eu Forrest Gump et son Tom Hanks dont la simplicit&eacute; mentale revisitait l&rsquo;histoire am&eacute;ricaine avec une fra&icirc;cheur mondialement pl&eacute;biscit&eacute;e. Il y a eu Rain Man et un Dustin Hoffman r&eacute;inventant la tendresse intra-familiale. Vint plus r&eacute;cemment aussi Le scaphandre et le Papillon de Julian Schnabel, o&ugrave; Matthieu Amalrick incarnait cet homme emprisonn&eacute; dans son corps immobile, souffrant d&rsquo;un locked-up syndrom. Et puis, c&ocirc;t&eacute; belge, avez-vous oubli&eacute; Le Huiti&egrave;me Jour de Jaco Van Dormael, d&eacute;monstration de ce que la trisomie n&rsquo;est certainement pas un barrage &agrave; l&rsquo;amour et l&rsquo;amiti&eacute; ?<br />
        <strong>Invitation au mouvement</strong><br />
        Voil&agrave; pour les grands succ&egrave;s, bien s&ucirc;r. Mais d&rsquo;autres cin&eacute;astes, moins connus, ont continu&eacute; de travailler sur le handicap (nous pr&eacute;f&eacute;rons dire diff&eacute;rence). C&rsquo;est &agrave; eux, &agrave; leurs th&eacute;matiques et &agrave; leurs interpr&egrave;tes que rend hommage ce premier festival &laquo; eop &raquo; (on a envie d&rsquo;y voir un &laquo; et hop &raquo; jubilatoire, comme une invitation au mouvement, qu&rsquo;il soit physique ou c&eacute;r&eacute;bral). &laquo; EOP &raquo; est le raccourci positif de &laquo; Extra &amp; Ordinary People &raquo;. Et le festival se pose comme une premi&egrave;re &eacute;dition d&rsquo;un &eacute;v&eacute;nement d&eacute;di&eacute; &agrave; l&rsquo;image au service de la diff&eacute;rence. Th&eacute;matique pointue, mais soucis de l&rsquo;image aussi : pas question de brader la forme pour le fonds. Sur 60 films pr&eacute;sent&eacute;s, le comit&eacute; de s&eacute;lection a choisi 10 longs, 14 courts et 7 clips, venant de dix pays diff&eacute;rents. On y parle c&eacute;cit&eacute;, sant&eacute; mentale, surdit&eacute;, autisme, sexualit&eacute; des personnes handicap&eacute;es, mariage, int&eacute;gration victime de Thalidomie, syndrome de la Tourette.<br />
        <strong>Qui est dans la norme ?</strong><br />
        Et dans ce week-end d&eacute;di&eacute; &agrave; la diff&eacute;rence (avec quelques invit&eacute;s de marque, comme Jaco Van Dormael), la chance est offerte a chacun de d&eacute;couvrir l&rsquo;autre. Peut-&ecirc;tre pour comprendre comment, parfois, la normalit&eacute; n&rsquo;est qu&rsquo;un concept tout relatif.&brvbar;<br />
        http://www.lavenir.net/article/detail.aspx?articleid=DMF20111129_00085554</p>

        <p><img src="http://eopfestival.be/uploads/media/nobodys-perfect.jpg" /></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'PRESSE : L\'AVENIR (1)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PRESSE:L\'AVENIR(2)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '13', 
               'dateTimeArticle' => '1970-01-03 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'PRESSE : L\'AVENIR (2)', 
               'contenuArticle' => '<p><u><strong>Pourquoi ne pourrait-on pas t&eacute;moigner d&rsquo;un parcours&hellip; ? &raquo;</strong></u><br />
        Luc Boland est homme d&rsquo;image, et aussi papa d&rsquo;un petit Lou qui l&rsquo;inspire.<br />
        <img src="http://eopfestival.be/uploads/media/Luc-portrait2007.jpg" style="height:229px; width:343px" />Luc Boland</p>

        <p><br />
        <strong>Luc Boland est r&eacute;alisateur de films. On lui doit quelques jolies bobines, comme &laquo; Une sir&egrave;ne dans la nuit &raquo; avec Roland Magdane, ou &laquo; La Torpille &raquo; avec Catherine Jacob.</strong><br />
        Il est aussi dans la vie le papa d&rsquo;un petit Lou, Lion lumineux et fac&eacute;tieux, petit bout d&rsquo;homme n&eacute; presqu&rsquo;aveugle et avec un petit retard mental.<br />
        <strong>Son papa a puis&eacute; dans son inspiration artistique la force et la joie de filmer &laquo; Lettre &agrave; Lou &raquo;, t&eacute;moignage de vie sur le parcours d&rsquo;un enfant diff&eacute;rent, mais plein d&rsquo;envie&hellip; de vie.</strong><br />
        &laquo; Lou est arriv&eacute; en 98 avec ses handicaps. Je me suis imm&eacute;diatement demand&eacute; pourquoi on ne pourrait t&eacute;moigner de son parcours &raquo;, dit l&rsquo;auteur, qui a vite compris combien sa lettre filmique d&rsquo;amour &eacute;tait partag&eacute;e par les spectateurs. &laquo; &Agrave; chaque diffusion du film, je re&ccedil;ois entre 1000 et 1500 courriels. C&rsquo;est aussi cela qui m&rsquo;a confort&eacute; dans l&rsquo;id&eacute;e d&rsquo;organiser un festival de film autour du handicap et de la diff&eacute;rence. &raquo;<br />
        <strong>Luc Boland a fait ainsi le tour de plusieurs festivals traitant de la th&eacute;matique, de Cannes au Maroc.</strong><br />
        Et l&rsquo;envie, conjointe au besoin, lui a fait cr&eacute;er ce premier festival namurois, fort du soutien de la Ville de Namur, de la R&eacute;gion wallonne et de la province. Il s&rsquo;agit d&rsquo;une premi&egrave;re. Fort aussi &ndash; surtout &ndash; du partenariat avec le festival du film francophone de Namur. Bras ouverts. &brvbar; C.F.<br />
        http://www.lavenir.net/article/detail.aspx?articleid=DMF20111129_00085459</p>

        <p>&Eacute;dA &ndash; 10549872376</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'PRESSE : L\'AVENIR (2)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PRESSE:LESOIR_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '14', 
               'dateTimeArticle' => '1970-01-02 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'PRESSE : LE SOIR', 
               'contenuArticle' => '<p>le soir</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'PRESSE : LE SOIR', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PRESSE:LADERNIEREHEURE_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '15', 
               'dateTimeArticle' => '1970-01-01 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'PRESSE : LA DERNIERE HEURE', 
               'contenuArticle' => '<p><u><strong>Eop : le handicap a son festival</strong></u><br />
        <br />
        <strong>Eop ! premier clap en Belgique, du 2 au 4 d&eacute;cembre.</strong></p>

        <p><br />
        <strong>Premi&egrave;re belge, EOP !</strong> (Extra&amp;Ordinary People !) organise le 3 d&eacute;cembre, &agrave; l&rsquo;occasion de la journ&eacute;e mondiale de la personne handicap&eacute;e, son festival international du film, &agrave; Namur.</p>

        <p>Soutenu par l&rsquo;Agence wallonne pour l&rsquo;int&eacute;gration de la personne handicap&eacute;e (Awiph), Cap 48, le Festival international du film francophone (Fiff) et les minist&egrave;res de l&rsquo;Egalit&eacute; des chances et de l&rsquo;Audiovisuel, le festival est l&rsquo;initiative de Luc Boland, administrateur d&eacute;l&eacute;gu&eacute; de l&rsquo;ASBL, r&eacute;alisateur et p&egrave;re d&rsquo;un petit gar&ccedil;on aveugle. Luc Boland a sign&eacute; notamment &quot;Une sir&egrave;ne dans la nuit&quot; avec Roland Magdane ou encore &quot;Lettre &agrave; Lou&quot; sur son fils porteur d&rsquo;un syndrome tr&egrave;s rare. &quot;Loin de c&eacute;l&eacute;brer la grand-messe du handicap entre int&eacute;ress&eacute;s, notre volont&eacute; est de toucher le grand public, souligne Luc Boland. C&rsquo;est l&rsquo;occasion de rendre le handicap plus humain, de d&eacute;mystifier la diff&eacute;rence, la d&eacute;ficience et le handicap, et de montrer au grand public des faits de la vie quotidienne.&quot; Plus de soixante films seront diffus&eacute;s du 2 au 4 d&eacute;cembre &agrave; la maison de la Culture de la province de Namur. Soit dix longs-m&eacute;trages, 14 courts-m&eacute;trages et 7 clips. Des films &eacute;manant des quatre coins du monde dont certains se sont fait remarquer lors de festivals phares comme celui de Cannes mais n&rsquo;ont jamais pu encore &ecirc;tre vus en Belgique, faute de distributeurs. Le festival a choisi la maison de la Culture de Namur pour organiser son festival. Mais des d&eacute;centralisations sont pr&eacute;vues. Ainsi le film d&rsquo;ouverture &quot;Nobody&rsquo;s Perfect&quot;, de Niko Van Glasow, &eacute;voquant les s&eacute;quelles du Soft&eacute;non fera l&rsquo;objet de cinq avant-premi&egrave;res &agrave; Tournai, Li&egrave;ge, Charleroi, Libramont et Namur.&nbsp;</p>

        <p><strong>Parmi les th&eacute;matiques abord&eacute;es</strong>, &eacute;pinglons, la sant&eacute; mentale, l&rsquo;autisme (&quot;Autisme, l&rsquo;espoir&quot; de Natacha Calestr&eacute;m&eacute;, du film cor&eacute;en &quot;Marathon&quot;, &quot;Mon petit fr&egrave;re de la lune&quot;), la c&eacute;cit&eacute;, la surdit&eacute;, l&rsquo;int&eacute;gration, les troubles obsessionnels compulsifs (le tr&egrave;s po&eacute;tique &quot;Anne Vliegt&quot; de Catherine Van Campen). La question de la vie affective et sexuelle sera tr&egrave;s pr&eacute;sente gr&acirc;ce &agrave; de tr&egrave;s beaux films tels que &quot;Hasta la vista&quot;, de Geoffrey Enthoven, &quot;Sexe amour&quot; et &quot;Handicap&quot; de Jean-Michel Carr&eacute;, &quot;Blind Loves&quot; ou encore &quot;Monica &amp; David&quot; d&rsquo;Alexandra Godina non d&eacute;nu&eacute; d&rsquo;humour, diffus&eacute; en cl&ocirc;ture du festival). Le festival sera &eacute;galement anim&eacute; par des rencontres avec les auteurs et acteurs des films tels que Jaco Van Dormael et par des remises de prix. EOP ! garantit sa totale accessibilit&eacute; aux personnes handicap&eacute;es : sous-titrage et langue des signes, audio-description, acc&egrave;s pour les personnes &agrave; mobilit&eacute; r&eacute;duite.<br />
        Prix : 2 euros la s&eacute;ance, 10 euros le pass. Gratuit pour les s&eacute;ances d&eacute;localis&eacute;es.<br />
        http://www.lalibre.be/actu/namur-luxembourg/article/703167/eop-le-handicap-a-son-festival.html</p>

        <p>A.-F.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'PRESSE : LA DERNIERE HEURE', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/CROQUIS:LADH_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '16', 
               'dateTimeArticle' => '1970-01-09 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'CROQUIS : LA DH', 
               'contenuArticle' => '<p>Croquis dans la Derni&egrave;re Heure &agrave; propos du Festival EOP!</p>

        <p><img src="http://eopfestival.be/uploads/media/EOP-DHcroquis.jpg" style="height:289px; width:346px" /></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'CROQUIS : LA DH', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PRESSE:7sur7_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '17', 
               'dateTimeArticle' => '1970-01-08 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'PRESSE : 7sur7', 
               'contenuArticle' => '<p><u><strong>Le festival EOP! sensibilise au th&egrave;me du handicap</strong></u><br />
        EOP! (Extra &amp; Ordinary People!) organise le 3 d&eacute;cembre, &agrave; l&#39;occasion de la journ&eacute;e mondiale de la personne handicap&eacute;e, son festival international du film, &agrave; Namur, a annonc&eacute; l&#39;ASBL lundi.<br />
        Soutenu par l&#39;Agence wallonne pour l&#39;int&eacute;gration de la personne handicap&eacute;e (Awiph), Cap 48, le Festival international du film francophone (Fiff) et les minist&egrave;res de l&#39;Egalit&eacute; des chances et de l&#39;Audiovisuel, le festival est l&#39;initiative de Luc Boland, administrateur d&eacute;l&eacute;gu&eacute; de l&#39;ASBL, r&eacute;alisateur et papa d&#39;un petit gar&ccedil;on aveugle. &quot;C&#39;est l&#39;occasion de rendre le handicap plus humain, de d&eacute;mystifier la diff&eacute;rence, la d&eacute;ficience et le handicap, et de montrer au grand public des faits de la vie quotidienne&quot;, a expliqu&eacute; la responsable communication du festival, Marie-France Duppagne. Plus de soixante films seront diffus&eacute;s du 2 au 4 d&eacute;cembre &agrave; la Maison de la Culture de la province de Namur. Le film d&#39;ouverture &quot;Nobody&#39;s Perfect&quot;, de Niko Van Glasow, fera l&#39;objet de cinq avant-premi&egrave;res &agrave; Tournai, Li&egrave;ge, Charleroi, Libramont et Namur. Le festival sera &eacute;galement anim&eacute; par des rencontres avec les auteurs et acteurs des films et par des remises de prix. &quot;EOP! &quot; garantit sa totale accessibilit&eacute; aux personnes handicap&eacute;es: sous-titrage et langue des signes, audio-description, acc&egrave;s pour les personnes &agrave; mobilit&eacute; r&eacute;duite, etc. (belga/lcc)<br />
        28/11/11<br />
        http://www.7sur7.be/7s7/fr/1528/Cinema/article/detail/1354835/2011/11/28/Le-festival-EOP-sensibilise-au-theme-du-handicap.dhtml</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'PRESSE : 7sur7', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PRESSE:LELIGUEUR_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '18', 
               'dateTimeArticle' => '1970-01-08 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'PRESSE : LE LIGUEUR', 
               'contenuArticle' => '<p>Article paru dans le Ligueur :</p>

        <p><img src="http://eopfestival.be/uploads/media/le-ligueur.jpg" /></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'PRESSE : LE LIGUEUR', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PRESSE:METRO_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '19', 
               'dateTimeArticle' => '1970-01-07 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'PRESSE : METRO', 
               'contenuArticle' => '<p><img src="http://eopfestival.be/uploads/media/metro_350_1.jpg" /></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'PRESSE : METRO', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/MAGAZINE:FEMMED\'AUJOURD\'HUI2011-12_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '20', 
               'dateTimeArticle' => '1970-01-06 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'MAGAZINE : FEMME D\'AUJOURD\'HUI 2011-12', 
               'contenuArticle' => '<p>MAGAZINE : FEMME D&#39;AUJOURD&#39;HUI 2011-12</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'MAGAZINE : FEMME D\'AUJOURD\'HUI 2011-12', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/MAGAZINE:FLAIR_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '21', 
               'dateTimeArticle' => '1970-01-05 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'MAGAZINE : FLAIR', 
               'contenuArticle' => '<p>magasine flair</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'MAGAZINE : FLAIR', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:CINEVOX.BE(1)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '22', 
               'dateTimeArticle' => '1970-01-04 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : CINEVOX.BE (1)', 
               'contenuArticle' => '<p><strong><u>Festival &laquo; Extra &amp; Ordinary People &raquo; Vive la diff&eacute;rence !&nbsp; </u></strong>01-12-2011<br />
        <strong>Et Hop ! C&rsquo;est parti!</strong></p>

        <p><img src="http://eopfestival.be/uploads/media/_web_EOP-camaieu-ROUGE-DEF%20-%20copie.jpg" style="height:133px; width:203px" /></p>

        <p>eop !, c&rsquo;est une association, mais aussi un festival de cin&eacute;ma. Une association qui a pour but d&rsquo;organiser un festival de cin&eacute;ma dont l&rsquo;intitul&eacute; exact est &rdquo;festival &laquo; Extra &amp; Ordinary People &raquo;&rdquo;. Pas un one shot, mais une manifestation r&eacute;currente qui pr&eacute;sentera au grand public des films sur la th&eacute;matique du handicap, de la d&eacute;ficience et de la diff&eacute;rence. Premi&egrave;re &eacute;dition : les 2, 3 et 4 d&eacute;cembre &agrave; la maison de la culture de Namur. Voire, pour les avant-premi&egrave;res, dans toute une s&eacute;rie d&rsquo;autres villes wallonnes.</p>

        <p>Les succ&egrave;s totalement inattendus d&rsquo;Intouchables (qui a d&eacute;pass&eacute; hier les 10.000.000 d&rsquo;entr&eacute;es en France et vit un autre conte de f&eacute;es en Belgique) et de Hasta La Vista (250.000 tickets vendus en Flandre et &agrave; Bruxelles, doubl&eacute; d&rsquo;une sortie massive en Wallonie) le montrent clairement : le monde et la condition des personnes handicap&eacute;es n&rsquo;effraient plus. Au contraire, ils int&eacute;ressent un public bien moins &eacute;go&iuml;ste et indiff&eacute;rent qu&rsquo;on veut bien le pr&eacute;tendre.</p>

        <p><img src="http://eopfestival.be/uploads/media/hasta1.jpg" style="height:166px; width:249px" />(Hasta la Vista)</p>

        <p>L&rsquo;arriv&eacute;e dans ce contexte du Festival &laquo; Extra &amp; Ordinary People &raquo;, pens&eacute; et programm&eacute; de longue date, bien avant ces performances colossales cela va sans dire, est donc une &eacute;vidence et une b&eacute;n&eacute;diction. eop! vient confirmer que les gens, diff&eacute;rents pour une raison ou une autre, ont d&eacute;sormais voix au chapitre et que les ghettos o&ugrave; on les tenait soigneusement repli&eacute;s sur eux-m&ecirc;mes n&rsquo;ont plus de raison d&rsquo;&ecirc;tre.</p>

        <p>Au travers de ses diff&eacute;rentes activit&eacute;s eop! visera &agrave; acc&eacute;l&eacute;rer ce processus de (re)connaissance, de prise de conscience aussi. L&rsquo;association se propose de d&eacute;velopper un indispensable travail d&rsquo;&eacute;ducation, de sensibilisation et de r&eacute;flexion collective sur la repr&eacute;sentation des personnes d&eacute;ficientes et/ou en situation de handicap. eop ! promet d&rsquo;&ecirc;tre tr&egrave;s active et soutiendra toute une s&eacute;rie d&rsquo;&eacute;v&egrave;nements sportifs et/ou culturels mettant en valeur les capacit&eacute;s des personnes d&eacute;ficientes et/ou en situation de handicap. L&rsquo;organisation d&eacute;marre, bille en t&ecirc;te, avec ce festival essentiellement namurois qui fait le pari d&rsquo;attirer le grand public en pr&eacute;sentant des tas d&rsquo;oeuvres audiovisuelles belges et &eacute;trang&egrave;res, de fiction ou de documentaire qui mettent en exergue les capacit&eacute;s des individus concern&eacute;s.</p>

        <p>Se limiter &agrave; une manifestation close o&ugrave; se retrouveraient uniquement des personnes concern&eacute;es (personnes en situation de handicap, professionnels du secteur ou de l&rsquo;audiovisuel et cin&eacute;philes)<br />
        serait totalement contre-productif. Et d&eacute;cevant. C&rsquo;est pourquoi un &eacute;norme travail de communication a &eacute;t&eacute; entrepris dans le but de sensibiliser les m&eacute;dias, indispensables relais vers le grand public.</p>

        <p><img src="http://eopfestival.be/uploads/media/EOP_Affiches_BlindLoves-A3_DEF.jpg" style="height:282px; width:201px" /></p>

        <p>En utilisant des images foudroyantes pour l&rsquo;affiche et pour les bandes-annonces fort r&eacute;ussies et incroyablement puissantes, eop ! vise juste. Philippe Reynaert, dans l&rsquo;&eacute;mission CineStation, a d&eacute;j&agrave; mis l&rsquo;&eacute;v&egrave;nement en exergue la semaine derni&egrave;re. Et Cinevox ne se prive pas de s&rsquo;associer &agrave; ce soutien esp&eacute;r&eacute; franc et massif. Ces trailers, vous pouvez naturellement les visionner sur le Net : ici, ici et l&agrave;.</p>

        <p>Durant 3 jours et 12 s&eacute;ances, des films tr&egrave;s vari&eacute;s, documentaires, fictions ou docu-fictions, venant de 10 pays seront donc projet&eacute;s. Et 80 % d&rsquo;entre eux sont in&eacute;dits en Belgique !<br />
        Plus de 60 films des quatre coins du monde ont &eacute;t&eacute; propos&eacute;s au festival pour cette premi&egrave;re s&eacute;lection.</p>

        <p><u><strong>Le tr&egrave;s intuitif site Internet</strong></u> vous donnera tous les d&eacute;tails indispensables pour ne rien louper des diff&eacute;rentes s&eacute;ances. Tout a &eacute;t&eacute; pens&eacute; pour faire de cette manifestation un gros succ&egrave;s accessible &agrave; tous, ce qui n&rsquo;est pas un vain mot, mais un exemple de mobilit&eacute; &agrave; suivre de pr&egrave;s. Et pour une somme d&eacute;risoire. Remarquable !</p>

        <p><br />
        http://www.cinevox.be/festival-%c2%ab-extra-ordinary-people-%c2%bb-vive-la-difference/</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : CINEVOX.BE (1)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:CINEVOX.BE(2)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '23', 
               'dateTimeArticle' => '1970-01-03 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : CINEVOX.BE (2)', 
               'contenuArticle' => '<p>eop ! festival Le triomphe de la diff&eacute;rence&hellip; et du cin&eacute;ma // 06-12-2011</p>

        <p><img src="http://eopfestival.be/uploads/media/_ANT0054.jpg" style="height:236px; width:354px" /></p>

        <p>Le eop! Festival ne pouvait tomber &agrave; un meilleur moment. Alors que Les Intouchables s&egrave;ment la panique dans les box offices belges et fran&ccedil;ais et qu&rsquo;Hasta La Vista bouscule le cin&eacute;ma flamand, le week-end m&ecirc;me o&ugrave; Adem remporte le Discovery Award lors des European Film Awards, une manifestation consacr&eacute;e aux gens diff&eacute;rents, extra et ordinaires, allait de soi. Mais cela fait deux ans que les organisateurs travaillent &agrave; ce projet, &eacute;labor&eacute; comme dirait Hughes Dayez In Tempore non suspecto.</p>

        <p>Autour d&rsquo;un th&egrave;me aussi sensible, avec la volont&eacute; de modifier durablement l&rsquo;image du handicap aupr&egrave;s du grand public, est naturellement fort g&eacute;n&eacute;reux. Encore faut-il que le succ&egrave;s soit au rendez-vous et qu&rsquo;on ne se<br />
        cantonne pas &agrave; une simple note d&rsquo;intention. Encore faut-il que le message passe au-del&agrave; des cercles habituellement concern&eacute;s.<br />
        La faramineuse r&eacute;ussite qu&rsquo;a connue la manifestation ce week-end tend &agrave; prouver que quelque chose est en train de changer radicalement. Qu&rsquo;une prise de conscience est en marche et qu&rsquo;une forme d&rsquo;altruisme (humanisme?) semble prendre le pas sur des consid&eacute;rations individualistes totalement &eacute;go&iuml;stes. Que des tas de spectateurs se retrouvent au eop! Festival pour d&eacute;couvrir les horizons diff&eacute;rents des gens qui nous c&ocirc;toient et qui ne peuvent pas faire aussi facilement tout ce que nous faisons est un signe tr&egrave;s positif.</p>

        <p>Que cette manifestation, au-del&agrave; de sa port&eacute;e philosophique, permette &eacute;galement de visionner de formidables films in&eacute;dits chez nous est une autre &eacute;norme satisfaction.&nbsp;</p>

        <p>&Agrave; l&rsquo;issue des trois jours de projections, des r&eacute;compenses purement cin&eacute;matographiques ont donc &eacute;t&eacute; l&eacute;gitimement attribu&eacute;es. Le Prix SACD-Scam est revenu &agrave; Nobody&rsquo;s perfect de Niko Von Glasow, le prix du public court-m&eacute;trage est all&eacute; &agrave; Mon petit fr&egrave;re de la lune de Fr&eacute;d&eacute;ric Philibert, le Prix court-m&eacute;trage RTBF : &agrave; Luneville de S&eacute;bastien Petit et le Grand Prix RTBF-EOP! &agrave; The cost of living de Lloyd Newson.<br />
        Et puis, sans grande surprise, le film belge ph&eacute;nom&egrave;ne du moment, Hasta la Vista a remport&eacute; deux troph&eacute;es : le Prix Cap48 et prix du public. L&rsquo;occasion pour Geoffrey Enthoven le r&eacute;alisateur et Isabelle de Hertogh, l&rsquo;actrice principale de monter sur sc&egrave;ne pour r&eacute;colter ces nouvelles distinctions qui s&rsquo;ajoutent une liste impressionnante de satisfaction en tout genre.<br />
        Omnipr&eacute;sente pendant la manifestation, Marianne Grimont nous livre quelques clich&eacute;s-souvenirs (CFR PHOTOS).&nbsp;</p>

        <p>En attendant une deuxi&egrave;me &eacute;dition confirm&eacute;e en 2012 !</p>

        <p><img src="http://eopfestival.be/uploads/media/_ANT0020-3.jpg" style="height:306px; width:461px" /></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : CINEVOX.BE (2)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:CINEVOX.BE(3)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '24', 
               'dateTimeArticle' => '1970-01-02 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : CINEVOX.BE (3)', 
               'contenuArticle' => '<p><strong>Le triomphe de la diff&eacute;rence&hellip; et du cin&eacute;ma</strong><br />
        &nbsp;06-12-2011</p>

        <p>Le <em>eop! Festival </em>ne pouvait tomber &agrave; un meilleur moment. Alors que <em>Les Intouchables</em> s&egrave;ment la panique dans les box offices belges et fran&ccedil;ais et qu&rsquo;<em>Hasta La Vista </em>bouscule le cin&eacute;ma flamand, le week-end m&ecirc;me o&ugrave; <em>Adem</em> remporte le <em>Discovery Award</em> lors des European Film Awards, une manifestation consacr&eacute;e aux gens diff&eacute;rents, extra et ordinaires, allait de soi. Mais cela fait deux ans que les organisateurs travaillent &agrave; ce projet, &eacute;labor&eacute; comme dirait Hughes Dayez <em>In Tempore non suspecto</em>.</p>

        <p><a href="http://www.cinevox.be/eop-festival-le-triomphe-de-la-difference%E2%80%A6-et-du-cinema/_ant0049-2/"><img src="http://www.cinevox.be/wp-content/uploads/2011/12/ANT0049-800x532.jpg" style="height:162px; width:244px" /></a></p>

        <p>Imaginer <a href="http://www.cinevox.be/?p=11600" target="_blank">un festival de cin&eacute;ma</a> autour d&rsquo;un th&egrave;me aussi sensible, avec la volont&eacute; de modifier durablement l&rsquo;image du handicap aupr&egrave;s du grand public, est naturellement fort g&eacute;n&eacute;reux. Encore faut-il que le succ&egrave;s soit au rendez-vous et qu&rsquo;on ne se cantonne pas &agrave; une simple note d&rsquo;intention. Encore faut-il que le message passe au-del&agrave; des cercles habituellement concern&eacute;s.</p>

        <p>&nbsp;La faramineuse r&eacute;ussite qu&rsquo;a connue la manifestation ce week-end tend &agrave; prouver que quelque chose est en train de changer radicalement. Qu&rsquo;une prise de conscience est en marche et qu&rsquo;une forme d&rsquo;altruisme (humanisme?) semble prendre le pas sur des consid&eacute;rations individualistes totalement &eacute;go&iuml;stes. Que des tas de spectateurs se retrouvent au eop! Festival pour d&eacute;couvrir les horizons diff&eacute;rents des gens qui nous c&ocirc;toient et qui ne peuvent pas faire aussi facilement tout ce que nous faisons est un signe tr&egrave;s positif.</p>

        <p><a href="http://www.cinevox.be/eop-festival-le-triomphe-de-la-difference%E2%80%A6-et-du-cinema/_man9567/"><img src="http://www.cinevox.be/wp-content/uploads/2011/12/MAN9567.jpg" style="height:178px; width:268px" /></a></p>

        <p>Que cette manifestation, au-del&agrave; de sa port&eacute;e philosophique, permette &eacute;galement de visionner de formidables films in&eacute;dits chez nous est une autre &eacute;norme satisfaction. &Agrave; l&rsquo;issue des trois jours de projections, des r&eacute;compenses purement cin&eacute;matographiques ont donc &eacute;t&eacute; l&eacute;gitimement attribu&eacute;es.</p>

        <p><a href="http://www.cinevox.be/eop-festival-le-triomphe-de-la-difference%E2%80%A6-et-du-cinema/_man9548-2/"><img src="http://www.cinevox.be/wp-content/uploads/2011/12/MAN95481.jpg" style="height:210px; width:317px" /></a></p>

        <p><em>Luc Boland, l&rsquo;organisateurde l&rsquo;eop! Festival</em></p>

        <p><a href="http://www.cinevox.be/eop-festival-le-triomphe-de-la-difference%E2%80%A6-et-du-cinema/_man0024-2/"><img src="http://www.cinevox.be/wp-content/uploads/2011/12/MAN00241.jpg" style="height:219px; width:330px" /></a></p>

        <p>Le Prix SACD-Scam est revenu &agrave;&nbsp; <em>Nobody&rsquo;s perfect</em> de <strong>Niko Von Glasow</strong>, le prix du public court-m&eacute;trage est all&eacute;&nbsp; &agrave; <em>Mon petit fr&egrave;re de la lune</em> de <strong>Fr&eacute;d&eacute;ric Philibert</strong>, le Prix court-m&eacute;trage RTBF : &agrave; <em>Luneville</em> de <strong>S&eacute;bastien Petit</strong> et le Grand Prix RTBF-EOP! &agrave; <em>The cost of living</em> de <strong>Lloyd Newson</strong>.</p>

        <p>Et puis, sans grande surprise, le film belge ph&eacute;nom&egrave;ne du moment, <em>Hasta la Vista</em> a remport&eacute; deux troph&eacute;es : le Prix Cap48 et prix du public. L&rsquo;occasion pour <strong>Geoffrey Enthoven</strong> le r&eacute;alisateur et <strong>Isabelle de Hertogh</strong>, l&rsquo;actrice principale de monter sur sc&egrave;ne pour r&eacute;colter ces nouvelles distinctions qui s&rsquo;ajoutent une liste impressionnante de satisfaction en tout genre.</p>

        <p>Omnipr&eacute;sente pendant la manifestation, <strong>Marianne Grimont</strong> nous livre quelques clich&eacute;s-souvenirs. En attendant une deuxi&egrave;me &eacute;dition confirm&eacute;e en 2012</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : CINEVOX.BE (3)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:BOURLINGEURDUNET(1)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '25', 
               'dateTimeArticle' => '1970-01-01 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : BOURLINGEUR DU NET (1)', 
               'contenuArticle' => '<p><strong><u>Lancement du Festival Eop !,&nbsp;</u></strong></p>

        <p><strong>projection de &laquo; Nobody&rsquo;s Perfect &raquo;</strong><br />
        Posted by Matthieu Matthys on d&eacute;cembre 3, 2011</p>

        <p>Ce vendredi 2 d&eacute;cembre, c&rsquo;&eacute;tait la soir&eacute;e d&rsquo;ouverture du festival Eop ! &agrave; la maison de la culture de Namur. Le festival consacr&eacute; aux handicaps et aux personnes concern&eacute;es par une invalidit&eacute; f&ecirc;tait le lancement de sa premi&egrave;re &eacute;dition. Dans de telles circonstances, l&rsquo;ambiance est souvent &eacute;lectrique et la tension palpable, mais ici, malgr&eacute; une petite excitation normale, l&rsquo;ambiance &eacute;tait chaleureuse voire m&ecirc;me familiale. Il faut dire que le th&egrave;me du film d&rsquo;ouverture, les d&eacute;g&acirc;ts du Softenon, pr&ecirc;tait plut&ocirc;t au respect et au calme qu&rsquo;&agrave; l&rsquo;hyst&eacute;rie.<br />
        Nobody&rsquo;s Perfect &eacute;tait donc le premier film &agrave; &ecirc;tre diffus&eacute; au festival Eop ! Soir&eacute;e de gala oblige, de nombreuses personnalit&eacute;s du monde politique mais surtout, du monde associatif &eacute;taient pr&eacute;sentes pour casser la bouteille sur la coque d&rsquo;un navire qui fera, esp&eacute;rons-le, un long voyage.<br />
        Le long-m&eacute;trage allemand de Niko von Glasow traite du handicap subit par ce que l&rsquo;on a appel&eacute; &laquo;la g&eacute;n&eacute;ration Softenon&raquo;. Pour rappel, le thalidomide &eacute;tait un m&eacute;dicament s&eacute;datif et anti-naus&eacute;eux que l&rsquo;on prescrivait, notamment, aux femmes enceintes afin qu&rsquo;elles vivent mieux les d&eacute;sagr&eacute;ments de leurs grossesses. Mais les mol&eacute;cules pr&eacute;sentes dans celui-ci provoquaient des difformit&eacute;s cons&eacute;quentes &agrave; la naissance. Atrophies des bras et des jambes, malformations faciales, &hellip; Un vrai scandale.<br />
        Dans ce documentaire, Niko von Glasow a voulu montrer au monde ces victimes et a voulu d&eacute;noncer le regard du monde sur le handicap physique en r&eacute;alisant une s&eacute;rie de clich&eacute;s les montrant dans le plus simple appareil. Film&eacute; de mani&egrave;re semi-amateur, le film rapproche Niko de Michael Moore, toute histoire gard&eacute;e. Effectivement, le combat n&rsquo;est pas le m&ecirc;me mais une similarit&eacute; peut se faire dans la mani&egrave;re de r&eacute;aliser le documentaire. En effet, les deux sont engag&eacute;s dans leurs propos mais gardent une certaine cr&eacute;dulit&eacute; ironique dans leurs questions obligeant le protagoniste &agrave; r&eacute;agir &agrave; des discours parfois forts.<br />
        Nous avons &eacute;t&eacute; touch&eacute;s par la vie de ces personnes marginalis&eacute;es malgr&eacute; elles. Celles-ci ont une v&eacute;ritable force mentale et une philosophie de la vie tout &agrave; fait remarquable et respectable. Vivre avec une invalidit&eacute; aussi lourde impose un rythme de vie et une organisation draconienne. Cependant, la soci&eacute;t&eacute; ferme les yeux sur ces personnes &laquo;Extra-Ordinary&raquo; et c&rsquo;est cette absence d&rsquo;int&eacute;r&ecirc;t ou ce<br />
        regard tronqu&eacute; qui leur sont pr&eacute;judiciables. Car, au-del&agrave; du rejet d&eacute;j&agrave; lourd &agrave; assumer, c&rsquo;est une indiff&eacute;rence g&eacute;n&eacute;rale de la soci&eacute;t&eacute; qui s&rsquo;est forg&eacute;e dans les esprits.<br />
        Cela fait maintenant cinquante ann&eacute;es que le thalidomide a fait ses ravages. Jusqu&rsquo;&agrave; pr&eacute;sent, aucune compensation n&rsquo;a &eacute;t&eacute; vers&eacute;e aux victimes par les soci&eacute;t&eacute;s et les &eacute;tats responsables de cette h&eacute;catombe. Que ce soit la soci&eacute;t&eacute; pharmaceutique Grunenthal ou les &eacute;tats concern&eacute;s, les plaintes d&eacute;pos&eacute;es en justice n&rsquo;ont toujours pas donn&eacute; gain de cause aux plaignants. Il y a deux semaines encore, vingt-trois victimes de ce produit ont &eacute;t&eacute; d&eacute;bout&eacute;es au tribunal civil de Bruxelles. Elles assignaient l&rsquo;Etat belge pour commercialisation d&rsquo;un m&eacute;dicament qu&rsquo;elle savait n&eacute;faste. Celles-ci ont fait appel et esp&eacute;rons que ce film et ce festival pourront faire avancer les choses en leur faveur.</p>

        <p><br />
        Matthieu Matthys</p>

        <p><img src="http://eopfestival.be/uploads/media/EOP_Affiches_Nobody-A3_DEF.jpg" /></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : BOURLINGEUR DU NET (1)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:BOURLINGEURDUNET(2)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '26', 
               'dateTimeArticle' => '1970-01-09 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : BOURLINGEUR DU NET (2)', 
               'contenuArticle' => '<p><strong><u>Festival Eop !,&nbsp;</u></strong></p>

        <p><strong>Blind Loves trop faible, Hasta la Vista trop fort</strong><br />
        by Matthieu Matthys on d&eacute;cembre 4, 2011</p>

        <p><img src="http://eopfestival.be/uploads/media/BLIND1.jpg" style="height:247px; width:185px" /><br />
        Blind Loves, un vent d&rsquo;Est a souffl&eacute;<br />
        Hier, en milieu d&rsquo;apr&egrave;s-midi, le festival nous proposait un docu-fiction sur la c&eacute;cit&eacute; de Juraj Lehotsky, Blind Loves. Si son nom ne vous dit rien, c&rsquo;est que le jeune r&eacute;alisateur slovaque n&rsquo;en est qu&rsquo;aux pr&eacute;mices de sa carri&egrave;re, chose assez fr&eacute;quente dans les pays d&rsquo;Europe Orientale o&ugrave; beaucoup de talents ne purent s&rsquo;exprimer librement qu&rsquo;&agrave; la chute du r&eacute;gime communiste en 1989.<br />
        Mais qui dit pays post-communiste, dit souvent froideur de l&rsquo;Est. En effet, si les histoires d&rsquo;amour entre des personnes atteintes de c&eacute;cit&eacute; nous int&eacute;ressaient aux premiers abords, la lourdeur des plans et le poids des silences nous ont beaucoup moins convaincus.<br />
        De fait, d&egrave;s les premi&egrave;res minutes de bobine, on se sent mal &agrave; l&rsquo;aise dans l&rsquo;atmosph&egrave;re pesant d&rsquo;une cit&eacute; sociale slovaque. On nous montre un couple d&rsquo;aveugles dans leur vie quotidienne o&ugrave; l&rsquo;homme tente de faire passer ses &eacute;motions par le chant et la musique, pour ensuite avoir droit, apr&egrave;s quinze minutes, &agrave; un montage surr&eacute;aliste difficilement compr&eacute;hensible tant l&rsquo;utilit&eacute; n&rsquo;y &eacute;tait pas de mise.<br />
        Le deuxi&egrave;me couple pr&eacute;sent&eacute; tente de nous prouver que la diff&eacute;rence est dans le regard des autres. Une jeune fille slovaque s&rsquo;entiche d&rsquo;un gitan plus &acirc;g&eacute; qu&rsquo;elle, ce qui est vu d&rsquo;un tr&egrave;s mauvais oeil par la famille de la petite. Encore une fois, ce sont deux aveugles. La drag&eacute;e aurait pu passer mais la r&eacute;alisation nous fait tourner en rond pendant trop longtemps, les s&eacute;quences sont bien trop lentes et nous lassent.<br />
        Troisi&egrave;me couple de non-voyants. On ne s&rsquo;attend plus &agrave; grand chose mais ce couple l&agrave; suscite chez nous un l&eacute;ger regain d&rsquo;int&eacute;r&ecirc;t. On y voit deux futurs parents dont le bonheur traverse les ruelles grises de Bratislava. L&rsquo;attente de l&rsquo;enfant provoque chez eux des inqui&eacute;tudes l&eacute;gitimes, surtout une en particulier, sera-t-il aveugle ou non ? Tous leurs espoirs reposent dans cet enfant tant voulu qui changera probablement leur vie.<br />
        Enfin, le dernier volet du film nous envoie dans la vie d&rsquo;une adolescente qui vit son handicap au milieu des valides. Cette partie du film nous offre enfin un aspect plus color&eacute; et plus dynamique de la vie des aveugles. M&ecirc;me si on con&ccedil;oit parfaitement que son handicap la hante dans sa qu&ecirc;te du grand amour, ses sourires et ses dialogues nous donne un peu d&rsquo;espoir, enfin.<br />
        Bref, ce film n&rsquo;est pas mauvais mais souffre de sa propre th&eacute;matique. En voulant nous montrer des couples dont les deux protagonistes sont aveugles, le r&eacute;alisateur les a lui-m&ecirc;me mis &agrave; l&rsquo;&eacute;cart de la soci&eacute;t&eacute;, il les a marginalis&eacute;s. Bien s&ucirc;r, la culture slovaque est sensiblement diff&eacute;rente de la n&ocirc;tre mais le poids des silences et la morosit&eacute; des d&eacute;cors sont trop difficiles &agrave; avaler. En nous rendant au festival Eop !, nous souhaitions y trouver la compassion et non la piti&eacute;, c&rsquo;est rat&eacute; pour cette fois.<br />
        Hasta la Vista, un handicap-trip &eacute;poustouflantR&eacute;alis&eacute; par</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : BOURLINGEUR DU NET (2)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:BOURLINGEURDUNET(3)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '27', 
               'dateTimeArticle' => '1970-01-08 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : BOURLINGEUR DU NET (3)', 
               'contenuArticle' => '<p>Festival Eop ! Hasta la Vista doublement r&eacute;compens&eacute;</p>

        <p>Dimanche soir, la premi&egrave;re &eacute;dition du festival Eop! tirait sa r&eacute;v&eacute;rence par la traditionnelle remise de prix. L&rsquo;occasion pour les organisateurs de revenir sur le d&eacute;roulement de celui-ci et l&rsquo;engouement d&rsquo;un public pour un th&egrave;me cin&eacute;matographique hors du commun.</p>

        <p>Luc Boland, le pr&eacute;sident, prit le micro en premier pour saluer le succ&egrave;s que connu le festival tout au long des trois jours de projections.&nbsp;Ce festival f&ucirc;t un pari os&eacute; en cette p&eacute;riode de crise financi&egrave;re et politique que traverse la Belgique, nous raconta par la suite la pr&eacute;sidente du festival analogue en Gr&egrave;ce qui, lui, ne connaitra pas de prochaine &eacute;dition suite aux mesures d&rsquo;aust&eacute;rit&eacute; impos&eacute;es par le gouvernement hell&eacute;nique.</p>

        <p>Ce sont donc &agrave; des discours pleins d&rsquo;&eacute;motions mais aussi d&rsquo;espoirs auquels nous avons eu droit. Espoir, c&rsquo;est r&eacute;solument le mot du week-end, l&rsquo;espoir de voir la vie des personnes handicap&eacute;es s&rsquo;am&eacute;liorer, l&rsquo;espoir de conscientiser la population face &agrave; certains probl&egrave;mes auxquels ces personnes font faces, l&rsquo;espoir d&rsquo;une insertion plus compl&egrave;te dans la soci&eacute;t&eacute;, &hellip; Un futur est encore &agrave; construire dans ce domaine m&ecirc;me si, ces derni&egrave;res ann&eacute;es, de nombreuses barri&egrave;res ont d&eacute;j&agrave; &eacute;t&eacute; franchies.</p>

        <p>Revenons maintenant &agrave; la remise des prix. Hier soir, c&rsquo;&eacute;tait la premi&egrave;re fois que je partageais enti&egrave;rement le palmar&egrave;s avec le jury et le public. En effet, &agrave; chaque festival, mes pronostics tombaient souvent&agrave; l&rsquo;eau et des films me paraissant quelques fois ennuyeux gagnaient les troph&eacute;es tant convoit&eacute;s. Ici, mon coeur chavirait pour Hasta la Vista de Geoffrey Enthoven et, sans grand &eacute;tonnement de ma part, il rafla deux prix : celui du public et celui de Cap 48.</p>

        <p>Enfin, parlons bri&egrave;vement du documentaire qui nous a &eacute;t&eacute; pr&eacute;sent&eacute; en cl&ocirc;ture, Monica &amp; David. Ce documentaire am&eacute;ricain nous plongeait au coeur d&rsquo;une famille dont la fille trisomique allait se marier avec un gar&ccedil;on atteint de la m&ecirc;me pathologie. R&eacute;alis&eacute; de bien belle mani&egrave;re, le reportage ne faisait que relater l&rsquo;exp&eacute;rience de vie d&rsquo;une famille somme toute ordinaire. Cela nous permettait de nous forger notre propre ressenti face &agrave; cet obstacle que la vie pose quelques fois. Un documentaire int&eacute;ressant et rempli d&rsquo;objectivit&eacute;, chose rare dans le cin&eacute;ma d&rsquo;outre-atlantique.</p>

        <p>Pour terminer, nous saluons le travail de tous les b&eacute;n&eacute;voles et toutes les personnes qui ont oeuvr&eacute;es au succ&egrave;s de ce nouveau festival qui est petit par la taille mais grand par la g&eacute;n&eacute;rosit&eacute;.</p>

        <p>Matthieu Matthys</p>

        <p><strong>Le palmar&eacute;s</strong></p>

        <p><strong>GRAND PRIX RTBF / FESTIVAL EOP! : </strong>&laquo; DV8, THE COST OF LIVING &raquo; de Lloyd Newson (Grande-Bretagne)</p>

        <p>Ce prix consiste en un pr&eacute;achat d&rsquo;une valeur de 5000&euro; en vue de la diffusion du film sur les antennes de la RTBF. Il a &eacute;t&eacute; remis au com&eacute;dien et danseur David Toole.</p>

        <p><strong>PRIX RTBF du Court M&eacute;trage</strong> : &laquo;&nbsp;LUNEVILLE&nbsp;&raquo; de S&eacute;bastien Petit (Belgique)</p>

        <p>Ce prix consiste en un pr&eacute;achat en vue de la diffusion du film sur la RTBF La Trois. Il a &eacute;t&eacute; remis au r&eacute;alisateur et aux com&eacute;diens St&eacute;phanie Darsoulant et Christian De Backer.</p>

        <p><strong>PRIX CAP 48</strong> : &laquo;&nbsp;HASTA LA VISTA&nbsp;&raquo; de Geoffrey Enthoven (Belgique)</p>

        <p>Le prix a &eacute;t&eacute; remis&nbsp;&agrave;&nbsp;la com&eacute;dienne Isabelle De Hertogh.</p>

        <p><strong>PRIX SACD-SCAM</strong> : &laquo;&nbsp;NOBODY&rsquo;S PERFECT&nbsp;&raquo; de Niko Von Glasgow (Allemagne)</p>

        <p>Ce prix d&rsquo;une valeur de 2000&euro;, offert par la Soci&eacute;t&eacute; des Auteurs et Compositeurs d&rsquo;Art Dramatique et la Soci&eacute;t&eacute; Civile des Auteurs Multim&eacute;dia, a &eacute;t&eacute; remis &agrave; la protagoniste Bianca Vogel.</p>

        <p><strong>PRIX DU PUBLIC &ndash; long m&eacute;trage</strong> : &laquo;&nbsp;HASTA LA VISTA&nbsp;&raquo; de Geoffrey Enthoven (Belgique)</p>

        <p>Le prix a &eacute;t&eacute; remis&nbsp;&agrave;&nbsp;la com&eacute;dienne Isabelle De Hertogh.</p>

        <p><strong>PRIX DU PUBLIC &ndash; court m&eacute;trage&nbsp;: &laquo; </strong> MON PETIT FRERE DE LA LUNE &raquo; de Fr&eacute;d&eacute;ric Philibert (France).</p>

        <p>Le prix a &eacute;t&eacute; remis au r&eacute;alisateur.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : BOURLINGEUR DU NET (3)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:7emeART(1)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '28', 
               'dateTimeArticle' => '1970-01-08 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : 7eme ART (1)', 
               'contenuArticle' => '<p><strong><u>C&#39;est pas du cin&eacute;ma!</u></strong><br />
        Par Septi&egrave;me Art dans Les nouvelles le 29 Novembre 2011<br />
        Ces 2, 3 et 4 d&eacute;cembre, &agrave; la Maison de la Culture de la Province de Namur, se d&eacute;roulera l&#39;EOP!, festival international du film. Ce festival, ayant pour th&eacute;matique le handicap, sera l&#39;&eacute;v&eacute;nement phare, en Belgique, de la journ&eacute;e mondiale de la personne handicap&eacute;e. Celle-ci a lieu ce samedi 3 d&eacute;cembre. Dans le monde, plusieurs festivals du m&ecirc;me genre se sont r&eacute;cemment d&eacute;velopp&eacute;s: Sprout (Etats-Unis), Integration, You and Me (Pologne), Handica et En Marche (France), Mental Power (Tch&eacute;quie), Emotion Pictures (Gr&egrave;ce), The other Festival (Australie) et Handifilm (Maroc). Ils rencontrent un r&eacute;el succ&egrave;s aupr&egrave;s des personnes concern&eacute;es et du grand public. L&#39;EOP!, festival international du film e veut accessible &agrave; tout public avec des fictions, des docu-fictions et des documentaires, pour la plupart, in&eacute;dits dans notre pays. Il y aura aussi des &laquo; avant-premi&egrave;res &raquo; d&eacute;localis&eacute;es &agrave; Tournai, Li&egrave;ge, Libramont et Charleroi. Plusieurs auteurs et protagonistes des films propos&eacute;s seront pr&eacute;sents. Six prix couronneront les meilleurs films: celui du public, deux RTBF, deux SACD-Scam et un Cap 48. La s&eacute;ance est &agrave; 2&euro;, le pass &agrave; 10&euro;. R&eacute;server est vivement conseill&eacute;, le cap des 1000 r&eacute;servations est d&eacute;j&agrave; atteint. Cela peut &ecirc;tre fait sur www.eopfestival.be ou au n&deg; vert 0800/11300.<br />
        M.D.<br />
        &nbsp;</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : 7eme ART', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:7emeART(2)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '29', 
               'dateTimeArticle' => '1970-01-07 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : 7eme ART (2)', 
               'contenuArticle' => '<p><u><strong>Une premi&egrave;re r&eacute;ussie</strong></u><br />
        Par Septi&egrave;me Art dans Les nouvelles le 5 D&eacute;cembre 2011&nbsp;</p>

        <p>La 1&egrave;re &eacute;dition de l&#39;EOP, festival international du film a &eacute;t&eacute; un succ&egrave;s: pr&egrave;s de 2000 spectateurs en trois jours de projection. En ce qui concerne les films, la qualit&eacute; &eacute;tait au rendez-vous et certains d&#39;entre eux pourraient parfaitement prendre place dans le circuit &quot;normal&quot; des salles de cin&eacute;ma. Je pense ici &agrave; &quot;Marathon&quot; du Sud-Cor&eacute;en Chung Yool-Chul. Sorti en 2005 et tr&egrave;s appr&eacute;ci&eacute; en Cor&eacute;e du Sud, ce film n&#39;a jamais &eacute;t&eacute; distribu&eacute; en Belgique. Quand on voit la m&eacute;diocrit&eacute; de certaines sorties, on se dit qu&#39;il y a un probl&egrave;me quelque part. La cheville ouvri&egrave;re, Luc Boland, a &eacute;t&eacute; au four et au moulin tout au long du festival. J&#39;ai pu lui prendre quelques minutes de son temps pour lui poser des questions. Ce festival va-t-il changer le regard sur le handicap ? Luc Boland: &quot;oui, c&#39;est l&#39;objectif. Mais au-del&agrave; de cela, c&#39;est de changer le regard sur soi-m&ecirc;me, sur ce qu&#39;on est. Parce que l&#39;on parle toujours du handicap comme une d&eacute;icience physique, motrice, mentale mais il y a le handicap dans son sens premier. Ca peut &ecirc;tre aussi un handicap social. C&#39;est le message que j&#39;essaie de faire passer au travers de ce festival.&quot; En route pour une 2&egrave;me &eacute;dition ? &quot;J&#39;esp&egrave;re bien. Il faudra tirer le bilan de celui-ci, le financer mais c&#39;est mon voeu le plus cher.&quot;&nbsp;</p>

        <p>Le palmar&egrave;s Grand Prix RTBF/Festival EOP!: &quot;DV8, the cost of living&quot; de Lloyd Newson (Grande-Bretagne) Prix RTBF du Court M&eacute;trage: &quot;Luneville&quot; de S&eacute;bastien Petit (Belgique) Prix Cap 48: &quot;Hasta La Vista&quot; de Geoffrey Enthoven (Belgique) Prix SACD-SCAM: &quot;Nobody&#39;s Perfect&quot; de Niko Von Glasgow (Allemagne) Prix du Public - long m&eacute;trage: &quot;Hasta La Vista&quot; de Geoffrey Enthoven (Belgique) Prix du Public - court m&eacute;trage: &quot;Mon petit fr&egrave;re de la lune&quot; de Fr&eacute;d&eacute;ric Philibert (France)<br />
        http://www.septiemeart.be/les-nouvelles-c754862</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : 7eme ART (2)', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:CINEBEL.BE_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '30', 
               'dateTimeArticle' => '1970-01-06 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : CINEBEL.BE', 
               'contenuArticle' => '<p><strong><u>EOP : Le festival des &quot;intouchables&quot;</u></strong></p>

        <p>Publi&eacute; le 30 novembre 2011 dans Festivals</p>

        <p><br />
        Une premi&egrave;re &agrave; l&rsquo;occasion de la journ&eacute;e mondiale de la personne handicap&eacute;e.<br />
        Ce n&rsquo;est pas l&rsquo;effet &quot;Intouchables&quot; - la manifestation fut organis&eacute;e &quot;in tempore non suspecto&quot; - mais le premier festival Eop ! (pour Extra &amp; Ordinary People !) tombe &agrave; point nomm&eacute; pour rebondir sur l&rsquo;engouement autour du film d&rsquo;Olivier Nakache et Eric Toledano. Eop ! se tiendra &agrave; Namur du 2 au 4 d&eacute;cembre, en marge de la journ&eacute;e mondiale de la personne handicap&eacute;e. Soutenu par l&rsquo;Agence wallonne pour l&rsquo;int&eacute;gration de la personne handicap&eacute;e (Awiph), Cap 48, le Festival international du film francophone et les minist&egrave;res de l&rsquo;Egalit&eacute; des chances et de l&rsquo;Audiovisuel, le festival est une initiative de Luc Boland, r&eacute;alisateur et p&egrave;re d&rsquo;un petit gar&ccedil;on aveugle. Temp&eacute;rons un brin l&rsquo;affirmation des organisateurs selon laquelle les films traitant du handicap sont absents des &eacute;crans. R&eacute;guli&egrave;rement, ils font de grands succ&egrave;s et des films &quot;&agrave; Oscar&quot; (ou C&eacute;sar) : citons &quot;Rain Man&quot;, &quot;Un homme d&rsquo;exception&quot;, &quot;Le scaphandre et le papillon&quot; &quot;Hasta la Vista !&quot; du Belge Geoffrey Enthoven, com&eacute;die autour de trois jeunes parapl&eacute;giques se rendant dans un bordel en Espagne, vient de faire un carton en Flandre. Le film ressort d&rsquo;ailleurs ce mois-ci en Wallonie et fait partie de la programmation d&rsquo;Eop ! Parmi les dix longs ou moyens m&eacute;trages et la vingtaine de courts m&eacute;trages ou de clips pr&eacute;sent&eacute;s, les documentaires ou les docu-fictions dominent. &quot;Sexe, amour et handicap&quot; de Jean-Michel Carr&eacute; apportera ainsi un contrepoint documentaire &agrave; &quot;Hasta la Vista !&quot; &quot;Marathon&quot; de Chung Yoon-chul, est une fiction cor&eacute;enne inspir&eacute;e d&rsquo;une histoire vraie, o&ugrave; un jeune autiste tente de trouver sa place dans la soci&eacute;t&eacute; par le marathon. &quot;L&rsquo;homme qui ne voulait pas &ecirc;tre fou&quot; de Bernadette Saint-Remi et V&eacute;ronique Fievet conte le combat de Patrick contre la schizophr&eacute;nie Tr&egrave;s logiquement, le festival est ouvert &agrave; tous. Une fois n&rsquo;est pas coutume, tous les lieux de projection sont accessibles aux personnes &agrave; mobilit&eacute; r&eacute;duite (avec un service de transport ad hoc) et les s&eacute;ances s&rsquo;accompagnant de sous-titres, d&rsquo;interpr&eacute;tation en langage des signes, de pictogrammes ou d&rsquo;audio-description, ainsi que de programmes en braille ou Daisy. Une initiative &agrave; m&eacute;diter pour les autres festivals, voire pour toutes les s&eacute;ances publiques. Eop ! ouvrira, peut-&ecirc;tre, ce d&eacute;bat-l&agrave; aussi...<br />
        Infos pratiques : EOP Festival : Festival International du film Extra &amp; Ordinary People Du 2 au 4 d&eacute;cembre Maison de la Culture de la province de Namur Avenue Golinvaux, 14 5000 Namur 0800 11 300 ►www.eopfestival.be<br />
        Alain Lorf&egrave;vre</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : CINEBEL.BE', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:PAPERBLOG_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '31', 
               'dateTimeArticle' => '1970-01-05 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : PAPERBLOG', 
               'contenuArticle' => '<p><u><strong>Le premier Festival International du Film &lsquo;Extra &amp; Ordinary People&rsquo; (EOP!)</strong></u> s&#39;est cl&ocirc;tur&eacute; ce dimanche 4 d&eacute;cembre &agrave; la Maison de la Culture de Namur par la c&eacute;r&eacute;monie de remise des prix en pr&eacute;sence des laur&eacute;ats. La soir&eacute;e s&#39;est poursuivie par la projection du film de cl&ocirc;ture &quot;Monica &amp; David&quot; d&#39;Alexandra Codina, pr&eacute;c&eacute;d&eacute; du clip &quot;Le Baiser&quot; de Jaco Van Dormael. Pour sa premi&egrave;re &eacute;dition, EOP! a remport&eacute; un joli succ&egrave;s aupr&egrave;s de nombreux spectateurs venus d&eacute;couvrir de v&eacute;ritables perles en pr&eacute;sence des r&eacute;alisateurs et com&eacute;diens.</p>

        <p><br />
        GRAND PRIX RTBF / FESTIVAL EOP! : &laquo; DV8, THE COST OF LIVING &raquo; de Lloyd Newson (Grande-Bretagne)<br />
        Ce prix consiste en un pr&eacute;achat d&#39;une valeur de 5000&euro; en vue de la diffusion du film sur les antennes de la RTBF. Il a &eacute;t&eacute; remis au com&eacute;dien et danseur David Toole.<br />
        PRIX RTBF du Court M&eacute;trage : &laquo; LUNEVILLE &raquo; de S&eacute;bastien Petit (Belgique)<br />
        Ce prix consiste en un pr&eacute;achat en vue de la diffusion du film sur la RTBF La Trois.<br />
        PRIX CAP 48 : &laquo; HASTA LA VISTA &raquo;de Geoffrey Enthoven (Belgique)<br />
        Le prix a &eacute;t&eacute; remis &agrave; la com&eacute;dienne Isabelle De Hertogh.<br />
        PRIX DU PUBLIC -long m&eacute;trage : &laquo; HASTA LA VISTA &raquo; de Geoffrey Enthoven (Belgique)<br />
        PRIX SACD-SCAM : &laquo; NOBODY&#39;S PERFECT &raquo; de Niko Von Glasgow (Allemagne)<br />
        Ce prix d&#39;une valeur de 2000&euro;,offert par la Soci&eacute;t&eacute; des Auteurs et Compositeurs d&#39;Art Dramatique et la Soci&eacute;t&eacute; Civile des Auteurs Multim&eacute;dia, a &eacute;t&eacute; remis &agrave; la protagoniste Bianca Vogel.<br />
        PRIX DU PUBLIC -court m&eacute;trage : &laquo; MON PETIT FRERE DE LA LUNE &raquo; de Fr&eacute;d&eacute;ric Philibert (France).<br />
        La 1 &eacute;dition du festival international du film &laquo;EOP ! &raquo; (Extra &amp; Ordinary People) s&rsquo;est &egrave;red&eacute;roul&eacute;e du 2 au 4 d&eacute;cembre 2011 &agrave; Namur. D&eacute;velopp&eacute; autour de la journ&eacute;e mondiale de la personne handicap&eacute;e (le 3 d&eacute;cembre), EOP ! &eacute;tait &laquo; La Manifestation &raquo; belge li&eacute;e &agrave; cet &eacute;v&eacute;nement, gr&acirc;ce au soutien de toutes les administrations comp&eacute;tentes (Awiph &amp; Phare), de tous les minist&egrave;res ayant le handicap, l&rsquo;&eacute;galit&eacute; des chances et l&rsquo;audiovisuel dans leur comp&eacute;tence et enfin le soutien de Cap 48 et de la RTBF. Durant 3 jours et 12 s&eacute;ances, le festival &laquo; EOP ! &raquo; a pr&eacute;sent&eacute; 30 films &eacute;manant des quatre coins du monde, dont 80 % &eacute;taient in&eacute;dits en Belgique.<br />
        R&eacute;alisateur de films documentaires et de fiction (&laquo; Une sir&egrave;ne dans la nuit &raquo; avec Roland Magdane, &laquo;La Torpille &raquo; avec Catherine Jacob), auteur en 2006 d&rsquo;un film sur son fils porteur d&rsquo;un syndrome tr&egrave;s rare (&laquo; Lettre &agrave; Lou &raquo;), Luc Boland a eu l&rsquo;occasion de se rendre dans quelques festivals de films dans le monde o&ugrave; il a pu d&eacute;couvrir d&rsquo;autres r&eacute;alisations sur la th&eacute;matique du handicap. L&rsquo;id&eacute;e lui est ainsi venue de cr&eacute;er ce festival en Belgique afin de faire d&eacute;couvrir une autre r&eacute;alit&eacute; de la vie d&rsquo;une personne d&eacute;ficiente et de sa famille, d&rsquo;appr&eacute;hender la d&eacute;ficience avec un regard sur les capacit&eacute;s et non les limitations.<br />
        A la diff&eacute;rence d&rsquo;autres festivals &agrave; caract&egrave;re plus professionnel et proposant des &laquo; reportages &raquo; ou des films didactiques, m&eacute;dicaux etc., &laquo; EOP ! &raquo; a l&rsquo;ambition de proposer une programmation de films d&rsquo;auteurs de grande qualit&eacute;, de fiction et de documentaire, accessibles &agrave; tout public. Par le pass&eacute;, &laquo; Rain Man &raquo; de Barry Lewinson, &laquo; Le huiti&egrave;me jour &raquo; de Jaco Van Dormael, &laquo; Elle s&rsquo;appelle Sabine &raquo;de Sandrine Bonnaire, &laquo; My left foot &raquo; de Jim Sheridan,<br />
        Site internet : www.eopfestival.be<br />
        http://www.paperblog.fr/5120674/festival-eop-palmares-2011/</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : PAPERBLOG', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:RTL.BE_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '32', 
               'dateTimeArticle' => '1970-01-04 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : RTL.BE', 
               'contenuArticle' => '<p><strong><u>EOP, un festival pour des personnes Extra &amp; Ordinary!</u></strong><br />
        Du 2 au 4 d&eacute;cembre, la ville de Namur accueille le premier EOP Festival, Extra &amp; Ordinary People International Film Festival.<br />
        <br />
        Vous vous souvenez des excellents films LE HUITIEME JOUR, RAIN MAN, MY LEFT FOOT, LE SCAPHANDRE ET LE PAPILLON ou tout r&eacute;cemment INTOUCHABLES mais il existe encore beaucoup d&rsquo;autres films sur le handicap. Ce sont ces autres petites perles que le festival EOP ! a d&eacute;cid&eacute; de projeter lors de sa premi&egrave;re &eacute;dition qui d&eacute;bute ce vendredi 2 d&eacute;cembre ! La 1&egrave;re &eacute;dition du festival international du film &laquo; EOP ! &raquo; (Extra &amp; Ordinary People) se d&eacute;roulera du 2 au 4 d&eacute;cembre 2011 &agrave; Namur. Ce festival se d&eacute;roulera autour de la journ&eacute;e mondiale de la personne handicap&eacute;e qui a lieu ce 3 d&eacute;cembre. Durant 3 jours et 12 s&eacute;ances, des films exceptionnels venant de 10 pays seront projet&eacute;s. Le festival &laquo; EOP ! &raquo; a re&ccedil;u l&rsquo;inscription de plus de 60 films pour sa s&eacute;lection, &eacute;manant des quatre coins du monde. Et 80 % des films s&eacute;lectionn&eacute;s (documentaires, fictions ou docu-fictions) sont in&eacute;dits en Belgique ! Historique du projet R&eacute;alisateur de films de fiction et de documentaires, auteur en 2006 d&rsquo;un film sur son fils porteur d&rsquo;un syndrome tr&egrave;s rare (&laquo; Lettre &agrave; Lou &raquo;), Luc Boland a eu l&rsquo;occasion et la chance de se rendre dans quelques festivals de films dans le monde o&ugrave; il a pu d&eacute;couvrir d&rsquo;autres r&eacute;alisations sur la th&eacute;matique du handicap. C&rsquo;est ainsi &agrave; travers ces diff&eacute;rents festivals, qu&rsquo;est n&eacute;e l&rsquo;id&eacute;e d&rsquo;organiser en Belgique, un festival sur la th&eacute;matique du handicap.&nbsp;</p>

        <p>Informations pratiques Maison de la Culture de la Province de Namur Avenue Golenvaux 14 5000 Namur<br />
        Du 2 au 4 d&eacute;cembre www.eopfestival.be</p>

        <p>30 Novembre 2011</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : RTL.BE', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:SKYNET.BE_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '33', 
               'dateTimeArticle' => '1970-01-03 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : SKYNET.BE', 
               'contenuArticle' => '<p><u><strong>Le festival international du film EOP! sensibilise au th&egrave;me du handicap</strong></u><br />
        <br />
        (Belga) EOP! (Extra &amp; Ordinary People! ) organise le 3 d&eacute;cembre, &agrave; l&#39;occasion de la journ&eacute;e mondiale de la personne handicap&eacute;e, son festival international du film, &agrave; Namur, a annonc&eacute; l&#39;ASBL lundi.<br />
        Soutenu par l&#39;Agence wallonne pour l&#39;int&eacute;gration de la personne handicap&eacute;e (Awiph), Cap 48, le Festival international du film francophone (Fiff) et les minist&egrave;res de l&#39;Egalit&eacute; des chances et de l&#39;Audiovisuel, le festival est l&#39;initiative de Luc Boland, administrateur d&eacute;l&eacute;gu&eacute; de l&#39;ASBL, r&eacute;alisateur et papa d&#39;un petit gar&ccedil;on aveugle. &quot;C&#39;est l&#39;occasion de rendre le handicap plus humain, de d&eacute;mystifier la diff&eacute;rence, la d&eacute;ficience et le handicap, et de montrer au grand public des faits de la vie quotidienne&quot;, a expliqu&eacute; la responsable communication du festival, Marie-France Duppagne. Plus de soixante films seront diffus&eacute;s du 2 au 4 d&eacute;cembre &agrave; la Maison de la Culture de la province de Namur. Le film d&#39;ouverture &quot;Nobody&#39;s Perfect&quot;, de Niko Van Glasow, fera l&#39;objet de cinq avant-premi&egrave;res &agrave; Tournai, Li&egrave;ge, Charleroi, Libramont et Namur. Le festival sera &eacute;galement anim&eacute; par des rencontres avec les auteurs et acteurs des films et par des remises de prix. &quot;EOP! &quot; garantit sa totale accessibilit&eacute; aux personnes handicap&eacute;es: sous-titrage et langue des signes, audio-description, acc&egrave;s pour les personnes &agrave; mobilit&eacute; r&eacute;duite, etc. (PVO)</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : SKYNET.BE', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:VISIOPLUS_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '34', 
               'dateTimeArticle' => '1970-01-02 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : VISIOPLUS', 
               'contenuArticle' => '<p><a href="http://visioplus.be/2011/12/04/eop-festival-1ere-edition/">Reportages vid&eacute;os</a> r&eacute;alis&eacute;s par l&#39;asbl Ready to use</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : VISIOPLUS', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/WEB:CATHO.BE_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '35', 
               'dateTimeArticle' => '1970-01-01 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'WEB : CATHO.BE', 
               'contenuArticle' => '<p><u><strong>EOP, l&rsquo;Handi-Festival</strong></u></p>

        <p>EOP, 3 lettres pour Extra and Ordinary People. EOP!Festival est le premier festival international du film sur la th&eacute;matique du handicap, de la d&eacute;ficience et de la diff&eacute;rence. Il se tiendra &agrave; Namur du 2 au 4 d&eacute;cembre 2011. EOP! veut d&eacute;velopper au travers de ses activit&eacute;s un travail d&rsquo;&eacute;ducation, de sensibilisation, et de r&eacute;flexion collective sur la repr&eacute;sentation des personnes d&eacute;ficientes et/ou en situation de handicap, &agrave; travers un choix d&rsquo;oeuvres audiovisuelles belges et &eacute;trang&egrave;res, de fiction ou de documentaire, mettant en exergue les capacit&eacute;s des personnes concern&eacute;es. www.eopfestival.be<br />
        http://info.catho.be/2011/12/02/eop-lhandi-festival/</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'WEB : CATHO.BE', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/1497864983_200.jpg', 
               'nomCategorieArticle' => 'Edition 2011 (Presse)', 
               'ordreArticle' => '1', 
               'dateTimeArticle' => '2017-06-19 09:36:23']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => '1497864983', 
               'contenuArticle' => '<p></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => '1497864983', 
               'contenuArticle' => '<p></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/ProjectionsAuSalonAutonomies_200.jpg', 
               'nomCategorieArticle' => 'Action en 2012', 
               'ordreArticle' => '1', 
               'dateTimeArticle' => '2012-04-28 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Projections au salon Autonomies', 
               'contenuArticle' => '<p><u><strong>Ultimes s&eacute;ances de rattrapage de l&#39;&eacute;dition 2011 au salon Autonomies !</strong></u></p>

        <p><br />
        Le samedi 28/4 &agrave; 11h00, 14h00 et 16h00&nbsp; au <strong>salon Autonomies </strong>(salle Europe) &agrave; Li&egrave;ge :&nbsp;</p>

        <p><br />
        <strong>le palmar&egrave;s du Festival EOP! 2011</strong></p>

        <p><br />
        11h00 &laquo; Hasta La Vista &raquo; de Geoffrey Enthoven - (Prix du public et Prix Cap48) (115&rsquo;)</p>

        <p>14h00 &laquo; Nobody&rsquo;s Perfect &raquo; de Niko Von Glasow - (prix SACD Scam) (87&rsquo;)&nbsp;</p>

        <p>16h00 Courts-m&eacute;trages :<br />
        &nbsp;&nbsp; &nbsp;&bull;&nbsp;&nbsp; &nbsp;&laquo; DV8, the cost of living &raquo; de Lloyd Newson - (Grand Prix RTBF-EOP!) (34&rsquo;)<br />
        &nbsp;&nbsp; &nbsp;&bull;&nbsp;&nbsp; &nbsp;&laquo; Mon Petit Fr&egrave;re de la Lune &raquo; de Fr&eacute;d&eacute;ric Philibert - (Prix du public Court M&eacute;trage) (6&rsquo;)<br />
        &nbsp;&nbsp; &nbsp;&bull;&nbsp;&nbsp; &nbsp;&laquo; Luneville &raquo; de S&eacute;bastien Petit, en pr&eacute;sence du r&eacute;alisateur - (Prix RTBF Court M&eacute;trage) (8&rsquo;)<br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>

        <p>Tous les films sont sous-titr&eacute;s avec les codes couleurs pour les personnes d&eacute;ficientes auditives et audiod&eacute;crits pour les personnes d&eacute;ficientes visuels (casque sur demande). &nbsp;</p>

        <p>Chaque s&eacute;ance est pr&eacute;c&eacute;d&eacute;e de la projection du &ldquo;best-of&rdquo; du Festival 2011. &nbsp;</p>

        <p>Une derni&egrave;re et unique occasion de d&eacute;couvrir ces films exceptionnels !</p>

        <p><a href="http://www.autonomies.be/visiteurs/animations.php?event=106">Renseignements</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Projections au salon Autonomies', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/L\'avenirNamur_200.jpg', 
               'nomCategorieArticle' => 'Edition 2013 (Presse)', 
               'ordreArticle' => '3', 
               'dateTimeArticle' => '2013-11-22 21:09:34']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'L\'avenir Namur', 
               'contenuArticle' => '<p><img alt="" src="http://www.fondationlou.com/images/LAVENIR 2013-11-22-web.jpg" style="height:705px; width:700px" />&quot;Des films pour d&eacute;muystifier le handicap&quot; : un article tr&egrave;s complet</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'L\'avenir Namur', 
               'contenuArticle' => '']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/Metro(quotidien)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2013 (Presse)', 
               'ordreArticle' => '2', 
               'dateTimeArticle' => '2013-11-26 15:44:11']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Metro (quotidien)', 
               'contenuArticle' => '<p><img alt="" src="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/metro-2013-11-26.jpg" style="height:820px; width:580px" /><br />
        &nbsp;</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => '1385477051', 
               'contenuArticle' => '']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LaDH_200.jpg', 
               'nomCategorieArticle' => 'Edition 2013 (Presse)', 
               'ordreArticle' => '1', 
               'dateTimeArticle' => '2013-11-26 15:47:29']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'La DH', 
               'contenuArticle' => '<p><a href="http://www.dhnet.be/regions/namur-luxembourg/l-action-pas-la-compassion-529425f13570386f7f34c262">http://www.dhnet.be/regions/namur-luxembourg/l-action-pas-la-compassion-529425f13570386f7f34c262</a></p>

        <p><a href="http://www.dhnet.be/regions/namur-luxembourg/le-programme-du-festival-529425f53570386f7f34c2f7">http://www.dhnet.be/regions/namur-luxembourg/le-programme-du-festival-529425f53570386f7f34c2f7</a></p>

        <p><img alt="" src="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LADERNIEREHEURE-261113.jpg" style="height:710px; width:700px" /></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => '1385477249', 
               'contenuArticle' => '']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/Edition2011-MakingOf_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '20', 
               'dateTimeArticle' => '1970-01-09 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Edition 2011 - Making Of', 
               'contenuArticle' => '<p>La premi&egrave;re &eacute;dition du Festival EOP! s&#39;est cl&ocirc;tur&eacute; par un beau succ&egrave;s.</p>

        <p>Le palmar&egrave;s :</p>

        <ul>
        <li><strong>Palmar&egrave;s</strong> du festival <strong>(6 prix attribu&eacute;s)</strong> :</li>
        <li>Prix Cap48 et prix du public : &quot;Hasta la Vista&quot; de Geoffrey Enthoven</li>
        <li>Prix SACD-Scam : &quot;Nobody&#39;s perfect&quot; de Niko Von Glasow</li>
        <li>Prix du public court-m&eacute;trage : &quot;Mon petit fr&egrave;re de la lune&quot; de Fr&eacute;d&eacute;ric Philibert</li>
        <li>Prix court-m&eacute;trage RTBF : &quot;Luneville&quot; de S&eacute;bastien Petit</li>
        <li>Grand Prix RTBF-EOP! (pr&eacute;-achat) : &quot;The cost of living&quot; de Lloyd Newson</li>
        </ul>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/uuqkdODP5EM?wmode=transparent" width="640"></iframe></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Edition 2011 - Making Of', 
               'contenuArticle' => '<p>need text !!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/NousAvonsBesoinDeBénévoles!_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '21', 
               'dateTimeArticle' => '1970-01-08 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Ultimes séances de rattrapage ! (édition 2011 du Festival EOP! )', 
               'contenuArticle' => '<p>Dans le cadre du salon <a href="http://www.autonomies.be/">autonomies</a> à Liège, auront lieu des séances exceptionnelles durant lesquelles seront projetés le palmarès de l\'édition 2011, le samedi 29 avril 2012<br></p><br><p>Plus d\'info <a href="http://www.autonomies.be/visiteurs/Le_samedi_grand_ecran.php">ici</a></p><p><br></p><p>Et sinon, rendez-vous en 2013 !</p><p>Les inscriptions pour les films sont ouvertes.<br></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Ultimate sessions of catching up! (Edition 2011 of the Festival EOP!)', 
               'contenuArticle' => '<h1>need text !!</h1>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/Bienvenue_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '22', 
               'dateTimeArticle' => '1970-01-07 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Bienvenue', 
               'contenuArticle' => '<p>Bienvenue sur le site du Festival "EOP!". Voici quelques informations importantes :<br></p><p><strong>Vous vous demandez ce que vous propose ce festival ?</strong>&nbsp;</p><p>Voici les trois bandes annonces&nbsp; (3 X 20") :</p><font color="#0000FF" face="Palatino"><span style="font-size:12pt">&lt;<u><a href="http://www.youtube.com/watch?v=nwugiq-KP1A">http://www.youtube.com/watch?v=nwugiq-KP1A</a></u>&gt;</span></font> <br><font color="#0000FF" face="Palatino"><span style="font-size:12pt"> &lt;<u><a href="http://www.youtube.com/watch?v=YOg3mHVQi60">http://www.youtube.com/watch?v=YOg3mHVQi60</a></u>&gt;<br>&lt;<u><a href="http://www.youtube.com/watch?v=yQwW0LN61UQ">http://www.youtube.com/watch?v=yQwW0LN61UQ</a></u>&gt;</span></font><p><strong>Vous hésitez à vous déplacer à Namur ?</strong> <br></p><p>Prenez le train car les TEC sont partenaires du festival "EOP!" : nous vous offrons un service de navettes de bus gratuit avec un départ tous les 1/4 d\'heure de la gare de Namur (quai E - gare routière - Signalétique "EOP!" sur le bus) pour vous déposer devant la Maison de la Culture et inversement (entre 09h30 et 20h00). <br></p><p><strong>Vous hésitez encore ?</strong> <br></p><p>En ces pages, vous trouverez tout sur la programmation, les 32 films (avec bandes annonces pour chacun), les infos pratiques et la possibilité de réserver à l\'avance vos places .</p><p><strong>Vous avez envie de vivre une expérience hors du commun ?</strong><br></p><p>Ce festival, outre le prix modique des places, est 100 % accessible à tous : sous-titrage, traduction en LS, audiodescription, places pour PMR, emplacements de parking (voir page accessibilité)<br></p><p>Empruntez un casque audio à l\'accueil du festival et vivez les films en audiodescription (sous réserve de disponibilité - personnes aveugles et malvoyantes prioritaires).<br></p><p>Ecoutez un film en audiodescription : <br></p><p><font color="#0000FF" face="Palatino"><span style="font-size: 12pt;">&lt;</span></font>  <a href="http://www.youtube.com/watch?v=zPK7FCcOPhg">http://www.youtube.com/watch?v=zPK7FCcOPhg</a> <font color="#0000FF" face"Palatino"><span style="font-size:12pt">&gt;</span></font></p><p><strong>Vous aimeriez rencontrer les auteurs ou les protagonistes des films ?</strong> <br></p><p>Le Festival "EOP!" est heureux de vous annoncer la venue de :<br></p><blockquote><strong>- Jean-Michel Carré, </strong>réalisateur de <strong><span style="text-transform: uppercase;">"Sexe, amour et handicap" </span></strong>(France) (3 et 4-12)<p>-&nbsp;<strong>Leendert Pot &amp; Anja Hiddinga</strong>, réalisateurs de <strong><span style="text-transform: uppercase;">"Bewogen</span></strong>"&nbsp; (Pays-Bas) (3 et 4/12)</p><p><strong><span style="text-transform: uppercase;">- </span></strong><strong>Bianca Vogel</strong>, protagoniste du film <strong><span style="text-transform: uppercase;">"Nobody’s perfect"</span></strong> (Allemagne) (du 2 au 4-12)</p><p><strong>- David Toole</strong>, comédien et danseur de&nbsp;<strong><span style="text-transform: uppercase;"> "DV8, tHE COST OF LIVING"</span></strong> (Angleterre)  (3 &amp; 4/12) </p><p><strong>- Geoffrey Enthoven</strong> réalisateur de <strong><span style="text-transform: uppercase;">"Hasta la Vista</span></strong>" (Belgique), (3/12)</p>  <p><strong>- Jaco Van Dormael,</strong>réalisateur de<strong> <span style="text-transform: uppercase;">"Le Baiser"</span> </strong>(Belgique), (4/12)</p>  <p><strong>- Bernadette Saint-Remi et Véronique Fievet, </strong>réalisatrices de<strong><span style="text-transform: uppercase;"> "L’Homme    qui ne voulait pas être FOU"</span>&nbsp; </strong>(Belgique), (3/12)</p>  <p><strong>- Isabelle de Hertog </strong>comédienne de&nbsp;<strong> "<span style="text-transform: uppercase;">Hasta la Vista</span>" </strong>(Belgique), (3/12)</p>  <p><strong>- Sébastien Petit, </strong>réalisateur de<strong> "<span style="text-transform: uppercase;">Luneville"</span>&nbsp; </strong>(Belgique), (4/12)</p>  <p><strong>- Vincent Fries, </strong>protagoniste de<strong> <span style="text-transform: uppercase;">"Sexe,    amour et handicap" </span></strong>(Belgique),(3 et 4-12) </p></blockquote><strong><p>Ce festival vous plaît ?</p><p>Merci de nous aider à parler de ce festival via votre page Facebook, votre site, (...), en partageant les bandes annonces, en publiant des éléments visuels&nbsp; (disponibles en téléchargement à la page "Presse").</p><p><br>  Merci et bienvenue à Namur.</p><p>L\'équipe du Festival "Extra &amp; Ordinary People"</p><p>Un festival 100% accessibles pour tous !<br></p></strong>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Welcome', 
               'contenuArticle' => '<h1>need text !!</h1>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/UltimesSéancesDeRattrapage!(édition2011DuFestivalEOP!)_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '23', 
               'dateTimeArticle' => '1970-01-06 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Nous avons besoin de bénévoles !', 
               'contenuArticle' => '<p>La date du Festival EOP! approche à grands pas.&nbsp;Pour réussir cette aventure, nous avons besoin de vous, de bénévoles ! &nbsp;Vous avez envie de participer à un festival du film, d’accueillir les invités, de les diriger, de photographier, de gérer la billeterie,…durant un, deux ou trois jours (du 2 au 4 décembre) ou quelques heures?</p><p style="text-align:justify;">Les besoins ?&nbsp;Tout, selon vos capacités : un photographe, un cameraman, la gestion de la billetterie, des réservations, du vestiaire, de l’accueil, du bar, du placement dans la salle, du parking, des transport des invités…Du chef de poste à la personne de terrain.&nbsp;Votre aide sera donc précieuse, mais aussi celle de vos connaissances que vous imagineriez bien participer à cette aventure. N’hésitez donc pas à diffuser ce message.</p><p><strong>Réunion d’information le lundi 24 octobre à 20h00 au centre de documentation de l’IRSA. &nbsp;</strong>Chée de waterloo, 1508 (entrée principale),&nbsp;1180 Bruxelles</p><p><strong>Indisponible ce soir là, mais disposé à aider ?&nbsp;</strong><br>Envoyez un petit message à Luc Boland à l’adresse :&nbsp;<a href="mailto:luc.boland@skynet.be">eop@skynet.be</a></p><p><strong>Merci à vous ! <br></strong></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'We need volunteers!', 
               'contenuArticle' => '<h1>need text !!</h1>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/EOP!FestivalNews_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '24', 
               'dateTimeArticle' => '1970-01-05 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'EOP ! Festival News', 
               'contenuArticle' => '<p>Les inscriptions sont clôturées avec plus de 60 films inscrits !&nbsp;La sélection fut ardue mais c’est à l’unanimité et avec enthousiasme que le comité a retenu <strong>10 longs et moyens métrages</strong>, <strong>14 courts métrages</strong> et quelques <strong>clips de communication </strong>qui entrent parfaitement dans la ligne éditoriale du festival.</p><p><strong>10 pays</strong> seront représentés&nbsp;: la Belgique, la France, la Hollande, la Suisse, la Slovaquie, les Etats-Unis, l’Allemagne, l’Angleterre, la Corée du Sud et enfin l’Australie.</p><p>90 % des <strong>films</strong> seront des i<strong>nédits</strong> et donc des premières projections en Belgique !</p><p>De nombreuses <strong>thématiques</strong> seront abordées&nbsp;: la santé mentale, les victimes du Thalidomide, le syndrome de la Tourette, la cécité, la surdité, l’autisme, la sexualité de la personne en situation de handicap, le mariage, l’amour, l’intégration, la danse et la poésie par des personnes concernées et plus simplement la parole en guise de témoignage du vécu de personnes en situation de handicap.</p><p><strong>Une première édition qui s’annonce donc palpitante !&nbsp;</strong></p><p><a href="http://eopfestival.files.wordpress.com/2011/09/bandeauinf1.jpg"><img class="aligncenter size-full wp-image-354" src="http://eopfestival.files.wordpress.com/2011/09/bandeauinf1.jpg?w=254&amp;h=200" title="bandeauinf1" width="254" height="200"></a></p><p>Actuellement, tous les films sont en cours d’audiodescription (pour les personnes déficientes visuelles) et de sous-titrage (pour les personnes sourdes et malentendantes).</p><p>En terme d’accessibilité, le festival est en train de tisser une collaboration avec les services de répit afin de les activer durant tout le festival pour que des parents d’enfants en situation de handicap puisse déposer leur enfant et venir au festival.</p><p>L’ouverture des réservations et du site définitif se fera début novembre.&nbsp;<strong><a href="http://www.facebook.com/groups/eopfestival/" target="_blank">Vous pouvez aussi nous rejoindre sur la page Facebook du festival.</a></strong></p><p>Enfin, si vous souhaitez rejoindre l’équipe et vivre le festival de l’intérieur, merci de nous<strong> contacter.<br></strong></p><p>&nbsp;</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'EOP ! Festival News', 
               'contenuArticle' => '<h1>need text !!</h1>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/EOP!ViseL’enrichissementCulturelDeTous_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '25', 
               'dateTimeArticle' => '1970-01-04 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'EOP ! vise l’enrichissement culturel de tous', 
               'contenuArticle' => '<p>« EOP ! » veut donner les moyens aux personnes concernées de s’exprimer et&nbsp;de<strong> contribuer à l’enrichissement culturel de tous.</strong> Les projections pourront être suivies de débats qui seront l’occasion de partager ce regard, de débattre avec un public moins averti ainsi qu’avec des personnes connaissant des handicaps&nbsp;différents.</p><p style="text-align:justify;">« EOP ! » considère la situation de handicap comme relative à un contexte&nbsp;social et culturel, liée à des facteurs environnementaux et comportementaux. <strong>Aussi,&nbsp;« EOP ! » se produira dans des salles ou des locaux accessibles aux personnes à&nbsp;mobilité réduite</strong> et met, autant que faire se peut, en oeuvre des mesures d’accessibilité&nbsp;pour tous films qu’elle projette et débats qu’elle organise (sous-titrage, langage des&nbsp;signes, garderie pour enfants déficients).</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'EOP! aims to involve all people in cultural education', 
               'contenuArticle' => '<p>« EOP! » aims at giving concerned people the tools to express themselves and to contribute to the cultural education of all. All films screenings will be followed by discussions and meetings creating a space for sharing, and discussing, insights between people living with difference types of handicaps and those who are interested to learn more about them.</p><p style="text-align:justify;">For « EOP! » a handicap is a social and cultural context also related with the environment and behavioural sphere. <strong>« EOP ! » will also guarantee&nbsp; full access to the film festival locations and projections theatres, by persons with limited mobility, </strong>and will guarantee as much as possible that&nbsp; films and debates will be accessible for all ( sub-titling, sign language, baby-sitting for children with deficiencies) .</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/UnConceptémergeantDansDeNombreuxPays_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '26', 
               'dateTimeArticle' => '1970-01-03 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Un concept émergeant dans de nombreux pays', 
               'contenuArticle' => '<p>De par le monde, de nombreux festivals de films sur la thématique du handicap se sont récemment développés et rencontrent un réel succès de fréquentation tant auprès des personnes concernées que du grand public :</p><p>« En Marche » (2ème édition, Cannes – France),</p><p>« Handifilm » (3ème édition, Rabbat – Maroc),</p><p>« Emotion Pictures » (4ème édition, Athènes – Grèce),&nbsp;</p><p>« Mental Power » (5ème édition, Prague, Tchéquie)&nbsp;</p><p>« Sprout » (8ème édition, New-York – Etats-Unis),&nbsp;</p><p>« Integration, You and Me » (8ème édition, Koszalin – Pologne),&nbsp;</p><p>« Handica » (8ème édition, Lyon, France) ,…&nbsp;</p><p>Peu présents dans le paysage audiovisuel en Belgique (pour ne pas dire absent), des films de qualité traitant de ces sujets sont de formidables outils de sensibilisation, de démystification sur la différence, la déficience et le handicap. Le nombre de films de qualité qui existent dans cet esprit et à travers le monde est impressionnant et leurs thématiques variées (cfr historique). Par l’absence de ces images écartées des grands médias, toute forme de déficience est généralement stigmatisée.Pour le grand public, il n’est souvent qu’un mot au sens vague, un cliché, une image volée au coin d’une rue. Pour le professionnel, la personne déficiente est un patient, dans la réalité du seul moment de la consultation, qui se résume alors trop souvent à une étiquette marquée du nom de sa déficience et de ses handicaps.&nbsp;</p><ul>  <li>Comment faire évoluer la représentation des professionnels et du public en général sur telle ou telle déficience ?</li>  <li>Quelles sont les réalités, les capacités, les aspirations, les mode de vie et de perception des personnes concernées, selon leur déficience et leur handicap ? <br></li>  <li>Que vivent les personnes déficientes et leur famille, une fois les portes de la consultation, de l’école ou du centre de vie refermées ?&nbsp;</li></ul><p>Un tel festival, au prix d’un réel soutien médiatique, peut y apporter des réponses en ayant pour objectif de faire découvrir une autre réalité de la vie d’une personne déficiente et de sa famille, d’appréhender la déficience avec un regard sur les capacités et non les limitations.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'An Emerging Concept in Various Countries', 
               'contenuArticle' => '<p>Around the world the theme of handicap has recently appeared in various films festivals. They seem to attract people concerned by the theme as well as general public. Here are some examples of recent Festivals:</p><p style="text-align:justify;">« <strong>En Marche </strong>» (2d edition, Cannes – France),</p><p>« <strong>Handifilm </strong>» (3rd edition, Rabbat – Morocco),</p><p>« <strong>Emotion Pictures </strong>» (4th edition, Athens – Greece),</p><p>« <strong>Mental Power </strong>» (5th edition, Prague, Tcheque Republic)</p><p>« <strong>Sprout </strong>» (8th edition, New-York – USA)</p><p>« <strong>Integration, You and Me </strong>» (8th edition, Koszalin – Poland),</p><p>« <strong>Handica </strong>» (8th edition, Lyon, France).</p><p style="text-align:justify;">In Belgium, films on theme such as handicap and deficiency are quite rare and to say the least even almost inexistent. In spite of this lack of exposure, these films are invaluable mobilization tools particularly those responding to high standard of quality. They also act as ground-breaking tools for de-mystifying differences, deficiencies and handicaps. Around the world there seems to be an impressive amount of high quality films on these topics also considered by the sampling of themes they relate to. The absence of such images in the mainstream media channel makes it easier for the general public to stigmatize deficiencies. To a certain extend because of such lack of exposure to high quality films on the theme of handicap, stereotypes, and other vague ‘clichés’ are easily reproduced, at least socially.</p><p style="text-align:justify;">For the medical or para-medical professional, a person with a deficiency is simply a patient taken in the reality of a consultation and is often labeled by the name of his/her deficiency or handicap.</p><p><strong>This raises some questions:</strong></p><ul><li>How would it be possible to transform the perception on deficiencies and handicap by the professionals and the general public as a whole?</li> <li>What are the realities, the capacities, the aspirations, the life and the perception of the concerned persons, on their own deficiency and handicap?</li> <li>What is the reality of the persons living with impairment once they have returned in their family and closed the doors of the medical consultation, school or social centers?</li></ul><p style="text-align:justify;"><strong>Thanks to a great media support, such a Festival can bring elements of responses by aiming to unveil the realities of an impaired person, his or her family, and approach deficiency from the perspectives of capacities rather than limitations. </strong></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/HistoriqueDuProjet_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '27', 
               'dateTimeArticle' => '1970-01-02 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Historique du projet', 
               'contenuArticle' => '<p style="text-align: justify;">Réalisateur de films de fiction et de documentaires, auteur en 2006 d’un film sur son fils porteur d’un syndrome très rare (« Lettre à Lou »), Luc Boland a eu l’occasion et la chance de se rendre dans quelques festivals de films dans le monde où il a pu découvrir d’autres réalisations sur la thématique du handicap.</p><p style="text-align: justify;">C’est ainsi qu’ayant été invité en juin 2009 à la troisième édition du festival international « EMOTION PICTURES » à Athènes sur la thématique des capacités des personnes en situation de handicap, il lui a été donné de voir une sélection particulièrement éblouissante d’une quarantaine de films documentaires ou docu-fictions sur le sujet, émanant des quatre coins du monde. De vrais films d’auteur, tantôt d’un haut niveau artistique, tantôt d’une justesse et une rigueur dans le traitement du sujet.</p><p style="text-align: justify;">Si la terminologie communément employée était “disability” (l’incapacité), chacun de ces films parlait plutôt d’ “abilities” (de capacités), de valeurs humaines et de combats pour le respect de la différence et l’épanouissement de la personne en situation de déficience.</p><p style="text-align: center;"><a href="http://wp.me/p1pxGm-1Z"><img alt="FF_europe1" class="size-full wp-image-177 aligncenter" src="http://eopfestival.files.wordpress.com/2011/03/ff_europe1.jpg?w=220&amp;h=220" title="FF_europe1" width="220" align="left" height="220" hspace="20"></a></p><p style="text-align: justify;">Ce festival s’inscrivait donc dans un esprit et une qualité de sélection des films particulièrement intéressante. De même, suite aux projections et aux diffusions à la télévision de son film, Luc Boland a reçu la confirmation de la pertinence et del’importance d’un travail de sensibilisation sur ce thème avec le média audiovisuel, au travers de plus de 4.500 courriels reçus de spectateurs de tous bords.</p><p style="text-align: justify;">C’est ainsi qu’est né l’idée d’organiser, en Belgique, un festival sur cette thématique. Avec l’accord immédiat et l’enthousiasme de la secrétaire générale du festival grec, Mme Maria Papaliou, un projet de partenariat est né avec pour objectif le partage du catalogue et une collaboration dans la communication et les compétences. A ce jour, d’autres collaborations se tissent aussi avec des festivals étrangers traitant de la même thématique.</p><p>&nbsp;</p><p></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'History of the Project', 
               'contenuArticle' => '<p style="text-align: justify;">Luc Boland is a fiction and documentary director. He also is the father of Lou, a young boy who is affected by a very rare syndrome. In 2006 he produced a film (« Lettre à Lou »). As a professional and a concerned person, Luc attended several films festival around the world related to the topic of deficiencies and handicaps.</p><p style="text-align: justify;">Then one day of June 2009, on the occasion of the 3<sup>rd</sup> Edition of the International Film Festival « EMOTION PICTURES » entirely dedicated to the topic of handicap, he found himself screening an impressive selection of about forty films, short-films or docu-fictions exclusively on the topic of handicap from all parts of the world. These films were of high quality either artistically or through the rigorous and skilled approach of the topics of handicap. In spite of the use of the very common terminology of “disability” each film was instead talking about abilities, human values and struggles for respect of difference and growth of the person living with impairment. This festival was an excellent example of quality in terms of the selection of films.</p><p style="text-align: center;"><img alt="European Festivals " class="aligncenter size-full wp-image-15" src="http://eopfestivalengl.files.wordpress.com/2011/03/ff_europe1.jpg?w=220&amp;h=220" title="European Festivals " width="220" align="left" height="220" hspace="20"></p><p style="text-align: justify;">On a similar note back home, the screening and the television broadcast of his own film, gave Luc Boland another confirmation of the importance and the relevance of the theme with audiovisual media, as he received approximately 4,500 emails from spectators from all walks of life.  This is how the idea of organizing a similar Festival in Belgium was born.</p><p style="text-align: justify;">Thanks to the instant agreement and enthusiasm of Mrs. Maria Papalium, the Secretary General of the Film Festival held in Greece, a partnership was established aiming at sharing the film catalogue as well as communication and competencies. Since then other collaborations have been established with Festivals held in Europe and elsewhere on the topic of handicap.</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LucBoland:«IlS\'agitDeRegarderLesCapacitésDeLaPersonne»_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '28', 
               'dateTimeArticle' => '1970-01-01 00:00:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Luc Boland : « Il s\'agit de regarder les capacités de la personne »', 
               'contenuArticle' => '<p>Luc Boland est l&rsquo;initiateur, il est &agrave; la base de l&rsquo;id&eacute;e du festival EOP ! Il a r&eacute;pondu a quelques questions. Une interview fort int&eacute;ressante&hellip;</p>

        <p><strong>Le film et le handicap, deux choses qui vont ensemble?</strong></p>

        <p>&nbsp;</p>

        <p>Et pourquoi pas ! Il est &eacute;tonnant de constater qu&rsquo;il y a dans certains pays comme la Belgique une autocensure sur ce sujet. Peu de films y sont r&eacute;alis&eacute;s sur cette th&eacute;matique, comme si on ne devait pas montrer une personne handicap&eacute;e, que cela ne se &laquo; faisait pas &raquo; sous peine d&rsquo;&ecirc;tre accus&eacute; de voyeurisme. Par ailleurs, le sujet n&rsquo;est pas particuli&egrave;rement jug&eacute; &laquo; porteur &raquo;.</p>

        <p>Aucun festival de ce type n&rsquo;existe en Belgique alors que de tels &eacute;v&eacute;nements naissent un peu partout dans le monde depuis quatre ans, avec un r&eacute;el int&eacute;r&ecirc;t du public et un travail de sensibilisation efficace. En soutenant la diffusion, en montrant ce qui se fait dans d&rsquo;autres pays par le biais du festival EOP !, nous esp&eacute;rons ainsi encourager la cr&eacute;ation de films traitant de ces sujets en Belgique.</p>

        <p><strong>Le but d&rsquo;EOP ! est-il de montrer des personnes handicap&eacute;es?</strong></p>

        <p>&nbsp;</p>

        <p>Non, le but n&rsquo;est pas de &laquo; montrer &raquo; les personnes handicap&eacute;es mais bien de r&eacute;aliser un travail d&rsquo;&eacute;ducation et de sensibilisation. Il s&rsquo;agit de regarder les capacit&eacute;s de la personne avec la volont&eacute; de d&eacute;mystifier la diff&eacute;rence et le handicap. EOP ! veut d&eacute;velopper une r&eacute;flexion sur la repr&eacute;sentation des personnes en situation de handicap.</p>

        <p><strong>Quel est le public vis&eacute;?</strong></p>

        <p>Tout le monde et en particulier le grand public. L&agrave;, r&eacute;side le d&eacute;fi ! Le festival EOP ! vise la mixit&eacute; des publics qu&rsquo;ils soient experts ou pas, handicap&eacute;s ou valides, cin&eacute;philes avertis ou pas tellement&hellip; En cr&eacute;ant ce type d&rsquo;&eacute;v&eacute;nement, nous voulons susciter des rencontres et la r&eacute;flexion autour de la personne handicap&eacute;e, quel que soit son handicap. La s&eacute;lection se fera sur les &laquo; petits plus &raquo; qui font qu&rsquo;un film donne envie de s&rsquo;int&eacute;resser, de comprendre et d&rsquo;aller &agrave; la d&eacute;couverte de l&rsquo;autre.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Luc Boland: « It\'s about looking at the person\'s capacities »', 
               'contenuArticle' => '<p>Luc Boland is the initiator. He got the idea of the Festival and he answered a few questions. Here an interesting interview&hellip;</p>

        <p><strong>Are films and handicap two things that go together ?</strong></p>

        <p>Why not! It is quite surprising to notice censorship on the subject in some countries, like Belgium. <strong>Very few films speak about handicap as though we are not supposed to show a handicapped person, as though it was not &lsquo; good to do so&rdquo;</strong> as though it is tabou and not allowed to be seen. It is also considered a very weak theme not requiring much exposure.</p>

        <p>Not a single Festival in Belgium has ever been held on the subject while around the world the past 4 years or so have seen a real interest to appear with the public and an awareness effort well calibrated. In supporting the broadcast and in showing what is been done in other countries, EOP! Festival hopes to encourage the productions of this type of films in Belgium.</p>

        <p><strong>Is the Goal of EOP ! to Show people with disabilities ? </strong></p>

        <p>No, the goal is not to &laquo; show &raquo; people with disabilities, rather to instill an attitude of education and awareness.<strong> It is about looking at the person&rsquo;s capacities and demystifying differences and handicap.</strong> EOP! aims at generating discussion and analysis on the representation of people living with handicap.</p>

        <p><strong>For which public is &laquo; EOP ! &raquo; ?</strong></p>

        <p>General public, large public ! That is the whole challenge! EOP! Festival aims at blending various publics together, experts and interested persons, handicapped persons or not, cinema expert or not, basically all audiences. <strong>Through this type of initiative, we are aiming at generating encounters, and debates on the meaning of any type of handicap from the perspective of those living with disabilities and those accompanying them.</strong> The selection will pay great attention to &ldquo;the little something&rdquo; that gives the movie a sense of understanding and discovery of the other person. .</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/EOP!2013:MessageDeNotreParrainPhilippePozzoDiBrogo«L\'intouchable»_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '19', 
               'dateTimeArticle' => '2013-11-11 21:18:35']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'EOP! 2013 : Message de notre parrain Philippe Pozzo di Brogo  « L\'intouchable »', 
               'contenuArticle' => '<p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/LFuWMmylbbc" width="640"></iframe></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'EOP! 2013 / message from Philippe Pozzo di Borgo « L\'intouchable »', 
               'contenuArticle' => '<p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/LFuWMmylbbc" width="640"></iframe><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/LFuWMmylbbc" width="640"></iframe></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/L\'administrateurD\'EOP!,LucBolandEstInterrogéDansLe«FaceàFace»DansL\'émissionRTBF-«OnN\'estPasDesPigeons»_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '18', 
               'dateTimeArticle' => '2013-11-29 15:21:21']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'L\'administrateur d\'EOP!, Luc Boland est interrogé dans le « Face à face » dans l\'émission RTBF - « On n\'est pas des pigeons »', 
               'contenuArticle' => '<p>Luc Boland administrateur d&eacute;l&eacute;gu&eacute; du Festival EOP! r&eacute;pond aux questions de Christophe Bourdon, un des animateurs de l&#39;&eacute;mission RTBF &quot;On n&#39;est pas des pigeons&quot;. Un condens&eacute; en 3 minutes pour vous convaincre qu&#39;EOP! c&#39;est top !</p>

        <p><a href="http://www.rtbf.be/video/detail_on-n-est-pas-des-pigeons?id=1873771">http://www.rtbf.be/video/detail_on-n-est-pas-des-pigeons?id=1873771</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => '1385734881', 
               'contenuArticle' => '']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PalmarèsDuFestival2013_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '17', 
               'dateTimeArticle' => '2013-12-04 17:57:18']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Palmarès du festival 2013', 
               'contenuArticle' => '<p><img alt="" src="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/eop2013-palmares.jpg" style="height:200px; width:200px" /></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><strong>EOP 2013 Palmar&egrave;s</strong></p>

        <p>Devant la qualit&eacute; de l&rsquo;ensemble des films, le Jury a d&eacute;cid&eacute; de rajouter 2 prix dans la cat&eacute;gorie courts-m&eacute;trages et deux mentions.</p>

        <p>Pour rappel&nbsp;: 35 courts-m&eacute;trages et 15 moyens-longs m&eacute;trages en comp&eacute;tition.</p>

        <ul>
        <li>EOP! d&#39;or 2013 <strong>Prix du public Court-m&eacute;trage&nbsp;:</strong></li>
        </ul>

        <p>THE INTERVIEWER (Genevi&egrave;ve Clay-Smith)</p>

        <ul>
        <li>EOP! d&#39;or 2013 <strong>Prix du public Long-m&eacute;trage&nbsp;:</strong></li>
        </ul>

        <p>THE SCARLET ROAD (Catherine Scott)</p>

        <ul>
        <li>EOP! d&#39;or 2013 <strong>Prix Horizon 2000&nbsp; C-M</strong> (500 &euro;)&nbsp;(image positive de la personne handicap&eacute;e)</li>
        </ul>

        <p>JE VIENS DE LOIN (Marion Casabianca)</p>

        <ul>
        <li>(Prix suppl&eacute;mentaire) EOP&nbsp;! d&rsquo;argent Court-m&eacute;trage&nbsp;(image positive de la personne handicap&eacute;e)&nbsp;:</li>
        </ul>

        <p>L&rsquo;ETRANGE BALLADE DE SARINA (Marie Mandy) (300 &euro;)</p>

        <ul>
        <li>EOP! d&#39;or 2013 <strong>Prix CAP48&nbsp; L-M</strong> (1.000 &euro;)&nbsp;(image positive de la personne handicap&eacute;e) :</li>
        </ul>

        <p>MY WONDEFUL LIFE AS A VEGETABLE (de Lars Feldballe Petersen)</p>

        <ul>
        <li>EOP! d&#39;or 2013 <strong>Grand prix RTBF C-M</strong> (pr&eacute;achat valeur &plusmn; 1.000 &euro;)&nbsp;:</li>
        </ul>

        <p>THE INTERVIEWER (Genevi&egrave;ve Clay-Smith)</p>

        <ul>
        <li><strong>2&egrave;me prix&nbsp;RTBF C-M </strong>(pr&eacute;achat)</li>
        </ul>

        <p>DEAF MUGGER (William Magger)</p>

        <ul>
        <li>EOP! d&#39;or 2013 <strong>Grand prix RTBF L-M</strong> (pr&eacute;achat valeur 5.000 &euro;)&nbsp;:</li>
        </ul>

        <p>MY WAY TO OLYMPIA (Niko Von Glasow)</p>

        <p>Mention&nbsp;:</p>

        <ul>
        <li>Court-M&eacute;trage AKVARIUM de B&aring;rd R&oslash;ssevold</li>
        <li>Long-M&eacute;trage : THE PUNK SYNDROME de Jukka K&auml;rkk&auml;inen, J-P Passi</li>
        </ul>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => '1386176238', 
               'contenuArticle' => '<p><img alt="" src="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/eop2013-palmares.jpg" style="height:200px; width:200px" /></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><strong>EOP 2013 Palmar&egrave;s</strong></p>

        <p>Devant la qualit&eacute; de l&rsquo;ensemble des films, le Jury a d&eacute;cid&eacute; de rajouter 2 prix dans la cat&eacute;gorie courts-m&eacute;trages et deux mentions.</p>

        <p>Pour rappel&nbsp;: 35 courts-m&eacute;trages et 15 moyens-longs m&eacute;trages en comp&eacute;tition.</p>

        <ul>
        <li>EOP! d&#39;or 2013 <strong>Prix du public Court-m&eacute;trage&nbsp;:</strong></li>
        </ul>

        <p>THE INTERVIEWER (Genevi&egrave;ve Clay-Smith)</p>

        <ul>
        <li>EOP! d&#39;or 2013 <strong>Prix du public Long-m&eacute;trage&nbsp;:</strong></li>
        </ul>

        <p>THE SCARLET ROAD (Catherine Scott)</p>

        <ul>
        <li>EOP! d&#39;or 2013 <strong>Prix Horizon 2000&nbsp; C-M</strong> (500 &euro;)&nbsp;(image positive de la personne handicap&eacute;e)</li>
        </ul>

        <p>JE VIENS DE LOIN (Marion Casabianca)</p>

        <ul>
        <li>(Prix suppl&eacute;mentaire) EOP&nbsp;! d&rsquo;argent Court-m&eacute;trage&nbsp;(image positive de la personne handicap&eacute;e)&nbsp;:</li>
        </ul>

        <p>L&rsquo;ETRANGE BALLADE DE SARINA (Marie Mandy) (300 &euro;)</p>

        <ul>
        <li>EOP! d&#39;or 2013 <strong>Prix CAP48&nbsp; L-M</strong> (1.000 &euro;)&nbsp;(image positive de la personne handicap&eacute;e) :</li>
        </ul>

        <p>MY WONDEFUL LIFE AS A VEGETABLE (de Lars Feldballe Petersen)</p>

        <ul>
        <li>EOP! d&#39;or 2013 <strong>Grand prix RTBF C-M</strong> (pr&eacute;achat valeur &plusmn; 1.000 &euro;)&nbsp;:</li>
        </ul>

        <p>THE INTERVIEWER (Genevi&egrave;ve Clay-Smith)</p>

        <ul>
        <li><strong>2&egrave;me prix&nbsp;RTBF C-M </strong>(pr&eacute;achat)</li>
        </ul>

        <p>DEAF MUGGER (William Magger)</p>

        <ul>
        <li>EOP! d&#39;or 2013 <strong>Grand prix RTBF L-M</strong> (pr&eacute;achat valeur 5.000 &euro;)&nbsp;:</li>
        </ul>

        <p>MY WAY TO OLYMPIA (Niko Von Glasow)</p>

        <p>Mention&nbsp;:</p>

        <ul>
        <li>Court-M&eacute;trage AKVARIUM de B&aring;rd R&oslash;ssevold</li>
        <li>Long-M&eacute;trage : THE PUNK SYNDROME de Jukka K&auml;rkk&auml;inen, J-P Passi</li>
        </ul>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/"EOP!»ChezVous!_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '16', 
               'dateTimeArticle' => '2014-01-30 12:10:41']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => '"EOP! » chez vous !', 
               'contenuArticle' => '<p>Vous souhaitez organiser une s&eacute;ance avec des films du catalogue &quot;EOP!&quot; dans votre centre culturel, votre &eacute;cole, votre association ? C&#39;est d&eacute;sormais possible !</p>

        <p>N&#39;h&eacute;sitez pas &agrave; nous contacter pour de plus amples informations.</p>

        <p>eop AROBASE skynet.be</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => '"EOP! » in your region', 
               'contenuArticle' => '<p>You would like to organise special screening with &quot;EOP!&quot; films ?</p>

        <p>It&#39;s now possible !</p>

        <p>Don&#39;t hesitate to contact us for more informations.</p>

        <p>eop AROBASE skynet.be<br />
        &nbsp;</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/EOP!FestivalàUccle19-20-3-2014_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '15', 
               'dateTimeArticle' => '2014-02-06 09:30:50']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'EOP! Festival à Uccle 19-20-3-2014', 
               'contenuArticle' => '<p><a href="http://eopfestival.be/fr/home2014">Les infos</a> sur le festival &quot;palmar&egrave;s&quot; 2014 &agrave; Uccle sont <a href="http://eopfestival.be/fr/home2014">sur la page 2014</a> !</p>

        <p><img alt="" src="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/affiche-EOP-UCCLE-2014-web.jpg" style="height:580px; width:400px" /></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'EOP! Festival à Uccle 19-20-3-2014', 
               'contenuArticle' => '']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LesFilmsDuFestivalEOP!EnLocation!_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '14', 
               'dateTimeArticle' => '2014-06-19 14:54:13']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'les films du festival EOP! en location !', 
               'contenuArticle' => '<p><strong>Bonne nouvelle&nbsp;</strong><strong>: les films du festival EOP&nbsp;! sont maintenant disponibles en location</strong> pour votre association, centre culturel ou autre manifestation non commerciale.</p>

        <p>Nous avons le plaisir de vous annoncer que nous avons n&eacute;goci&eacute; les droits de diffusions de la plupart des films des &eacute;ditions 2011 et 2013 aupr&egrave;s des distributeurs, &agrave; des tarifs uniformis&eacute;s et r&eacute;duits. Nous pouvons donc louer ces films ou des s&eacute;ances &laquo;&nbsp;cl&eacute; sur porte&nbsp;&raquo;<strong>, mais uniquement aux asbl, centres culturels et pour des projections non commerciales.</strong></p>

        <p><strong>De quoi s&rsquo;agit-il&nbsp;?</strong></p>

        <p>L&rsquo;asbl EOP&nbsp;! (Extra &amp; Ordinary People&nbsp;!) organise un festival international du film bisannuel &agrave; Namur et en s&eacute;ances d&eacute;localis&eacute;es. Elle propose au public des films in&eacute;dits et de tr&egrave;s grande qualit&eacute;, donnant une image positive et humaine de la personne en situation de handicap, dans ses r&eacute;alit&eacute;s et ses capacit&eacute;s, bien loin des clich&eacute;s usuels.</p>

        <p>Notre catalogue des films en location est riche de 65 films, in&eacute;dits et en provenance de 18 pays. Ces films, tant&ocirc;t &eacute;tonnants, tant&ocirc;t humoristiques ou s&eacute;rieux, embrassent tous les genres&nbsp;: du court-m&eacute;trage au long-m&eacute;trage, du film d&rsquo;animation au documentaire et &agrave; la fiction.</p>

        <p>Ils peuvent &ecirc;tre propos&eacute;s lors de s&eacute;ances th&eacute;matiques (voir catalogue en pi&egrave;ce jointe) pour tout type de public (enfant, famille, scolaire, adulte et professionnel) et accessibles &agrave; tous&nbsp;: tous nos films sont sous-titr&eacute;s (pour les malentendants) et audiod&eacute;crits (pour les d&eacute;ficients visuels &ndash; &agrave; la demande).</p>

        <p>Plusieurs formules sont possibles&nbsp;&agrave; des co&ucirc;ts clairs et fixes selon vos choix (voir pi&egrave;ce jointe) :</p>

        <ul>
        <li>
        <p>de la projection classique (avec audiodescription ou non), &agrave; une projection avec audiodescription s&eacute;par&eacute;e (via casques personnels), jusqu&rsquo;&agrave; l&rsquo;animation d&rsquo;un d&eacute;bat par nos soins.</p>
        </li>
        <li>
        <p>la diffusion sur tout support num&eacute;rique (DVD, DCP, num&eacute;rique/informatique).</p>
        </li>
        <li>
        <p>la mise &agrave; disposition de nos visuels (affiches) adapt&eacute;s &agrave; votre &eacute;v&eacute;nement.</p>
        </li>
        </ul>

        <p><strong>Restant &agrave; votre enti&egrave;re disposition pour toute information, veuillez trouver ci-joint notre catalogue et une explication de la grille tarifaire.</strong></p>

        <p><strong>T&eacute;l&eacute;chargement:</strong>&nbsp;</p>

        <p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/catalogue-des-films-EOP-2011-2014.pdf" target="_blank"><strong>Catalogue des films (fichier pdf)</strong></a></p>

        <p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/couts-location-films-eop.pdf" target="_blank"><strong>Conditions de locations(fichier pdf)</strong></a></p>

        <p><img alt="" src="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/eop-locations.jpg" style="height:555px; width:500px" /></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'no available out of belgium territory', 
               'contenuArticle' => '']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/3FilmsEOP!PrimesEn2013EnTelevisionSurLaRTBF_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '13', 
               'dateTimeArticle' => '2014-10-09 17:20:31']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => '3 films EOP! primes en 2013 en television sur la RTBF', 
               'contenuArticle' => '<p><strong>Ce mardi 14 octobre 2014</strong>, ne ratez pas la diffusion des trois films prim&eacute;s par la RTBF lors de l&#39;&eacute;dition 2013 du festival EOP!</p>

        <p>Rires, sourires et &eacute;motions au rendez-vous !</p>

        <p><strong>21h15 :</strong></p>

        <ul>
        <li><a href="http://eopfestival.be/fr/2013/detail-du-film/734"><strong>&quot;My way to Olympia&quot; </strong></a>de Niko Von Glasow (grand prix RTBF - documentaire long-m&eacute;trage)</li>
        </ul>

        <p>Un regard trucculent et &eacute;mouvant sur les jeux paralympics de Londres (<a href="http://eopfestival.be/fr/2013/detail-du-film/734">voir la bande annonce</a>)</p>

        <p>Suivi de :</p>

        <ul>
        <li><strong>&quot;<a href="http://eopfestival.be/fr/2013/detail-du-film/712">Deaf Mugger</a>&quot;</strong> de William Magger (Mention RTBF - court-m&eacute;trage d&eacute;coiffant de 2 minutes)</li>
        </ul>

        <p>&nbsp;</p>

        <ul>
        <li><strong>&quot;<a href="http://eopfestival.be/fr/2013/detail-du-film/744">The interviewer</a>&quot; </strong>de G. Clay Smith (Grand Prix RTBF court-m&eacute;trage, Prix du public) : une com&eacute;die irr&eacute;sistible dans la veine du &quot;Huiti&egrave;me jour&quot; (13 minutes) (<a href="http://eopfestival.be/fr/2013/detail-du-film/744">voir la bande annonce</a>)</li>
        </ul>

        <p>Merci de diffuser l&#39;information !</p>

        <p>Bon soir&eacute;e sur la Trois !</p>

        <p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/RTBF_La3-CAP48-EOP-diffusion.jpg"><img alt="" src="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/RTBF_La3-CAP48-EOP-diffusion.jpg" style="height:592px; width:423px" /></a></p>

        <p><iframe allowfullscreen="true" frameborder="0" height="420" scrolling="no" src="http://www.youtube.com/embed/zUugq9rUWok?wmode=transparent&amp;jqoemcache=9kyyW" width="680"></iframe></p>

        <p><iframe allowfullscreen="" frameborder="0" height="420" scrolling="no" src="//player.vimeo.com/video/45737098" title="The Interviewer Trailer" width="680"></iframe></p>

        <p>&nbsp;</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => '1412875231', 
               'contenuArticle' => '']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/OuvertureDesInscriptionsDesFilmsPourEOP!2015_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '12', 
               'dateTimeArticle' => '2014-11-17 15:16:03']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Ouverture des inscriptions des films pour EOP! 2015', 
               'contenuArticle' => '<p>Le festival EOP! (&ldquo;Extra &amp; ordinary People !&rdquo;) pr&eacute;pare sa troisi&egrave;me &eacute;dition qui se tiendra en Belgique en novembre 2015.</p>

        <p><strong>Films admis&nbsp;</strong>:</p>

        <p>Le festival &laquo;&nbsp;EOP!&nbsp;&raquo; s&eacute;lectionne des films sur la th&eacute;matique des r&eacute;alit&eacute;s et capacit&eacute;s des personnes en situation de handicap.</p>

        <p>Sont admis des films de fiction, d&rsquo;animation, des docu-fictions ou des documentaires, ainsi que des clips de communication sur la th&eacute;matique.</p>

        <p>Les films propos&eacute;s doivent avoir &eacute;t&eacute; termin&eacute;s apr&egrave;s le 1er janvier 2013.</p>

        <p>L&rsquo;inscription d&rsquo;un film est gratuite et ne sera valid&eacute;e qu&rsquo;apr&egrave;s r&eacute;ception du formuaire d&rsquo;inscription dument compl&eacute;t&eacute; et de 2 copies DVD du film (date limite d&rsquo;inscription&nbsp;: 1er avril 2015).</p>

        <p>T&eacute;l&eacute;charger le <a href="http://www.fondationlou.com/images/ficheINSCRIPTION_EOP2015.pdf">formulaire d&#39;inscription</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Call for entries EOP! Festival 2015', 
               'contenuArticle' => '<p>The EOP! Festival (&quot; Extra and Ordinary People! &quot; international film festival) prepare the third edition which will be placed in Belgium in november 2015.</p>

        <p><strong>Entries Submission</strong>:</p>

        <p>The theme of the &laquo;&nbsp;EOP!&nbsp;&raquo; Festival is about the realities and capacities of people living with disabilities.</p>

        <p>Types of films that can be submitted include, fiction, animation, docu-fiction, documentaries and short-films of communication content.</p>

        <p>Films submitted for entry must have been completed after 1st January 2013.</p>

        <p>Registration for a film is free of charge. Registrations will be confirmed only after submission of this registration form duly filled in and 2 DVD copy of the film. Entries must be received by APRIL 1st 2015.</p>

        <p>Download <a href="http://www.fondationlou.com/images/REGULATIONS OF THE EOP FESTIVAL 2015_English.pdf">the registration form</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LEFestivalEOP!Devient«THEEXTRAORDINARYFILMFESTIVAL»_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '11', 
               'dateTimeArticle' => '2015-05-23 09:24:52']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'LE festival EOP! devient « THE EXTRAORDINARY FILM FESTIVAL »', 
               'contenuArticle' => '<p>Apr&egrave;s consultation, <strong>EOP&nbsp;!</strong>, le Festival International du Film des Extra &amp; Ordinary People, a d&eacute;cid&eacute; de confier sa communication &agrave; SecondFloor.</p>

        <p>Ce festival bisannuel, dont la 3&egrave;me &eacute;dition se tiendra du 10 au 14 novembre prochain, a pour particularit&eacute; de programmer des fictions et des documentaires centr&eacute;s sur les r&eacute;alit&eacute;s et les capacit&eacute;s des personnes en situation de handicap. Que ce soit par le sujet ou la personne en tant qu&rsquo;acteur/com&eacute;dien.</p>

        <p>L&rsquo;agence a travaill&eacute; dans un premier temps sur une nouvelle strat&eacute;gie de communication pour le festival, incluant un nouveau branding qui permettra &agrave; celui-ci de d&eacute;passer les fronti&egrave;res et poursuivre son d&eacute;veloppement&nbsp;: EOP&nbsp;! laissera donc la place &agrave; &laquo;&nbsp;<strong>THE extraordinary FILM FESTIVAL&nbsp;</strong>&raquo; et sera dot&eacute; d&rsquo;une toute nouvelle identit&eacute; corporate.</p>

        <p>SecondFloor va par ailleurs &eacute;pauler les organisateurs du festival dans le domaine du sponsoring, de son plan m&eacute;dia et de la gestion de ses outils online. Elle signera par ailleurs une campagne print, radio et tv est pr&eacute;vue pour la rentr&eacute;e prochaine.</p>

        <p><img alt="" src="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/TEFF-DH-campagneweb-2015-5site.jpg" style="height:710px; width:536px" /></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'The EOP! festival become « THE EXTRAORDINARY FILM FESTIVAL »', 
               'contenuArticle' => '<p>After much consideration,&nbsp;<strong>EOP!</strong>, the International Extra &amp; Ordinary People Film Festival, decided to partner with SecondFloor to improve its communication.</p>

        <p>This biennial festival, whose 3rd edition will be held in Namur from November 10 to November 14, offers you a selection of fictions and documentaries centred around the lives and capacities of deficient and disabled persons, whether by the subject or the actors.</p>

        <p>The agency first worked on a new communication&nbsp;strategy, including a new branding that will allow the festival to continue his evolution. EOP! thus becomes &quot;<strong>The Extraordinary Film Festival</strong>&quot; and will show a brand new corporate identity.</p>

        <p>SecondFloor will also help the organizers of the festival with sponsoring, media plans, and online communication. Finally, they will work on the print, radio and TV campaigns that will debut in September 2015.</p>

        <p><img alt="" src="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/TEFF-DH-campagneweb-2015-5site.jpg" style="height:710px; width:536px" /></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PrésentationDuFestival2015_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '10', 
               'dateTimeArticle' => '2015-08-24 10:07:18']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Présentation du festival 2015', 
               'contenuArticle' => '<p>Vous trouverez via le lien ci-dessous un dossier de pr&eacute;sentation g&eacute;n&eacute;ral du festival 2015 ainsi que le dossier sponsoring :</p>

        <p><a href="http://www.fondationlou.com/images/Presentation EOP 2015-05 mail.pdf">Dossier de pr&eacute;sentation </a></p>

        <p><a href="http://www.fondationlou.com/images/TEFF15152_partenariatV2.pdf">Dossier sponsoring</a></p>

        <p>&nbsp;</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Festival presentation', 
               'contenuArticle' => '<p>Below are links to a presentation folder and a sponsoring folder for the 2015 edition of The Extraordinary Film Festival :</p>

        <p><a href="http://www.fondationlou.com/images/Presentation EOP 2015-05 mail.pdf">Dossier de pr&eacute;sentation&nbsp;</a></p>

        <p><a href="http://www.fondationlou.com/images/TEFF15152_partenariatV2.pdf">Dossier sponsoring</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/NouveauSite!_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '9', 
               'dateTimeArticle' => '2015-10-06 15:20:03']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Nouveau site !', 
               'contenuArticle' => '<p>Bienvenue sur le nouveau site de l&#39;Extraordinary Film Festival. Nous avons tout mis en oeuvre afin qu&#39;il soit le plus intuitif et accessible possible pour tous. Vous pourrez y r&eacute;server vos tickets ou pass, visionner les bandes annonces et les fiches de chaque film, d&eacute;couvrir (bient&ocirc;t) toutes les manifestations qui auront lieu autour des projections (concerts, spectacles, animations etc.).</p>

        <p>Bonne visite et &agrave; tr&egrave;s bient&ocirc;t au festival.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'New website!', 
               'contenuArticle' => '<p>Welcome to the new Extraordinary Film Festival website! We tried our best in order to make it as intuitive and accessible to all of you. Through this website, you can book your tickets and passes, watch trailers and learn more about the movies and events (concerts, shows, ...)&nbsp;that will be screening during the festival.</p>

        <p>Enjoy your visit and we look forward to seeing you at the festival!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/BANDEANNONCE&DOSSIERDEPRESSEDUFESTIVAL_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '6', 
               'dateTimeArticle' => '2015-10-09 07:45:03']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'BANDE ANNONCE & DOSSIER DE PRESSE DU FESTIVAL', 
               'contenuArticle' => '<p><a href="http://www.fondationlou.com/images/TEFF-EOP-2015-dossier-presse-complet.pdf">Téléchargement du Dossier de presse</a></p>

        <p>&nbsp;</p>

        <p><iframe align="middle" allowfullscreen="" frameborder="0" height="360" scrolling="no" src="//www.youtube.com/embed/-sVowuBxI0Q" width="640"></iframe></p>

        <p>&nbsp;</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'THE TRAILER', 
               'contenuArticle' => '<p>&nbsp;</p>

        <p><a href="http://www.fondationlou.com/images/TEFF-EOP-2015-dossier-presse-complet.pdf">PRESS</a></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/JgkoDAzaDdU" width="640"></iframe></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LesSeancesAutismes_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '8', 
               'dateTimeArticle' => '2015-10-21 07:08:14']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Les seances autismes', 
               'contenuArticle' => '<p>L&rsquo;autisme sera mis &agrave; l&rsquo;honneur avec deux films&nbsp;et des rencontres &agrave; ne pas rater : &laquo;&nbsp;<strong>QUELQUE CHOSE EN PLUS&nbsp;</strong>&raquo; dans le cadre d&rsquo;une s&eacute;ance - d&eacute;bat anim&eacute;e par Inforautisme et le long-m&eacute;trage documentaire &laquo;&nbsp;<strong>WRETCHES &amp; JABBERERS&nbsp;</strong>&raquo; (<em>voir section &laquo;&nbsp;coup d&rsquo;&oelig;il&nbsp;&raquo;</em>) avec la pr&eacute;sence exceptionnelle des deux protagonistes am&eacute;ricains&nbsp;!</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/XQ_aB6012tg" width="640"></iframe></p>

        <p>Le Festival peut &eacute;galement s&rsquo;enorgueillir de la pr&eacute;sence de <strong>JOSEPH SCHOVANEC</strong>, autiste asperger, auteur des best-sellers &laquo;&nbsp;Je suis &agrave; l&rsquo;est&nbsp;&raquo; et &laquo;&nbsp;Eloge du voyage &agrave; l&rsquo;usage des autistes et de ceux qui ne le sont pas assez&nbsp;&raquo;. Il sera non seulement membre du jury, mais donnera &eacute;galement une conf&eacute;rence/&laquo;&nbsp;stand up&nbsp;&raquo; charg&eacute;e de l&rsquo;humour dont il a le secret.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Autism screenings', 
               'contenuArticle' => '<p>Autism will be put forward during this edition, with two not-to-be-missed&nbsp;movies and meetings : &quot;<strong>QUELQUE CHOSE EN PLUS</strong>&quot; - as a part of session and discussion chaired by Inforautisme - and &quot;<strong>WRETCHES &amp; JABBERERS</strong>&quot; - with a special appearance from the two american actors!</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/XQ_aB6012tg" width="640"></iframe></p>

        <p>The festival can also take pride in the presence of&nbsp;<strong>JOSEPH SCHOVANEC</strong>, Asperger autist, author of best-sellers such as &quot;Je suis &agrave; l&#39;est&quot; and &quot;Eloge du voyage &agrave; l&#39;usage des autistes et de ceux qui ne le sont pas assez&quot;. He will be a member of the jury, and will also give a stand-up conference full of this humour only him&nbsp;holds the secret of.</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/InfosPourLesAudiodesciptions_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '7', 
               'dateTimeArticle' => '2015-10-22 11:37:03']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Infos pour les audiodesciptions', 
               'contenuArticle' => '<p>Chers amis d&eacute;ficients visuels,</p>

        <p>Cette ann&eacute;e encore, l&#39;audio-description est disponible pour toutes les s&eacute;ances de l&rsquo;Extraodinary Film Festival via un pr&ecirc;t de casque. Cependant, nouveaut&eacute; de cette &eacute;dition et gr&acirc;ce aux soci&eacute;t&eacute;s Twavox et Sennheiser, nous vous proposons la r&eacute;ception des audiodescriptions directement sur votre Smartphone.</p>

        <p>Pour ce faire, rien de plus simple&nbsp;: t&eacute;l&eacute;chargez gratuitement sur Google Store ou l&#39;App Store le logiciel ad&eacute;quat. N&#39;oubliez pas votre casque pour profiter de l&#39;exp&eacute;rience.</p>

        <p>Pour les s&eacute;ances de Namur et Li&egrave;ge t&eacute;l&eacute;charger &quot; Cinema Connect &quot; de Sennheiser.</p>

        <p>Pour les s&eacute;ances de Mons et Charleroi t&eacute;l&eacute;charger&nbsp; &quot; Twavox &quot;.</p>

        <p>A d&eacute;faut, tous les sites du festival seront &eacute;quip&eacute;s de casques Sennheiser fourni par nos soins.</p>

        <p>Bonne vision dans cette nouvelle exp&eacute;rience.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Audio description informations', 
               'contenuArticle' => '<p>Dear visiually impaired friends,</p>

        <p>This year again, audio description is available for all the sessions of The Extraordinary Film Festival&nbsp;through headset lending. However, a novelty for this edition, thanks to Twavox and Sennheiser, is the possibility to download the audio descriptions directly on your Smartphone.</p>

        <p>It is very easy to do so : download the corresponding&nbsp;application for free on the Google Story or the App Store. Don&#39;t forget your headphones to enjoy the experience.</p>

        <p>For sessions in Namur and Li&egrave;ge, download Sennheiser&#39;s &quot;Cinema Connect&quot;</p>

        <p>For sessions in Mons and Charleroi, download &quot;Twavox&quot;</p>

        <p>If you can&#39;t use the application, there will be headsets avalaible on all festival sites.</p>

        <p>Enjoy this new experience!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LeBuzzDeLucBolandLorsDuGalaD\'ouverture_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '5', 
               'dateTimeArticle' => '2015-11-13 08:22:51']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Le buzz de Luc Boland lors du Gala d\'ouverture', 
               'contenuArticle' => '<p>Citation de&nbsp;Luc Boland, directeur artistique de l&rsquo;Extraodinary Film Festival.&nbsp;</p>

        <blockquote>
        <p>&quot; Gala d&rsquo;ouverture de l&#39;&nbsp;<a href="https://www.facebook.com/extraordinaryfestival/">Extraordinary film festival</a>. Le public me voit monter sur sc&egrave;ne, rev&ecirc;tu d&rsquo;un kilt. Rires et brouhaha dans la salle. Petit mot d&rsquo;introduction (&laquo; Bonjour, je suis ravi de vous accueillir&hellip; &raquo; puis je m&rsquo;interromps : &laquo; euh&hellip; il y a manifestement quelque chose qui vous a surpris, d&eacute;rang&eacute; ou fait rire. Je ne comprends pas&hellip; &raquo; Puis regardant mon kilt : &laquo; Ah, c&rsquo;est &ccedil;a ? Oui, c&rsquo;est vrai qu&rsquo;il n&rsquo;est pas habituel de voir un homme en kilt. Mais c&rsquo;est &eacute;trange, car &agrave; 600 km d&rsquo;ici (en Ecosse), cela ne choquerait personne. &raquo;. Silence dans la salle. &laquo; Et bien je suis convaincu qu&rsquo;il en est de m&ecirc;me au niveau du handicap : c&rsquo;est juste une question d&rsquo;habitude. Et si les personnes porteuses de handicap vivaient au quotidien parmi nous, nous ne serions plus d&eacute;rang&eacute; par leur diff&eacute;rence. &raquo; &quot;<br />
        &nbsp;</p>
        </blockquote>

        <p><img alt="" src="http://www.teff.be/bundles/eopblog/images/gallerie/edition_2015/photo/cc91434a794893a7339ab2a91982ddf1.jpg" style="height:1000px; width:1000px" /></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => '1447402971', 
               'contenuArticle' => '']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/PalmaresDeL’edition2015DeL’ExtraodinaryFilmFestival: _200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '4', 
               'dateTimeArticle' => '2015-11-16 17:11:57']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Palmares de l’edition 2015 de l’Extraodinary Film Festival: ', 
               'contenuArticle' => '<h1><strong>Palmar&egrave;s de l&rsquo;&eacute;dition 2015 de l&rsquo;Extraodinary Film Festival:</strong> &nbsp;</h1>

        <p>&nbsp;</p>

        <p>(pr&eacute;sentation du jury en bas de page)</p>

        <p>&nbsp;</p>

        <h2><strong>Les Prix du Jury Officiel</strong> &nbsp;</h2>

        <p>&nbsp;</p>

        <p> <strong>Grand Prix RTBF (long m&eacute;trage)</strong></p>

        <p> <em>(dot&eacute; de 5.000 &euro;, ce prix se concr&eacute;tisera par un pr&eacute;achat du film et sa diffusion sur les antennes de la RTBF)</em></p>

        <p>&nbsp;</p>

        <p> <strong>MARGARITA WITH A STRAW de Shonali Bose &amp; Nilesh Maniyar (Inde/USA)</strong> </p>

        <p>Remis &agrave; Nilesh MANIYAR, co-sc&eacute;nariste, co-r&eacute;alisateur et producteur du film, par&nbsp;Mr Luc BOLAND, Directeur Artistique de l&#39;Extraordinary Film Festival et Mr Sam KARMANN, Pr&eacute;sident du jury, com&eacute;dien et r&eacute;alisateur &nbsp; .</p>

        <p>&nbsp;</p>

        <p>Bande annonce&nbsp;:</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/gVKn9vWYO2k" width="640"></iframe></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><strong>Grand Prix RTBF (court m&eacute;trage)</strong> </p>

        <p><em>(la RTBF s&rsquo;associe &agrave; l&rsquo;&eacute;v&eacute;nement pour offrir ce prix qui &eacute;quivaut au pr&eacute;achat du film et sa diffusion sur les antennes)</em> </p>

        <p>&nbsp;</p>

        <p><strong>WORKMATE de Genevieve Clay-Smith (Australie)</strong></p>

        <p> Remis par Mr Luc BOLAND, Directeur Artistique de l&#39;Extraordinary Film Festival  et Mr Josef SCHOVANEC, Membre du jury, auteur, conf&eacute;rencier et animateur radio   </p>

        <p>&nbsp;</p>

        <p>Bande annonce&nbsp;:</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/uFKRNWNCYU4" width="640"></iframe></p>

        <p>&nbsp;</p>

        <p><strong>Prix CAP48 du documentaire&nbsp;</strong></p>

        <p>(<em>le prix Cap48, dot&eacute; de 1000 &euro;, r&eacute;compense un film documentaire donnant une image positive de la personne porteuse de handicap</em>)</p>

        <p>&nbsp;</p>

        <p> <strong>GLANCE UP de Enric Ribes &amp; Oriol Martinez (Espagne)</strong></p>

        <p> Remis &agrave; Oriol GISPERT, producteur du film,  par Mr Edouard DESCAMPE, Pr&eacute;sident de CAP48 et Pr&eacute;sident du Comit&eacute; de gestion de l&#39;AWIPH et Mr Sam KARMANN, Pr&eacute;sident du jury, com&eacute;dien et r&eacute;alisateur</p>

        <p>&nbsp;</p>

        <p>Bande annonce&nbsp;:</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/r45aBhwKbgA" width="640"></iframe></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p>   <strong>Prix du D&eacute;l&eacute;gu&eacute; g&eacute;n&eacute;ral aux droits de l&rsquo;enfant (DGDE)</strong></p>

        <p> (<em>offert par le D&eacute;l&eacute;gu&eacute; g&eacute;n&eacute;ral aux Droits de l&rsquo;Enfant, ce prix est dot&eacute; de 800 &euro; et r&eacute;compense un court m&eacute;trage mettant en valeur les droits de l&rsquo;enfant</em>) </p>

        <p>&nbsp;</p>

        <p><strong>CUERDAS de Pedro Solic Garcia (Espagne)</strong></p>

        <p> Remis par Mr Bernard DEVOS, D&eacute;l&eacute;gu&eacute; g&eacute;n&eacute;ral aux droits de l&rsquo;enfant  &nbsp; </p>

        <p>&nbsp;</p>

        <p>Bande annonce&nbsp;:</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/v-twmwL6gv0" width="640"></iframe></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><strong>Prix CANAL C (Pub &amp; Com)</strong> </p>

        <p><em>(la t&eacute;l&eacute;vision namuroise s&rsquo;associe au festival pour donner un prix au meilleur film de communication dans la cat&eacute;gorie &laquo;&nbsp;Pub, Com et Handicap&nbsp;&raquo;)</em></p>

        <p>&nbsp;</p>

        <p> <strong>DANS LES YEUX D&#39;UN ENFANT de Thomas Rhazi (France)</strong> </p>

        <p>Remis &agrave; Nathalie LEJEUNE, directrice de l&#39;association Noemie,  par Mr Michel BERHIN, Administrateur et Membre du Comit&eacute; de Direction de Canal C et Mme Alice BAUDINE, Administratrice d&eacute;l&eacute;gu&eacute;e de l&rsquo;Awiph   &nbsp;</p>

        <p>&nbsp;</p>

        <p>Le film&nbsp;:</p>

        <p>&nbsp;</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/WB9UvjnYO90" width="640"></iframe></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><strong>Mentions Sp&eacute;ciales du Jury</strong> </p>

        <p><em>Etant donn&eacute; la qualit&eacute; exceptionnelle de la programmation, le Jury a souhait&eacute; d&eacute;cerner deux mentions sp&eacute;ciales :</em> </p>

        <p>&nbsp;</p>

        <p><strong>I DON&#39;T CARE de Carolina Giammetta (Royaume-Uni)</strong> </p>

        <p>remise &agrave; la protagoniste Billie-Jo BAILEY  par Mr Philippe HARMEGNIES, Pr&eacute;sident-fondateur de l&#39;association Passe-Muraille. </p>

        <p>&nbsp;</p>

        <p>La bande annonce&nbsp;:</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/C7k21anifYA " width="640"></iframe></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><strong>AUTISM IN LOVE de Michelle Friedline (USA)</strong> </p>

        <p>remise &agrave; la r&eacute;alisatrice Michelle FRIEDLINE  par Mr Bruno DE STABENRATH, Membre du jury, com&eacute;dien, auteur, sc&eacute;nariste et animateur radio</p>

        <p>&nbsp;</p>

        <p>La bande annonce&nbsp;:</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/ofCnmhqvYJ4" width="640"></iframe></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <h2>    <strong>Les Prix du Public</strong> &nbsp; </h2>

        <p>&nbsp;</p>

        <p><strong>Prix du Public long m&eacute;trage</strong> </p>

        <p>&nbsp;</p>

        <p><strong>GABOR de Sebastian Alfie (Espagne)</strong> </p>

        <p>Remis &agrave; Sebastian ALFIE, r&eacute;alisateur, et Gabor BENE, protagoniste et directeur photo,  par Mr Alain THIRION, Conseiller-chef de service Phare Service des initiatives, information et documentation &nbsp;  </p>

        <p>&nbsp;</p>

        <p>La bande annonce&nbsp;:</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/9dZA5ekUR58" width="640"></iframe></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><strong>Prix du Public court m&eacute;trage</strong></p>

        <p> ex aequo  :</p>

        <p>&nbsp;</p>

        <p><strong>A COLD LAND de Shahriar Pourseyedian (Iran)</strong></p>

        <p>La bande annonce&nbsp;:</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/lCa1am1sUME" width="640"></iframe></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><strong>CUERDAS de Pedro Solic Garcia (Espagne)</strong> </p>

        <p>Remis par Mme C&eacute;cile CREFCOEUR, Echevine de la culture, lecture publique, finance et budget de la Ville de Namur &nbsp;  </p>

        <p>&nbsp;</p>

        <p>La bande annonce&nbsp;:</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/v-twmwL6gv0" width="640"></iframe></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><strong>Prix du Public &laquo;&nbsp;Pub et Com&nbsp;&raquo;</strong></p>

        <p>&nbsp;</p>

        <p> <strong>EEN&nbsp;LIFT GEEFT JE VLEUGELS! de Roel Goyens (Belgique)</strong> </p>

        <p>Remis au r&eacute;alisateur Roel GOYENS,&nbsp;&agrave; la productrice&nbsp;Leen VAN NUNEN,&nbsp;et leur protagoniste,&nbsp; par Mr Jean-Marc VAN ESPEN, D&eacute;put&eacute;-pr&eacute;sident du Coll&egrave;ge de la Province de Namur &nbsp;  </p>

        <p>&nbsp;</p>

        <p>Le film&nbsp;:</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/ooHFZ-9A-6M" width="640"></iframe></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><strong>Prix du Jeune Public&nbsp;du Club Richelieu Europe de Namur</strong> </p>

        <p><em>(avec la participation de 2200 &eacute;l&egrave;ves)</em> </p>

        <p>&nbsp;</p>

        <p><strong>CUERDAS de Pedro Solic Garcia (Espagne)</strong> </p>

        <p>Remis par Mme Fran&ccedil;oise ROYAUX, Pr&eacute;sidente de la cellule socio-culturelle de l&rsquo;internationale Europe Club Richelieu de Namur &nbsp; &nbsp;</p>

        <p>&nbsp;</p>

        <p>La bande annonce&nbsp;:</p>

        <p><iframe allowfullscreen="" frameborder="0" height="360" src="//www.youtube.com/embed/v-twmwL6gv0" width="640"></iframe></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><strong>Jury Officiel - TEFF 2015</strong></p>

        <p>&nbsp;</p>

        <ul>
        <li> <strong>Sam Karmann </strong>- pr&eacute;sident du jury - acteur (<em>Cuisine et d&eacute;pendances, Le Go&ucirc;t des autres</em>, ...) et r&eacute;alisateur (<em>Kennedy et moi, La V&eacute;rit&eacute; ou Presque</em>, ...), il est &eacute;galement le directeur artistique d&#39;un festival similaire &quot;Regards Crois&eacute;s&quot; &agrave; N&icirc;mes </li>
        </ul>

        <p>&nbsp;</p>

        <ul>
        <li><strong>Josef Schovanec </strong>- philosophe &eacute;crivain, animateur sur Europe 1, auteur de best-sellers et... autiste! On lui doit <em>Je suis &agrave; l&#39;Est </em>(2012),&nbsp;<em>Eloge du voyage &agrave; l&#39;usage des autistes et de ceux qui ne le sont pas assez</em> (2014) et <em>De l&#39;amour en Autistan </em>(2015)</li>
        </ul>

        <p>&nbsp;</p>

        <ul>
        <li> <strong>Bruno De Stabenrath </strong>- acteur dans <em>L&#39;argent de poche </em>de Fran&ccedil;ois Truffaut, <em>L&#39;H&ocirc;tel de la plage </em>de Michel Lang ou encore <em>Mesrine </em>de Jean-Fran&ccedil;ois Richet, il&nbsp;est &eacute;galement sc&eacute;nariste de s&eacute;ries t&eacute;l&eacute;vis&eacute;es. Devenu t&eacute;trapl&eacute;gique suite &agrave; un accident de voiture, il a &eacute;crit un roman autobiographique <em>Cavalcade</em>, port&eacute; &agrave; l&#39;&eacute;cran par Steve Suissa. Il anime le talk Show &quot;Rockin chair&quot; sur Num&eacute;ro 23. </li>
        </ul>

        <p>&nbsp;</p>

        <ul>
        <li><strong>Sonia Rolland </strong>- actrice notamment pour Radu Mihaileanu, Raoul Peck, Bertrand Tavernier et r&eacute;alisatrice de <em>Rwanda, du chaos au miracle</em>. Elle est la fondatrice de l&#39;association Maisha Africa </li>
        </ul>

        <p>&nbsp;</p>

        <ul>
        <li><strong>Philippe Harmegnies </strong>- pr&eacute;sident-fondateur de l&#39;association Passe-Muraille.   </li>
        </ul>

        <p>&nbsp;</p>

        <p>Site&nbsp;: <a href="http://theprfactory.us11.list-manage.com/track/click?u=8da63fad89fc5659a745c6403&amp;id=c66fc50e5a&amp;e=629c85a978">www.teff.be</a> ou <a href="http://theprfactory.us11.list-manage.com/track/click?u=8da63fad89fc5659a745c6403&amp;id=280dc70fbe&amp;e=629c85a978">www.eopfestival.be</a></p>

        <p> Facebook&nbsp;: <a href="http://theprfactory.us11.list-manage1.com/track/click?u=8da63fad89fc5659a745c6403&amp;id=0da5538f50&amp;e=629c85a978">http://www.facebook.com/extraordinaryfestival</a> </p>

        <p>&nbsp;</p>

        <p><strong>Le tour du TEFF en 3 minutes&nbsp;:</strong></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p><iframe align="middle" allowfullscreen="" frameborder="0" height="360" scrolling="no" src="//www.youtube.com/embed/-sVowuBxI0Q" width="640"></iframe></p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>

        <p>&nbsp;</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'teff 2015 Palmares - Awrads', 
               'contenuArticle' => '<p>soon</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LesFilmsDuFestivalEnLocation!_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '3', 
               'dateTimeArticle' => '2016-03-04 09:24:14']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Les films du festival en location !', 
               'contenuArticle' => '<p><strong>Le nouveau catalogue 2016 des films mis en location</strong> <strong>par l&#39;asbl EOP! est maintenant disponible (t&eacute;l&eacute;chargement pdf ci-dessous avec lien pour acc&eacute;der aux fiches et bandes annonces des films</strong><strong>).</strong></p>

        <p>&nbsp;</p>

        <p>Nous avons le plaisir de vous annoncer que nous avons n&eacute;goci&eacute; les droits de diffusions de la plupart des films des &eacute;ditions 2011, 2013 et 2015 aupr&egrave;s des distributeurs, &agrave; des tarifs uniformis&eacute;s et r&eacute;duits. Nous pouvons donc louer ces films ou des s&eacute;ances &laquo;&nbsp;cl&eacute; sur porte&nbsp;&raquo;<strong>, mais uniquement aux asbl, centres culturels et pour des projections non commerciales ou priv&eacute;es.</strong></p>

        <p>&nbsp;</p>

        <p><strong>De quoi s&rsquo;agit-il&nbsp;?</strong></p>

        <p>&nbsp;</p>

        <p>L&rsquo;asbl EOP&nbsp;! (Extra &amp; Ordinary People&nbsp;!) organise un festival international du film bisannuel &agrave; Namur et en s&eacute;ances d&eacute;localis&eacute;es. Elle propose au public des films in&eacute;dits et de tr&egrave;s grande qualit&eacute;, donnant une image positive et humaine de la personne en situation de handicap, dans ses r&eacute;alit&eacute;s et ses capacit&eacute;s, bien loin des clich&eacute;s usuels.</p>

        <p>&nbsp;</p>

        <p>Notre catalogue des films en location est riche de plus de 125 films, in&eacute;dits et en provenance de 21 pays. Ces films, tant&ocirc;t &eacute;tonnants, tant&ocirc;t humoristiques ou s&eacute;rieux, embrassent tous les genres&nbsp;: du court-m&eacute;trage au long-m&eacute;trage, du film d&rsquo;animation au documentaire et &agrave; la fiction.</p>

        <p>&nbsp;</p>

        <p>Ils peuvent &ecirc;tre propos&eacute;s lors de s&eacute;ances th&eacute;matiques pour tout type de public (enfant, famille, scolaire, adulte et professionnel) et accessibles &agrave; tous&nbsp;: tous nos films sont sous-titr&eacute;s (pour les malentendants) et audiod&eacute;crits (pour les d&eacute;ficients visuels &ndash; &agrave; la demande).</p>

        <p>&nbsp;</p>

        <p><strong>Ce catalogue vous est propos&eacute; de 3 mani&egrave;res&nbsp;</strong>:</p>

        <p>&nbsp;</p>

        <ul>
        <li>
        <p>soit des s&eacute;ances types (s&eacute;ances &laquo;&nbsp;cl&eacute;s sur porte&nbsp;&raquo; selon th&eacute;matique et public cible&nbsp;: scolaire, cin&eacute;club, jeune public, th&eacute;matique),</p>
        </li>
        <li>
        <p>soit les films par ordre alphab&eacute;tique (court et longs-m&eacute;trages s&eacute;par&eacute;ment)</p>
        </li>
        <li>
        <p>soit tous les films du catalogue pr&eacute;sent&eacute;s par th&eacute;matique (afin de composer vous-m&ecirc;me une s&eacute;ance).</p>
        </li>
        </ul>

        <p>&nbsp;</p>

        <p>Plusieurs formules sont possibles&nbsp;&agrave; des co&ucirc;ts clairs et fixes selon vos choix (voir document location) :</p>

        <p>&nbsp;</p>

        <ul>
        <li>
        <p>de la projection classique (avec audiodescription ou non), &agrave; une projection avec audiodescription s&eacute;par&eacute;e (via casques personnels), jusqu&rsquo;&agrave; l&rsquo;animation d&rsquo;un d&eacute;bat par nos soins.</p>
        </li>
        <li>
        <p>la diffusion sur tout support num&eacute;rique (DVD, DCP, num&eacute;rique/informatique).</p>
        </li>
        <li>
        <p>La location du mat&eacute;riel de projection</p>
        </li>
        <li>
        <p>la mise &agrave; disposition de nos visuels (affiches) adapt&eacute;s &agrave; votre &eacute;v&eacute;nement.</p>
        </li>
        <li>
        <p>&nbsp;</p>
        </li>
        </ul>

        <p><strong>Restant &agrave; votre enti&egrave;re disposition pour toute information.</strong></p>

        <p>&nbsp;</p>

        <p><strong>T&eacute;l&eacute;chargement:</strong>&nbsp;</p>

        <p>&nbsp;</p>

        <p><a href="http://www.fondationlou.com/images/catalogue-des-films-EOP!-2016.pdf">Catalogue EOP&nbsp;! 2016 </a></p>

        <p>&nbsp;</p>

        <p><a href="http://www.fondationlou.com/images/couts-location-films-eop-2016.pdf">Conditions location </a></p>

        <p>&nbsp;</p>

        <p><img alt="" src="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/eop-locations-2016.jpg" style="height:650px; width:500px" /></p>

        <p>&nbsp;</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Les films du festival en location !', 
               'contenuArticle' => '']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/BEST-OFTHEEXTRAORDINARYFILMFESTIVAL16ET17Septembre2016_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '2', 
               'dateTimeArticle' => '2016-06-03 16:06:57']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'BEST-OF THE EXTRAORDINARY FILM FESTIVAL 16 ET 17 septembre 2016', 
               'contenuArticle' => '<p>En partenariat avec l&rsquo;asbl EOP! (Extra and Ordinary People), l&rsquo;Echevinat des Familles, de la Sant&eacute; et de l&rsquo;Egalit&eacute; des Chances est heureux de vous pr&eacute;senter en 12 s&eacute;ances les best of de&nbsp; &laquo;&nbsp;The extraordinary Film Festival&nbsp;&raquo; 2015.</p>

        <p>Une belle occasion de changer notre regard sur l&rsquo;autre et sa diff&eacute;rence, de faire &eacute;voluer nos mentalit&eacute;s et d&eacute;mystifier le handicap loin des clich&eacute;s usuels.</p>

        <p>Ces films, tant&ocirc;t &eacute;tonnants, tant&ocirc;t humoristiques ou s&eacute;rieux, embrassent tous les genres : du court-m&eacute;trage au long-m&eacute;trage, du film d&rsquo;animation au documentaire et &agrave; la fiction.</p>

        <p>S&eacute;ances publiques et scolaires.<br />
        Infos sur le site &agrave; la page Uccle 2016.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'BEST-OF THE EXTRAORDINARY FILM FESTIVAL', 
               'contenuArticle' => '<p>En partenariat avec l&rsquo;asbl EOP! (Extra and Ordinary People), l&rsquo;Echevinat des Familles, de la Sant&eacute; et de l&rsquo;Egalit&eacute; des Chances est heureux de vous pr&eacute;senter en 12 s&eacute;ances les best of de&nbsp; &laquo;&nbsp;The extraordinary Film Festival&nbsp;&raquo; 2015.</p>

        <p>Une belle occasion de changer notre regard sur l&rsquo;autre et sa diff&eacute;rence, de faire &eacute;voluer nos mentalit&eacute;s et d&eacute;mystifier le handicap loin des clich&eacute;s usuels.</p>

        <p>Ces films, tant&ocirc;t &eacute;tonnants, tant&ocirc;t humoristiques ou s&eacute;rieux, embrassent tous les genres : du court-m&eacute;trage au long-m&eacute;trage, du film d&rsquo;animation au documentaire et &agrave; la fiction.</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/AppelAFilms(quatriemeEditionDeL\'ExtraordinaryFilmFestival)2017_200.jpg', 
               'nomCategorieArticle' => 'News', 
               'ordreArticle' => '1', 
               'dateTimeArticle' => '2016-10-18 12:27:27']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Appel a films (quatrieme edition de l\'Extraordinary Film Festival) 2017', 
               'contenuArticle' => '<p>L&rsquo;Extraordinary Film Festival pr&eacute;pare sa quatri&egrave;me &eacute;dition qui se tiendra en Belgique en novembre 2017.</p>

        <p>Les inscriptions sont ouvertes jusqu&#39;au 1er mars 2017.</p>

        <p><strong>The Extraordinary Film Festival (bisannuel) s&eacute;lectionne des films sur la th&eacute;matique des r&eacute;alit&eacute;s et capacit&eacute;s des personnes en situation de handicap.</strong></p>

        <p>Sont admis des films de fiction, d&rsquo;animation, des docu-fictions ou des documentaires, ainsi que des clips de communication sur la th&eacute;matique.</p>

        <p>Les films propos&eacute;s doivent avoir &eacute;t&eacute; termin&eacute;s <strong>apr&egrave;s le 1</strong><strong>er</strong><strong> janvier 2015</strong>.</p>

        <p>Pour inscrire un film, merci de remplir le pr&eacute;sent <a href="http://www.fondationlou.com/images/ficheINSCRIPTION_TEFF2017.pdf">formulaire</a>.</p>

        <p>&nbsp;</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Call for entries TEFF 2017', 
               'contenuArticle' => '<p>The Extraordinary Film Festival prepare the fourth edition which will be placed in Belgium in november 2017.</p>

        <p>The registration is opend (end mars 1st 2017).</p>

        <p><strong>The theme of the The Extraordinary Film festival (a biennial festival) is about the realities and capacities of people living with disabilities. </strong></p>

        <p>Types of films that can be submitted include, fiction, animation, docu-fictions, documentaries and short-films of communication content.</p>

        <p>Films submitted for entry must have been completed after <strong>January 1st 2015</strong>.</p>

        <p>To registrate your film, please download the <a href="http://www.fondationlou.com/images/Registration form_TEFF2017.pdf">registration form</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/Parlons-en!-Awiph-EditionNumero68DeSeptembre2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '18', 
               'dateTimeArticle' => '2015-10-10 16:25:50']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Parlons-en! - Awiph - edition numero 68 de septembre 2015', 
               'contenuArticle' => '<p>Article tr&egrave;s complet qui pr&eacute;sente les moments fort du festival</p>

        <p>&nbsp;</p>

        <p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/awiph-parlons-en-2.pdf">Charger l</a><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/awiph-parlons-en-2.pdf" target="_blank">&#39;article de presse au format pdf</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Parlons-en! - Awiph - edition number 68 of september 2015', 
               'contenuArticle' => '<p>Article that presents very complete the highlights of the festival</p>

        <p>&nbsp;</p>

        <p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/awiph-parlons-en-2.pdf" target="_blank">Download the press article in PDF format</a></p>

        <p>&nbsp;</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/L\'XPresse-EditionNumero78(InclusionAsblXFragile-Ex-AFRAHM)_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '19', 
               'dateTimeArticle' => '2015-10-10 16:34:34']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'L\'X presse - edition numero 78 (Inclusion asbl X fragile - ex- AFRAHM)', 
               'contenuArticle' => '<p><a href="http://www.fondationlou.com/images/inclusion Presse 78-16.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format P</a><a href="http://www.fondationlou.com/images/inclusion Presse 78-16.pdf">DF</a></p>

        <p>&nbsp;</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Inclusion - edition number 78 (Inclusion asbl X fragile - ex- AFRAHM)', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/Xinclusion Presse 78.pdf">Download the article in&nbsp;PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/CommuniqueDePresseEOP-FocusIRANDu15.11.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '1', 
               'dateTimeArticle' => '2015-11-12 19:31:00']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Communique de presse EOP-Focus IRAN du 15.11.2015', 
               'contenuArticle' => '<p>Communiqu&eacute; de presse d&#39;EOP suite au blocage par PAYPAL des paiements de r&eacute;servations d&eacute;s lors que celle-ci comprenanient une r&eacute;servation &agrave; la s&eacute;ance &quot;Focus Iran&quot; du jeudi 12/11 &agrave; 18:30.</p>

        <p>Les programmes de surveillance et protection de PAYPAL,&nbsp;soci&eacute;t&eacute; am&eacute;ricaine, sont configur&eacute;s pour bloquer ces transactions.</p>

        <p>Apr&egrave;s plusieurs d&eacute;lais successifs, PAYPAL a fini par d&eacute;bloquer cette situation particuli&egrave;rement g&eacute;nante pour l&#39;organisateur de THE EXTRAORDINARY FILM FESTIVAL!&nbsp;&nbsp;&nbsp;</p>

        <p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/Communiqué de presse EOP - focus IRAN.pdf" target="_blank">Charger l&#39;article au format PDF</a>.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Press release EOP-Focus IRAN of 11.15.2015', 
               'contenuArticle' => '<p>Press release after EOP account blocked by PAYPAL for the reservations when a reservation included a session &quot;Iran Focus&quot; of Thursday, 12/11 at 18:30.&nbsp;<br />
        Monitoring programs of PAYPAL, a US company, are configured to block these transactions.&nbsp;<br />
        After several successive delays, PAYPAL has unlocked this particularly annoying situation for the organizer THE EXTRAORDINARY FILM FESTIVAL!</p>

        <p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/Communiqué de presse EOP - focus IRAN.pdf" target="_blank">Download the press article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/ENMARCHE(MutualiteChretienne)-EditionDu15.10.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '17', 
               'dateTimeArticle' => '2015-11-13 10:08:30']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'EN MARCHE (Mutualite Chretienne) - edition du 15.10.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/EN MARCHE N1549.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'EN MARCHE (Christian Mutuality) - edition of 10.15.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/EN MARCHE N1549.pdf" target="_blank">Download the article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/FocusLeVif.be-EditionDu28.10.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '16', 
               'dateTimeArticle' => '2015-11-13 10:13:45']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'FocusLeVif.be-Edition du 28.10.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/FocusLeVif_be-281015.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'FocusLeVif.be-Edition of 10.28.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/FocusLeVif_be-281015.pdf" target="_blank">Download the article at PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LaDerniereHeure-EditionDu29.10.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '13', 
               'dateTimeArticle' => '2015-11-13 10:29:57']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'La Derniere Heure - edition du 29.10.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LaDerniereHeure_291015.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'La Derniere Heure - edition of 10.29.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LaDerniereHeure_291015.pdf" target="_blank">Downlaod the article at the PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LaLibreBelgiqueDu07.11.2015Pg02_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '8', 
               'dateTimeArticle' => '2015-11-13 10:38:33']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'La Libre Belgique du 07.11.2015 pg 02', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LaLibreBelgique 071115 page02.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'La Libre Belgique of 11.07.2015 pg 02', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LaLibreBelgique 071115 page02.pdf" target="_blank">Download the article at the PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LaLibreBelgique-EditionDu07.11.2015Pg54_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '7', 
               'dateTimeArticle' => '2015-11-13 10:46:20']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'La Libre Belgique - edition du 07.11.2015 pg 54', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LaLibreBelgique 071115 page54.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'La Libre Belgique - edition of 11.07.2015 pg 54', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LaLibreBelgique 071115 page54.pdf" target="_blank">Download the article in&nbsp;PDF format&nbsp;</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LaLibreBelgique-EditionDu07.11.2015Pg55_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '6', 
               'dateTimeArticle' => '2015-11-13 10:51:21']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'La Libre Belgique - edition du 07.11.2015 pg 55', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LaLibreBelgique 071115 page55.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'La Libre Belgique - edition of 11.07.2015 pg 55', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LaLibreBelgique 071115 page55.pdf" target="_blank">Download the article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LaLibreBelgique-EditionDu07.11.2015Pg58_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '5', 
               'dateTimeArticle' => '2015-11-13 10:55:58']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'La Libre Belgique - edition du 07.11.2015 pg 58', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LaLibreBelgique 071115 page58.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'La Libre Belgique - edition of 11.07.2015 pg 58', 
               'contenuArticle' => '<p><a href="http://LaLibreBelgique 071115 page58.pdf" target="_blank">Download the article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LaLibreBelgique-EditionNamurLuxembourgDu29.10.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '12', 
               'dateTimeArticle' => '2015-11-13 11:01:29']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'La Libre Belgique - edition Namur Luxembourg du 29.10.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LaLibreBelgique_NamurLuxembourg 291015.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'La Libre Belgique - edition Namur Luxembourg of 10.29.2015', 
               'contenuArticle' => '<p><a href="http://LaLibreBelgique_NamurLuxembourg 291015.pdf" target="_blank">Download the article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/L\'Avenir-EditionDu02.11.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '10', 
               'dateTimeArticle' => '2015-11-13 11:07:12']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'L\'Avenir - edition du 02.11.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LAvenir 021115.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'L\'Avenir - edition of 11.02.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LAvenir 021115.pdf" target="_blank">Download the article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/L\'Avenir.net-EditionDu28.10.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '14', 
               'dateTimeArticle' => '2015-11-13 11:12:29']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'L\'Avenir.net - edition du 28.10.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LAvenir_net 281015.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'L\'Avenir.net - edition of 10.28.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LAvenir_net 281015.pdf" target="_blank">Download the article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/Moustique-EditionDu04.11.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '9', 
               'dateTimeArticle' => '2015-11-13 11:17:20']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Moustique - edition du 04.11.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/Moustique 041115.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Moustique - edition of 11.04.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/Moustique 041115.pdf" target="_blank">Download the article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/SudPresse-EditionDu07.11.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '4', 
               'dateTimeArticle' => '2015-11-13 11:22:17']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Sud Presse - edition du 07.11.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/SudPresse 071115.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Sud Presse - edition of 11.07.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/SudPresse 071115.pdf" target="_blank">Download the article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/SudPresse-LaMeuse-EditionDu29.10.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '11', 
               'dateTimeArticle' => '2015-11-13 11:26:39']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Sud Presse - La Meuse - edition du 29.10.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/SudPresse_LaMeuse 291015.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Sud Presse - La Meuse - edition of 10.29.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/SudPresse_LaMeuse 291015.pdf" target="_blank">Download the article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/VlanNamur-EditionDu28.10.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '15', 
               'dateTimeArticle' => '2015-11-13 11:33:44']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Vlan Namur - edition du 28.10.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/Vlan Namur.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Vlan Namur - edition of 10.28.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/Vlan Namur.pdf" target="_blank">Download the article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/L\'Avenir-EditionDu13.11.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '3', 
               'dateTimeArticle' => '2015-11-13 12:02:20']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'L\'Avenir - edition du 13.11.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LAvenir 131115.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'L\'Avenir - edition of 11.13.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LAvenir 131115.pdf" target="_blank">Download the article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LeSoir-EditionDu13.11.2015_200.jpg', 
               'nomCategorieArticle' => 'Edition 2015 (Presse)', 
               'ordreArticle' => '2', 
               'dateTimeArticle' => '2015-11-13 12:07:38']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Le Soir - edition du 13.11.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LeSoir 131115.pdf" target="_blank">T&eacute;l&eacute;charger l&#39;article au format PDF</a></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Le Soir - edition of 11.13.2015', 
               'contenuArticle' => '<p><a href="http://www.eopfestival.be/bundles/eopblog/images/imagesArticles/LeSoir 131115.pdf" target="_blank">Download the article in PDF format</a></p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/ConferenceDeJosephSchovanec_200.jpg', 
               'nomCategorieArticle' => 'Evenement 2015', 
               'ordreArticle' => '2', 
               'dateTimeArticle' => '2015-10-08 15:30:24']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Conference de Joseph Schovanec', 
               'contenuArticle' => '<p>jeudi 12/11/2015&nbsp; &agrave; 20:30 (r&eacute;servation via la page tarifs et achats)</p>

        <p><em>&laquo;&nbsp;Le grand avantage, lorsque vous &ecirc;tes autiste et que vous choisissez d&rsquo;apprendre l&rsquo;&eacute;rythr&eacute;en ancien, est que vous avez un professeur pour vous tout seul&nbsp;&raquo;.</em></p>

        <p>Joseph Schovanec</p>

        <p>JOSEPH SCHOVANEC, 33 ans, est avant tout un &ecirc;tre humain affable et d&eacute;licieux. Autiste asperger, rescap&eacute; de la camisole chimique, il est depuis dix ans saltimbanque de l&#39;autisme, allant de ville en ville pour parler de la diff&eacute;rence, ainsi que pour aider ceux qui souffrent d&#39;&ecirc;tre trop normaux. Amoureux des langues et cultures, docteur en philosophie, collectionneur &eacute;m&eacute;rite et compulsif de bouteilles d&rsquo;eau en plastique de 50 cl, il se r&ecirc;ve &ecirc;tre le guide touristique de son pays, l&#39;Autistan. Il est l&rsquo;auteur des best-sellers &quot;Je suis &agrave; l&rsquo;Est&quot; (2012) et &quot;Eloge du voyage &agrave; l&#39;usage des autistes et de ceux qui ne le sont pas assez&quot; (2014), et son prochain ouvrage &quot; De l&#39;amour en Autistan&nbsp;&raquo; sortira de presse au moment du festival. Il anime enfin &nbsp;une chronique hebdomadaire sur Europe 1. Invit&eacute; r&eacute;guli&egrave;rement sur les plateaux d&rsquo;Ardisson, du &laquo; Grand Journal &raquo;, de &laquo;&nbsp;Th&eacute; ou caf&eacute;&nbsp;&raquo; et d&rsquo;ailleurs, sa simplicit&eacute;, son humour et ses mots d&rsquo;une grande intelligence font &agrave; chaque fois mouche.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Stand-up with Joseph Schovanec', 
               'contenuArticle' => '<p>Thursday 12, 8:30 PM (upon booking)</p>

        <p><em>&laquo;&nbsp;Le grand avantage, lorsque vous &ecirc;tes autiste et que vous choisissez d&rsquo;apprendre l&rsquo;&eacute;rythr&eacute;en ancien, est que vous avez un professeur pour vous tout seul&nbsp;&raquo;.</em></p>

        <p>Joseph Schovanec, 33, is first and foremost an affable and delightful person. Asperger autist, he has been a &laquo;&nbsp;saltimbanque&nbsp;&raquo; for autism for ten years. In love with languages and cultures, he is the author of &laquo;&nbsp;Je suis &agrave; l&#39;Est&nbsp;&raquo; (2012) and &laquo;&nbsp;Eloge du voyage &agrave; l&#39;usage des autistes et de ceux qui ne le sont pas assez&nbsp;&raquo; (2014). His new novel &#39;De l&#39;amour &agrave; Autistan&nbsp;&raquo; will be released during the festival. He presents a weekly chronic on Europe 1.</p>

        <p>Regularly a guest in TV shows, his simplicity, humour and his wise words always hit their target.</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/LaSoiréeDuFestival(DJRIDOOO)_200.jpg', 
               'nomCategorieArticle' => 'Evenement 2015', 
               'ordreArticle' => '4', 
               'dateTimeArticle' => '2015-10-12 11:26:51']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'La soirée du festival (DJ RIDOOO)', 
               'contenuArticle' => '<p>Samedi 14 novembre &agrave; 22h20, soir&eacute;e avec DJ Ridooo (uniquement accessible aux invit&eacute;s, membres et festivaliers munis d&#39;un pass festival).</p>

        <p><strong>NEZ POUR LA MUSIQUE.</strong></p>

        <p><strong>DJ RIDOOO</strong> <em>signes particuliers</em> : 24 ans, Li&eacute;geois, Compositeur exclusif, Arrangeur d&rsquo;exception.</p>

        <p><strong>Thibault</strong>, alias <strong>DJ RIDOOO</strong>, est passionn&eacute; de musiques &eacute;lectroniques depuis son adolescence.&nbsp; Depuis plusieurs ann&eacute;es, ce jeune fou furieux du studio hyper-personnalis&eacute;, mixe et remixe des compositions personnelles aux univers sirupeux, se baladant entre mix lounge et &eacute;lectro-pop.&nbsp;</p>

        <p>M&ecirc;me si il ne cache pas ses premiers amours pour <strong>David Guetta</strong>, il voue une admiration sans bornes pour le prodigieux <strong>DJ Tiesto</strong>.&nbsp;</p>

        <p>La musique de <strong>DJ RIDOOO</strong> lui ressemble tout simplement : g&eacute;n&eacute;reuse, subtile alchimies de sonorit&eacute;s et de m&eacute;lodies, acquises gr&acirc;ce notamment &agrave; de nombreuses rencontres et collaborations avec des DJ Li&eacute;geois, l&rsquo;Artiste propose un v&eacute;ritable voyage musical impr&eacute;gn&eacute; de couleurs et de surprises qui risque bien d&rsquo;en &eacute;tonner plus d&rsquo;un.&nbsp; Sur sa Fan Page, <strong>DADDY K</strong> postera un statut &eacute;logieux suite &agrave; une de ses prestations, saluant un artiste atypique et talentueux&hellip;</p>

        <p>Pour l&rsquo;heure, <strong>DJ RIDOOO</strong> s&rsquo;est produit &agrave; la <strong>DJ Exp</strong><strong>&eacute;</strong><strong>rience</strong> &agrave; Bruxelles, au <strong>MadCaf</strong><strong>&eacute;</strong> &agrave; Li&egrave;ge, &agrave; Paris pour l&rsquo;UNESCO dans le cadre de la <strong>Journ</strong><strong>&eacute;</strong><strong>e Mondiale de la Radio</strong>.&nbsp; Il donnait r&eacute;cemment le coup d&rsquo;envoi du <strong>Festival International du Cr</strong><strong>&eacute;</strong><strong>ahm</strong> devant un milliers de personnes au Man&egrave;ge de la Caserne Fonck &agrave; Li&egrave;ge r&eacute;coltant au passage ovations et pluie d&rsquo;articles de presse.</p>

        <p>Assur&eacute;ment, le ph&eacute;nom&egrave;ne <strong>DJ RIDOOO</strong> est en route.</p>

        <p>&nbsp;</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'The disc-jockey event', 
               'contenuArticle' => '<p>Saturdy 14, 10:20PM (only for festival guests, members, and festival attendees with a pass)</p>

        <p><strong>A NOSE FOR MUSIC</strong></p>

        <p><strong>DJ RIDOOO</strong>, 24, from Li&egrave;ge, exclusive composer, amazing arranger</p>

        <p><strong>Thibault</strong>, or&nbsp;<strong>DJ RIDOOO</strong>, has been in love with electronic music since he was a teenager. For several years, this young man mixes his own musical compositions, with a style going from lounge to electro-pop. But he never hides his first loves : David Guetta and DJ Tiesto.</p>

        <p>His music is a reflection of his personality : generous and subtle.</p>

        <p>&nbsp;</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/ConcertDUHYPNOSE(11-11-15)_200.jpg', 
               'nomCategorieArticle' => 'Evenement 2015', 
               'ordreArticle' => '3', 
               'dateTimeArticle' => '2015-10-12 11:51:53']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Concert DU HYPNOSE (11-11-15)', 
               'contenuArticle' => '<p>Mercredi 11 novembre &agrave; 22h20.</p>

        <p>V&eacute;ritable homme de sc&egrave;ne, Julien Pirlot occupe une place importante au sein du Cr&eacute;ahm de Li&egrave;ge. N&eacute; en 1980, l&rsquo;artiste fr&eacute;quente le centre de cr&eacute;ation depuis 1996. Arm&eacute; de son saxophone, il a particip&eacute; &agrave; de nombreux projets tels que &lsquo;A Bout Souffle&rsquo;, (1999/ 2010), puis &lsquo;Jazz A&rsquo; (2011). Il a &eacute;galement collabor&eacute; avec Les Filles d&rsquo;Hirohito (duo &eacute;lectro). Quand on lui demande de d&eacute;finir un duo d&rsquo;improvisation, Julien r&eacute;pond : &ldquo;L&rsquo;&eacute;coute avec mon partenaire, la complicit&eacute; pour construire ensemble un dialogue, un jeu de questions-r&eacute;ponses. Bien ma&icirc;triser l&rsquo;instrument, c&rsquo;est les doigts qui bougent simplement, un peu comme un moteur qui se d&eacute;clenche.&rdquo;</p>

        <p>Contrebassiste de jazz, Sam Gertsmans est issu d&rsquo;une famille de musiciens dans laquelle il commence le violon d&egrave;s l&rsquo;&acirc;ge de 6 ans et d&eacute;couvrira la trompette un peu plus tard. Premier prix de basse &eacute;lectrique en 2001 et de contrebasse jazz en 2003, Sam est tr&egrave;s vite sollicit&eacute; sur les sc&egrave;nes internationales, multipliant de riches et &eacute;clectiques collaborations. Il participe &agrave; plusieurs groupes de jazz, de chansons fran&ccedil;aises, de Bossa ou de Tango, mais aussi &agrave; diverses pi&egrave;ces de th&eacute;&acirc;tre (The Wild Party, Jesus Christ Superstar...). Il joue &eacute;galement sur la sc&egrave;ne internationale en Chine, Chili, Colombie, S&eacute;n&eacute;gal, Vietnam, France... et partage la sc&egrave;ne avec des musiciens tels que Philip Catherine, Rick Margitza, D&eacute;borah Brown.. L&rsquo;artiste fait aujourd&rsquo;hui partie du groupe Soledad et joue avec M&eacute;lanie De Biasio, les Violons de Bruxelles, Greg et Steve Houben, Jean-Paul Esti&eacute;venart Trio, Igor G&eacute;h&eacute;not trio, Comboio..<br />
        <br />
        Les deux artistes se sont rencontr&eacute;s pour le projet &laquo; Bin&ocirc;mes &raquo; mis sur pied &agrave; l&sup1;occasion d&sup1;un projet aux Beaux Arts de Bruxelles, en lien avec l&sup1;op&eacute;ration Cap 48, en f&eacute;vrier 2014. Le r&eacute;sultat a donn&eacute; huit titres que nous voulons vous faire partager.<br />
        &laquo; Pour nous, la musique est une langue. Le jour de notre rencontre : un caf&eacute;, quelques mots &eacute;chang&eacute;s et l&sup1;instant d&sup1;apr&egrave;s, les instruments r&eacute;sonnaient et la musique jaillissait, spontan&eacute;ment. L&sup1;improvisation libre est un terrain de jeu que nous affectionnons tous les deux, et nous l&sup1;avons pratiqu&eacute;e tout au long de nos rencontres. Afin d&sup1;affiner notre r&eacute;pertoire, nous avons partag&eacute; ce que l&sup1;on &eacute;coutait : classique, rock, jazz, tant d&sup1;&eacute;motions partag&eacute;es lors de ces moments d&sup1;&eacute;coutes priv&eacute;s, tant d&sup1;inspirations aussi ! Certains grands th&egrave;mes ressortaient, puis on les testait, un qui jouait leth&egrave;me et l&sup1;autre l&sup1;accompagnement, apr&egrave;s nous changions les r&ocirc;les ! L&sup1;exploration totale de nos instruments nous a permis d&sup1;inclure de la percussion, et puis notre voix. Un orchestre naissait, &agrave; 2 ! &raquo;</p>

        <p>Saxophone/voix: Julien Pirlot<br />
        Contrebasse/voix/bruitages: Sam Gerstmans</p>

        <p>Set de 30 minutes</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'HYPNOSE concert (11-11-15)', 
               'contenuArticle' => '<p>&nbsp;</p>

        <p>Wednesday 11, 10:20PM</p>

        <p>A natural stage performer, Julien Pirlot works with Cr&eacute;ahm. Born in 1980, the artist has been a member of this organization since its creation in 1996. With his saxophone, he joined his numerous projects such as &quot;A Bout de Souffle (1999-2010) and &quot;Jazz A&quot; (2011). He also partnered with Les Filles d&#39;Hirohito (electro duet). When asked to talk about improvisation, Julien says that &quot;Listening is my partner, as well as the complicity to build a dialogue together, a game of questions and answers. To be able to master an instrument, it is to have your fingers move naturally, just like a motor that starts.&quot;</p>

        <p>Jazz doublebassist, Sam Gertsman was born in a family of musicians. He began playing the violin at the age of 6 and will discover the trumpet a few years after. He was involved in several bands (jazz, french music, bossa and tango) as well as in plays (&quot;The Wild Party&quot;, &quot;Jesus Christ Superstar&quot;).&nbsp;Sam was quickly asked in international events, in China, Chile, Colombia, ... and has shared the stage with musicians such as Philip Catherine, Rick Margitza, D&eacute;borah Brown, ... The artist is now part of the band Soledad and plays with M&eacute;lanie De Biasio, &quot;Les Violons de Bruxelles&quot;, Greg and Steve Houben, Jean-Paul Esti&eacute;venart Trio, Igo G&eacute;h&eacute;not trio, Combio, ...</p>

        <p>The two artists met during the project &quot;Bin&ocirc;mes&quot;, created by the Beaux Arts Academy of Brussels, with CAP48, in February of 2014. The result of this project are eight songs that will be shown to you during this event.</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/ConcertDeLaColonieMusicale_200.jpg', 
               'nomCategorieArticle' => 'Evenement 2015', 
               'ordreArticle' => '9', 
               'dateTimeArticle' => '2015-10-16 02:58:13']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Concert de la Colonie musicale', 
               'contenuArticle' => '<p>Mercredi 11/11 &agrave; 12h55 :</p>

        <p>La Colonnie Musicale est compos&eacute;e de sept musiciens aveugles et malvoyants qui fr&eacute;quentent le centre de jour &laquo; Le Phare &raquo; &agrave; l&rsquo; I.R.S.A. Si les rythmes qu&rsquo;ils proposent sont souvent issus des folklores cubains et africains, leur interpr&eacute;tation est le fruit des diff&eacute;rentes improvisations et de la cr&eacute;ativit&eacute; des percussionnistes de la Colonie Musicale. Pour le festival, ce sont quatre chanteurs et trois percussionnistes qui r&eacute;galeront vos oreilles.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => '"Colonnie musicale" concert', 
               'contenuArticle' => '<p>Wednesday 11, 12:55PM :</p>

        <p>The &quot;Colonie Musicale&quot; is a group of seven blind or partially-sighter musicians who attend the day centre &quot;Le Phare&quot; at I.R.S.A. If the rythms they plays are often inspired by cuban and african folklore, their interpretation is the result of their different improvisations and the vivid creativity of their percussionist. For the festival, four singers and three percussionists will dazzle your ears.&nbsp;</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/CycloDanseLeRoseauVert_200.jpg', 
               'nomCategorieArticle' => 'Evenement 2015', 
               'ordreArticle' => '8', 
               'dateTimeArticle' => '2015-10-16 03:01:31']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Cyclo danse Le Roseau Vert', 
               'contenuArticle' => '<p>Vendredi 13/11 &agrave; 13h30 :</p>

        <p>Le cyclo danse&nbsp;! Comment &ccedil;a marche&nbsp;? D&eacute;j&agrave; &ccedil;a ne marche pas&hellip; &ccedil;a roule&nbsp;! Au sein de l&rsquo;institution &laquo;&nbsp;Le Roseau vert&nbsp;&raquo;, on danse avec les fauteuils roulants. Lors du festival, trois jeunes, accompagn&eacute;s de leur &eacute;ducatrice, vous proposeront une d&eacute;monstration de cyclo danse. Leur fauteuil &eacute;tant leur seul partenaire, ils vous d&eacute;montreront qu&rsquo;il est possible de faire quelques pas&hellip; ou plut&ocirc;t quelques tours sur la piste de danse.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => '1444964491', 
               'contenuArticle' => '<p>Friday 11, 1:30PM</p>

        <p>The cyclo dances! How? It rolls! At &quot;Le Roseau vert&quot;, we dance with wheelchairs. During the festival, three teenagers, assisted by their educator, will offer you a demonstration of &quot;cyclo danse&quot;. Their chair being their only partner, they will demonstrate that it is possible to take some steps... or rounds... on the dance floor.</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/ConcertDeChristoffEilers_200.jpg', 
               'nomCategorieArticle' => 'Evenement 2015', 
               'ordreArticle' => '7', 
               'dateTimeArticle' => '2015-10-16 03:17:47']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Concert de Christoff Eilers', 
               'contenuArticle' => '<p>13/11 &agrave; 17h45 : Christoff Eilers, non voyant et grand amateur de rock et de chanson fran&ccedil;aise, vous proposera de d&eacute;couvrir son univers musical. Lors du festival, accompagn&eacute; de son instrument de pr&eacute;dilection, il vous interpr&eacute;tera quelques morceaux de son r&eacute;pertoire en fran&ccedil;ais et en anglais. Laissez-vous transporter par cette voix qui vous emm&egrave;nera au pays des &eacute;motions.</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Christoff Eilers concert', 
               'contenuArticle' => '<p>Friday 13, 5:45PM</p>

        <p>Christoff Eilers, blind and big rock and french music fan, will let you in his musical universe. During the festival, accompanied by his favourite instrument, he will perform some pieces from his repertoire, in french and in english. Let yourself be carried away by this wonderful voice.</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/ShowDeMagie(LaRamure)_200.jpg', 
               'nomCategorieArticle' => 'Evenement 2015', 
               'ordreArticle' => '6', 
               'dateTimeArticle' => '2015-10-16 03:21:40']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Show de Magie (La Ramure)', 
               'contenuArticle' => '<p>14/11 &agrave; 13h10 :</p>

        <p>Les r&eacute;sidents de l&rsquo;institution &laquo;&nbsp;La Ramure&nbsp;&raquo;, porteurs d&rsquo;une d&eacute;ficience mentale, vont vous transporter dans le monde de la magie. Apparitions, disparition, transformation, manipulation et utilisation du feu seront au menu de leur spectacle. Illusion ou r&eacute;alit&eacute;&nbsp;? Savez-vous garder un secret&nbsp;?! Chuut&nbsp;! Le secret sera bien gard&eacute; par ces apprentis magiciens&nbsp;!</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Magic Show (la Ramure)', 
               'contenuArticle' => '<p>Saturday 14, 1:10PM</p>

        <p>The mentally disabled&nbsp;residents of the organization &quot;La Ramure&quot;, will carry you into a world of magic. On the menu:&nbsp;Appearances, &nbsp;disappearances, transformation, manipulation et fire works! Illusion or reality? Can you keep a secret? Shh! The secret will be well kept by these apprentice magicians!</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/ConcertDeJessicaVanHooren_200.jpg', 
               'nomCategorieArticle' => 'Evenement 2015', 
               'ordreArticle' => '5', 
               'dateTimeArticle' => '2015-10-16 03:31:45']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => 'Concert de Jessica van Hooren', 
               'contenuArticle' => '<p>15/11 &agrave; 13h05 :</p>

        <p>Jessica est une jeune chanteuse, aveugle de naissance. La musique est au bout de ses doigts depuis ses quatre ans. Elle est amatrice de com&eacute;dies musicales et actrice &agrave; ses heures perdues. Jessica a d&eacute;j&agrave; interpr&eacute;t&eacute; diff&eacute;rents r&ocirc;les dans des spectacles. Elle nous proposera lors du festival quelques chansons de son r&eacute;pertoire en fran&ccedil;ais et en anglais. Une voix en or &agrave; d&eacute;couvrir&nbsp;!</p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => 'Jessica van Hooren concert', 
               'contenuArticle' => '<p>Sunday 15, 1:05PM</p>

        <p>Jessica is a young singer, born blind. The music has been&nbsp;at her fingertips since she was four. She loves musicals and acting. Jessica has already&nbsp;</p>']);






        $id = DB::table('Article')
           ->insertGetId([
               'urlImageArticle' => 'articles/1497528658_200.jpg', 
               'nomCategorieArticle' => 'Evenement 2015', 
               'ordreArticle' => '1', 
               'dateTimeArticle' => '2017-06-15 12:10:58']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'fr', 
               'titreArticle' => '1497528658', 
               'contenuArticle' => '<p></p>']);

        DB::table('ArticleTraduction')
           ->insert([
               'idArticle' => $id, 
               'initialLangue' => 'en', 
               'titreArticle' => '1497528658', 
               'contenuArticle' => '<p></p>']);
        
        
        
        
        
        
        
        // FILM
        /*
        SELECT concat("
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
if (DB::table('Realisateur')->where('nomRealisateur','",REPLACE(realisateur.nom,'\'','\\\''),"')->count() > 0) {
    $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','",REPLACE(realisateur.nom,'\'','\\\''),"')->get()->first()->idRealisateur;
    echo \"idRealisateur = \".$idRealisateur.\"\n\r\";
    if (DB::table('Metrage')->where('initialMetrage','",REPLACE(film.categorieFilm,'\'','\\\''),"')->count() > 0) {
        $initialMetrage = DB::table('Metrage')->where('initialMetrage','",REPLACE(film.categorieFilm,'\'','\\\''),"')->get()->first()->initialMetrage;
        echo \"initialMetrage = \".$initialMetrage.\"\n\r\";
                
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => '",REPLACE(image.url,'\'','\\\''),"', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '",film.anneeProduction,"', 
                        'interdictionAge' => '",film.interdit,"', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => ",film.duree,", 
                        'boiteProduction' => '",REPLACE(film.production,'\'','\\\''),"']); 
                
                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '",film.lienYoutube,"', 
                        'nomFilm' => '",REPLACE(film.nom,'\'','\\\''),"', 
                        'resumeFilm' => '",REPLACE(film.resumeFr,'\'','\\\''),"']);   
                
                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '",film.lienYoutube,"', 
                        'nomFilm' => '",REPLACE(film.nom,'\'','\\\''),"', 
                        'resumeFilm' => '",REPLACE(film.resumeEn,'\'','\\\''),"']);
              
              // ",film.paysFr,"
              // ",film.genreFr,"  
                
            } else {
                echo \"error : metrage '",REPLACE(film.categorieFilm,'\'','\\\''),"' non trouvé\".\"\n\r\";
            }
        } else {
            echo \"error : realisateur '",REPLACE(realisateur.nom,'\'','\\\''),"' non trouvé\".\"\n\r\";
        }              
") from film, image, realisateur where image.id = film.affiche_id and realisateur.id = film.realisateur_id;
        */
        
        
        
        
        if (DB::table('Realisateur')->where('nomRealisateur','Catherine Van Campen')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Catherine Van Campen')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/AnneVliegt_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 21, 
                        'boiteProduction' => 'Zuiderwind productions']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/bw_VmbQT5d8', 
                        'nomFilm' => 'Anne Vliegt', 
                        'resumeFilm' => '<p>Anne est une jolie jeune fille de onze ans. Lorsque vous l’apercevez, vous ne pouvez plus la quitter des yeux, non pas tant pour sa beauté que pour son comportement parfois étrange. Anne souffre du Syndrome de Gilles de La Tourette qui entraine des mouvements obsessionnels compulsifs que l’on appelle les « tocs ». Si Anne essaye de mettre ses tocs en échec, bien que ce ne soit pas facile, elle préfère souvent \'voler\', se cacher en hauteur pour pas qu’on la voie et la prive de ses tocs qu’elle revendique comme étant une part d’elle-même. </p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/bw_VmbQT5d8', 
                        'nomFilm' => 'Anne Vliegt', 
                        'resumeFilm' => '<p>Anne is a good looking young girl aged 11 yrs old. When you see her you cannot stop looking at her not so much for her beauty rather for her weird behaviour. Anne suffers from the Syndrom of Gilles de La Tourette which causes regular movements of the body called « tocs ». Anne tries to challenge her tocs, although does not fin dit easy, she often prefers to \'fly\', and hide for not being seen because she considers her tocs as a part of herself.</p>']);
                
                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'NL', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);
                
            } else {
                echo "error : metrage 'CM' non trouvé"."
                 ";
            }
        } else {
            echo "error : realisateur 'Catherine Van Campen' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Natacha Calestrémé')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Natacha Calestrémé')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/AutismeL\'espoir_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 52, 
                        'boiteProduction' => 'Mona Lisa production']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/L68WMcwPZo4', 
                        'nomFilm' => 'Autisme l\'espoir', 
                        'resumeFilm' => '<p>Aymeric est un enfant au comportement étrange. Il semble ignorer ses parents, il manifeste de grosses colères, ne parle pas et ne s\'intéresse qu\'à la machine à laver qui tourne. Il a 3 ans et demi lorsqu\'enfin, ses parents apprennent qu\'il est atteint d\'autisme sévère. Aux dires des professionnels, il ne parlera jamais, il n\'ira pas à l\'école, il ne vivra pas parmi les autres.</p><p>Pour aider leur enfant, ses parents vont s\'informer à l\'étranger et se former aux thérapies comportementales. Grâce à 8 ans d\'archives, nous suivons l\'apprentissage insoupçonnable de cet enfant, qui, à l\'âge de dix ans, parle, écrit, suit un CM1 dans une école ordinaire et fait partager sa joie de vivre. Aymeric, c\'est l\'histoire incroyable d\'un enfant que l\'on pensait perdu et qui donne un espoir à tous les autres. </p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/L68WMcwPZo4', 
                        'nomFilm' => 'Autisme l\'espoir', 
                        'resumeFilm' => '<p>Aymeric is a child with a strange behavoir. He seems to ignore his parents, gets into severe angers, does not speak and seems to be only interested by the washing machine. He is 4 and a half years old, when his parents learn that he is suffering from severe autism. Professionnals doctors seem to say he will never be able to speak , would never attend school and would never be able to live in a community.</p><p>To help him, his parents travel abroad and get trained in behavioural therapies. Thanks to 8 years of achives, we are now able to follow, the learning curve of a child who at 10 years old, speaks, writes, attend a Grad 4 class in a normal school and communicates his love of life. Aymeric, is the incredible story of a child who was thought to bel ost and instead gives hope to everyone else.</p>']);
                
                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);
                
            } else {
                echo "error : metrage 'LM' non trouvé"."
                 ";
            }
        } else {
            echo "error : realisateur 'Natacha Calestrémé' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Leendert Pot et Anja Hiddinga')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Leendert Pot et Anja Hiddinga')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/Bewogen_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2007', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 18, 
                        'boiteProduction' => 'Stilchting Geelprodukt (production)']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/k3gIS-llVnY', 
                        'nomFilm' => 'Bewogen', 
                        'resumeFilm' => '<p>Avec les poètes sourds Wim Emmerik et Giselle Meyer, les réalisateurs Leendert Pot et Anja Hiddinga ont réalisé cinq courts métrages novateurs, présentant la puissance visuelle et poétique de la langue des signes. Dans chacun d’eux, le rythme visuel, la répétition, le grand angle ou les gros plans forment une dynamique complémentaire à la narration de ces poèmes. 3 de ces 5 poèmes sont présentés au festival EOP ! :<ol><li>« Le reflet » est un poème sur l’amour qui nous présente une introspection imaginaire du poète dans un mise en scène avec des miroirs. Poème de W. Emmerik</li> <li>« Polder » est un hymne à l\'amour du poète Flevoland pour l\'étendue et les lignes du paysage des polders. Poème par W. Emmerik</li> <li>« Strand » est un poème sur l’identité. Il est filmé en un plan séquence où nait une chorégraphie entre la caméra et la lectrice de ce poème.&nbsp; Poème par G. Meyer.</li></ol>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/k3gIS-llVnY', 
                        'nomFilm' => 'Bewogen', 
                        'resumeFilm' => '<p>With deaf peots Wim Emmerik and Giselle Meyer, Directors Leendert Pot and Anja Hiddinga produced five innovative short films presenting the powerful visual and poetic strength of the signs language. In each short films the visual rythm, the repetition, the great angle or the focus dynamically complement the narration of the poems. Three of these five pomes are presented at EOP ! :<br>1.&nbsp;&nbsp;&nbsp; « Le reflet » is a love poem about the imaginary introspection&nbsp; of the poet with mirrors. Poème de W. Emmerik<br>2.&nbsp;&nbsp;&nbsp; « Polder »&nbsp; is an&nbsp; hymn to love with poem from W. Emmerik<br>3.&nbsp;&nbsp;&nbsp; « Strand » is a poem on identity. It is filmed like a choreography between the camera and the reader of the poem. Poem by G. Meyer.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'NL', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
             ";
            }
        } else {
            echo "error : realisateur 'Leendert Pot et Anja Hiddinga' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Juraj Lehotsky')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Juraj Lehotsky')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/BlindLoves_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2008', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 77, 
                        'boiteProduction' => 'Artileria Production']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/327glLCcB7Q', 
                        'nomFilm' => 'Blind Loves', 
                        'resumeFilm' => '<p>Peter, Miro, Elena, Zuzana : quatre histoires d\'amour d\'amants aveugles à mi chemin entre le documentaire et la fiction, mettant en scène des personnages aveugles, interprétés par des comédiens qui le sont eux-mêmes.</p><p>Des histoires pleines de sensibilité à mille lieues de tout pathos et où l’humour est parfois relevé d’une pointe de cruauté face au décalage entre le quotidien des non-voyants et le monde des voyants. </p><p>Ce film slovaque a reçu le prix CICAE à la quinzaine des réalisateurs à Cannes en 2008.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/327glLCcB7Q', 
                        'nomFilm' => 'Blind Loves', 
                        'resumeFilm' => '<p>Peter, Miro, Elena, Zuzana : four love stories of four blind lovers. Half documentary – half fiction  the film presents real blind actors. The stories are very sensitive, with great humour and a zeste of cruelty due to the delay between the daily life of blind and non–blind persons. This slovak films received the CICAE prize at the Directors Selection at Cannes Festival in 2008.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'SK', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);

            } else {
                echo "error : metrage 'LM' non trouvé"."
             ";
            }
        } else {
            echo "error : realisateur 'Juraj Lehotsky' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Lloyd Newson')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Lloyd Newson')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','MM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','MM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/DV8,TheCostOfLiving_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2006', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 34, 
                        'boiteProduction' => 'DV8 theater ']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/iR7kAGgxXS0', 
                        'nomFilm' => 'DV8, the cost of living', 
                        'resumeFilm' => '<p>David et Eddie font un spectacle de rue dans une ville au bord de la mer. « Le Coût de la vie » les suit dans leur travail, leur discussion ou la drague. Si Eddie est dans la norme, Dave quant à lui n’a pas de jambes. Ce film pose la question de notre propre estime et de notre rapport avec les autres de manière éblouissante, dans un mélange mariant fiction et chorégraphie.</p> <p>« Le Coût de la vie » est le quatrième film produit par le Théâtre DV8. Les chorégraphies et la mise en scène ont été réalisés par le metteur en scène Lloyd Newson. La compagnie théâtrale DV8 est réputée pour ses prises de risque tant au niveau esthétique qu’en terme de sujets abordés, mais sans prétention aucune.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/iR7kAGgxXS0', 
                        'nomFilm' => 'DV8, the cost of living', 
                        'resumeFilm' => '<p>David and Eddie are street actors in a small city on the seaside. « The Cost of Life » follows them in their job, their conversations, and their flirts. Eddie is in the norm, but Dave does not have legs. This film questions our pride and our relationship with other persons in a mix of fiction and choreography.  </p><p>« The Cost of Life » is the fourth film produced by Theatre DV8. The choreographies were produced by director Lloyd Newson. The theater company DV8 is famous for its esthetic as well subject oriented.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
                
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 2]);

            } else {
                echo "error : metrage 'MM' non trouvé"."
             ";
            }
        } else {
            echo "error : realisateur 'Lloyd Newson' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Geoffrey Enthoven')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Geoffrey Enthoven')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/HastaLaVista_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '12', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 115, 
                        'boiteProduction' => 'Fobic film (production)']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/zd0g69y66Y8', 
                        'nomFilm' => 'Hasta la Vista', 
                        'resumeFilm' => '<p>Trois jeunes dans la vingtaine aiment le vin et les femmes, mais ils sont encore vierges. Ils dégustent le premier avec plaisir mais n\'ont pas encore pu goûter aux secondes. Sous prétexte d\'effectuer un voyage de dégustation, ils partent tous trois vers l\'Espagne dans l\'espoir d\'y avoir leur première expérience sexuelle. Rien ne les arrêtera. Pas même leurs handicaps : l\'un est aveugle, l\'autre est confiné sur une chaise roulante et le troisième est complètement paralysé. « Hasta la Vista » est sans aucun doute « Le » film belge de l’année, non seulement récompensé dans de nombreux festivals de par le monde, mais aussi plébiscité par le public.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/zd0g69y66Y8', 
                        'nomFilm' => 'Hasta la Vista', 
                        'resumeFilm' => '<p>Three yong men like wine and women but are still bachelors. They enjoy wine but have not yet traied women. Taking a chance with a WIne Tasting trip they travel to Spain hoping to experience their first sexual experience. Nothing will stop them. Not even their handicaps : one is blind, one is physically challenged, and the third is completely paralysed.   « Hasta la Vista » is most likely the belgian film of the year, not only prized in many festivals but also acclaimed by the public. </p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'BE', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);

            } else {
                echo "error : metrage 'LM' non trouvé"."
             ";
            }
        } else {
            echo "error : realisateur 'Geoffrey Enthoven' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Henri Poulain')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Henri Poulain')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/J\'enCroisPasMesYeux_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 8, 
                        'boiteProduction' => 'Les Raconteurs']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.dailymotion.com/embed/video/xf3yqd', 
                        'nomFilm' => 'J\'en crois pas mes yeux', 
                        'resumeFilm' => '<p>Qui ne s\'est jamais senti mal à l’aise en ne sachant comment réagir face à une personne handicapée ? Vous savez, ces pseudo "gaffes", du genre : Oh, mon dieu, j\'ai dit "ça saute aux yeux" à un aveugle... </p><p>A partir de situations réelles et cocasses issues du handicap visuel, l’association « Les Raconteurs » nous démontrent au travers d’une première série de 12 vidéos de 90’ qu’il est à la fois possible de se distraire et d’apprendre. 6 clips issus de cette première série seront projetés lors du festival.</p><p>A partir de situations réelles et cocasses issues du handicap visuel, l’association « Les Raconteurs » nous démontrent au travers d’une première série de 12 vidéos de 90’ qu’il est à la fois possible de se distraire et d’apprendre. 6 clips issus de cette première série seront projetés lors du festival.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.dailymotion.com/embed/video/xf3yqd', 
                        'nomFilm' => 'J\'en crois pas mes yeux', 
                        'resumeFilm' => '<p>Who can claim to ever have felt embarassed with a handicaped person ?  You know, those type of wrong-doings or expression such , Yes sure I can see that in front  of a blind person.... </p><p>And what about laughing at it instead of talking about it ? That is exactly what « Les Raconteurs » is about: entertain and learn.</p><p>The idea : Jérome Adam worked in the corporate world for 5 years and developed Web accessibility. In 2005 he then created Easylife Conseil. He is blind since he was 15 years old, and also authored the book « To manage differences ».</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 4]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
             ";
            }
        } else {
            echo "error : realisateur 'Henri Poulain' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Nicolas Favreau')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Nicolas Favreau')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','MM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','MM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/L\'épreuveDesMots_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 26, 
                        'boiteProduction' => 'L\'arche France']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/AIE75u3sKY4', 
                        'nomFilm' => 'L\'épreuve des mots', 
                        'resumeFilm' => '<p>Une mise en lumière de personnes ayant une déficience intellectuelle, voilà ce que propose Nicolas Favreau dans ce film épuré. Entre la justesse des questions posées par Anne Chabert d’Hières et le respect des silences - le temps d’élaborer sa pensée -, nous parcourrons avec ces hommes et ces femmes qui se sont portés volontaires, les grands sujets de notre société : amour, travail, argent, politique...</p><p>Leur sincérité en vient à révolutionner tout simplement l’idée que l’on se fait du handicap, de la vie, du monde ! Et si la déficience était aussi une question de point de vue ?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/AIE75u3sKY4', 
                        'nomFilm' => 'L\'épreuve des mots', 
                        'resumeFilm' => '<p>In this film by Nicolas Favreau, light is being shed on persons with intellectual deficiencies. Adequate questions are being asked by Anne Chabert d’Hières and silence is respected as a time to prepared thoughts -, and we can follow men and women who voluntarily contribute to put present mundane aspects of life : love, work, money, politics ... Their sincerity revolutionizes the idea we may have on handicap, on life, on the world! And if deficiency was only a matter of perspective? </p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
                
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);

            } else {
                echo "error : metrage 'MM' non trouvé"."
             ";
            }
        } else {
            echo "error : realisateur 'Nicolas Favreau' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jaco Van Dormael')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jaco Van Dormael')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','Clip')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','Clip')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/LeBaiser_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '1995', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 1, 
                        'boiteProduction' => 'Cinétévé Distribution']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/cXz_TNZAVFk', 
                        'nomFilm' => 'Le baiser', 
                        'resumeFilm' => '<p>« Lumière et compagnie » est un ensemble de films documentaires tourné pour célébrer le centenaire de l\'histoire du cinéma. Le concept fut présenté au 46e Festival de Berlin en 1995. Ces films ont été réalisé par 41 réalisateurs qui dûrent respecter quatre règles : utiliser le cinématographe original des frères Lumière, ne pas excéder 52 secondes, pas de sons synchronisés et pas plus de trois prises. </p><p>Invité à réaliser l’un de ces courts métrages, le réalisateur belge, Jaco Van Dormael a choisi de mettre en scène « le baiser ».</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/cXz_TNZAVFk', 
                        'nomFilm' => 'Le baiser', 
                        'resumeFilm' => '<p>« Lumière et compagnie » is a collection of documentaries aimed at celebrating the history of cinema. The concept was prsented at the 46th Edition of hte Berlim Film Festival in 1995. These films were produced by 41 directors who had to follow strict production rules: to use the brother Lumieres cinematographe; not to exceed 52 seconds, do not use synchronized sounds, and only have 3 shots. Amongst them Belgian Director Jaco Van Dormael who was invited to contribute and produced « le baiser » (The Kiss).</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
                
                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'BE', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 3]);

            } else {
                echo "error : metrage 'Clip' non trouvé"."
             ";
            }
        } else {
            echo "error : realisateur 'Jaco Van Dormael' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Sébastien Petit')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Sébastien Petit')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/Luneville(CarteblancheAuFestivalDes"Pom\'sD\'or")_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 9, 
                        'boiteProduction' => 'Boite Noire Productions']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.pomsdor.be/fr/videos/#player_video', 
                        'nomFilm' => 'Luneville (Carte blanche au festival des «Pom\'s d\'Or»)', 
                        'resumeFilm' => '<p>A la façon des films muets du début du 20ème siècle et avec un brin de surréalisme à la belge, ce film nous narre les aventures d’une expédition lunaire pleine de promesse, jusqu’à ce que se pose la problématique d’une cohabitation avec des êtres différents : les luniens.</p><p><u>Le festival des « Pom’s d’Or » :</u> Le Festival International des Pom\'s d\'Or est un des plus anciens festivals sur la thématique du handicap. Il vient de clôturer sa dixième édition. Sa particularité réside dans le fait que les films proposés ont tous été réalisés par des institutions de personnes handicapées et leurs membres. Un partenariat entre le festival « EOP ! » et «les « Pom’s d’Or » était donc tout naturel, chacun ayant ses spécificités.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.pomsdor.be/fr/videos/#player_video', 
                        'nomFilm' => 'Luneville (Carte blanche au festival des «Pom\'s d\'Or»)', 
                        'resumeFilm' => '<p>Likewise movies of the early XXth century and with a bit of belgian surrealism , this film presents the adventure of a lunar experience which turns challenging when faced with living with different beings : lunar beings. </p><p>Festival International Pom\'s d\'Or is one of the oldest festivals focused on handicap. It just closed its 10th Edition. Its peculiarity lays on the fact that all selected films are produced by institutions involved with handicaped persons and their members. A partnership between « EOP ! » and « Pom’s d’Or » was then obvious. </p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'BE', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
             ";
            }
        } else {
            echo "error : realisateur 'Sébastien Petit' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Bernadette Saint-Rémi et Veronique Fievet')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Bernadette Saint-Rémi et Veronique Fievet')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','MM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','MM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/L\'hommeQuiNeVoulaitPasêtreFou_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 52, 
                        'boiteProduction' => 'Luna Blue Film']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/t6dSkKiqA7w', 
                        'nomFilm' => 'L\'homme qui ne voulait pas être fou', 
                        'resumeFilm' => '<p>Pourquoi un homme tient-il debout? Parce qu\'il marche, aime, espère, écrit… Sinon il tombe! Patrice rêve d\'une vie différente, rangée, avec un travail, une femme, des enfants. Cette vie, il la sait pourtant inaccessible, lui qui se reconnaît schizophrène chronique, stabilisé.</p><p>Alors entre la folie qui l\'éloigne de cette vie et la normalité qui l\'attire tant, Patrice se déchire, depuis 30 ans. L\'amour et la mort l\'ont entraîné de la rue à l\'asile, d\'hébergements provisoires en institutions thérapeutiques. Une vie d\'errance, avec comme boussole un hypothétique voyage au Brésil. Pourtant, il est debout. Emouvant dans la franchise et la confiance totale qu\'il accorde. Un fou? Non, un poète!</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/t6dSkKiqA7w', 
                        'nomFilm' => 'L\'homme qui ne voulait pas être fou', 
                        'resumeFilm' => '<p>Why do human stand ? Because s/he walks, loves, hopes, writes..... Otherwise s/he would fall down! Patrice dreams of a different kind of life, with a job, a wife, and children. That type of life  is not accessible for him, as he is  a chronic schizophrenic.  For the past 30 years Patrice swings between his un-wellness that distances him from the normality of this life that attracts him, and normality. </p><p>Love and death have brought him from life in the streets to the secluded environment of the hospital, temporary shelters and therapeutic institutions. The life of a nomad with a compass directed to a hypothetic travel to Brazil. Still Patrice is still standing. Is he crazy? Sure not, but a poet ! </p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'BE', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);

            } else {
                echo "error : metrage 'MM' non trouvé"."
             ";
            }
        } else {
            echo "error : realisateur 'Bernadette Saint-Rémi et Veronique Fievet' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Chung Yoon-Chul')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Chung Yoon-Chul')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/Marathon_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2005', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 117, 
                        'boiteProduction' => 'One plus one']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.dailymotion.com/embed/video/x8tbkc', 
                        'nomFilm' => 'Marathon', 
                        'resumeFilm' => '<p>« Marathon » raconte l’histoire vraie d\'un jeune autiste coréen passionné par les zèbres, les chocolats et la course à pied. C’est l’histoire aussi d’une mère qui se bat corps et âme pour lui trouver une place dans la société, et qui pense tenir la solution en découvrant la passion de son fils pour le Marathon. </p><p>La force de ce témoignage réside dans le caractère simple et accessible de l\'histoire de ce jeune homme qui, loin d\'accomplir des miracles, obtient des victoires retentissantes dans sa vie de tous les jours. Loin des clichés inhérents à l\'autisme, ce garçon n\'a pas de don hors du commun ou de pouvoirs quasi surnaturels, simplement la volonté de vivre sa vie.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.dailymotion.com/embed/video/x8tbkc', 
                        'nomFilm' => 'Marathon', 
                        'resumeFilm' => '<p> « Marathon » is the real story of a corean autist with a passion for zebra, chocolat and marathon. It also is the sotry of a mother ;s struggle to find him a spot in the society and who thinks of having found the solution with her son’s pasison for marathons.</p><p>This films tells the simple story of this young man who  does not realise miracles but gets daily victories. His simple wish to live his life is his strength. </p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'KR', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);
                
            } else {
                echo "error : metrage 'LM' non trouvé"."
             ";
            }
        } else {
            echo "error : realisateur 'Chung Yoon-Chul' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jean-Luc Slock et 36 enfants')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jean-Luc Slock et 36 enfants')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/Max,EntreCielEtTerre_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2004', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 9, 
                        'boiteProduction' => 'Camera etc. production']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/ggab7kqxEqg', 
                        'nomFilm' => 'Max, entre ciel et terre', 
                        'resumeFilm' => '<p>Max n’est pas un petit garçon comme les autres. Il vit à l’envers, les pieds au plafond, attiré par le ciel. Guidé par sa sœur Justine, il se rend pour la première fois à l’école. Sa présence suscite la curiosité des élèves, mais aussi les moqueries. Max se sent rapidement exclu : il ne peut lire ce que l’instituteur écrit au tableau et ne peut participer aux activités scolaires (…).</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/ggab7kqxEqg', 
                        'nomFilm' => 'Max, entre ciel et terre', 
                        'resumeFilm' => '<p>Max is not a young boy like others. He lives upside down his feet on the ceiling attracted by the sky. Guided by his sister Justine, he goes tos chool for the first time. His presence is a curiosity for other children. But it is also a topic of gossip. Max quickly feels excluded: he cannot read what the teacher writes on the board, and cannot participated inthe activities (…).</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'BE', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);
                
            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Jean-Luc Slock et 36 enfants' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Frédéric Philibert')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Frédéric Philibert')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                       'urlImageFilm' => 'films/PetitFrèreDeLaLune_200.jpg', 
                       'idRealisateur' => $idRealisateur, 
                       'anneeProduction' => '2007', 
                       'interdictionAge' => '', 
                       'initialMetrage' => $initialMetrage, 
                       'dureeMinuteFilm' => 6, 
                       'boiteProduction' => 'Sacrebleu production (production)']); 

               DB::table('FilmTraduction')
                    ->insertGetId([
                       'idFilm' => $id, 
                       'initialLangue' => 'fr', 
                       'lienVideo' => 'http://www.youtube.com/embed/HLKwpjI7XZM', 
                       'nomFilm' => 'Petit frère de la lune', 
                       'resumeFilm' => '<p>Une petite fille essaie de nous faire comprendre pourquoi son petit fr&egrave;re (autiste) n&rsquo;est pas vraiment comme les autres enfants. Au travers de sa compr&eacute;hension des faits non d&eacute;nu&eacute;e d&rsquo;humour, elle nous donne un t&eacute;moignage tr&egrave;s juste de ce que peut &ecirc;tre la r&eacute;alit&eacute; d&rsquo;une famille ayant un enfant autiste en son sein.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                       'idFilm' => $id, 
                       'initialLangue' => 'en', 
                       'lienVideo' => 'http://www.youtube.com/embed/HLKwpjI7XZM', 
                       'nomFilm' => 'Petit frère de la lune', 
                       'resumeFilm' => '<p>A young girl is trying to make us understand why her brother ( autist) is not really like other boys. Through her own understanding and certainly with a lot of humour, the girl is giving us a real experience of what the reality of a family with an &ldquo; autist&rdquo; member is.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);

           } else {
               echo "error : metrage 'CM' non trouvé"."
            ";
           }
       } else {
           echo "error : realisateur 'Frédéric Philibert' non trouvé"."
            ";
       }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Alexandra Codina')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Alexandra Codina')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/Monica&David_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 68, 
                        'boiteProduction' => 'Cinemia']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/-0HZ2FFsTII', 
                        'nomFilm' => 'Monica & David', 
                        'resumeFilm' => '<p>« Monica et David » nous raconte le mariage de deux jeunes adultes porteurs du Syndrome de Down, et celle de leur famille qui s\'efforce de soutenir ce projet en apparence inconcevable car complexe. Malgré la réalité et la  perception propre aux personnes porteuses de la Trisomie 21,  Monica et David sont conscients de leur besoin d\'aide. </p><p>Le projet leur permet de démontrer leurs capacités, au-delà des espérances. Dans le portrait de l\'amour béat de ce couple, apparait aussi ceux de deux mères qui ont lutté toute leur vie contre un monde intolérant et qui réalisent ainsi un rêve, tout en étant conscientes de la fragilité de l’avenir de leur enfant.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/-0HZ2FFsTII', 
                        'nomFilm' => 'Monica & David', 
                        'resumeFilm' => '<p>« Monica et David » is the story of the marriage of two Down Syndrom adults and of their families who are trying to support this project seemingly unbelievable and complex. In spite of the reality and the perception Down Syndrom persons have,  Monica et David are aware of their need for support. The project is an opportunity to display their capacities beyond hopes. In the face of love of this two persons, it is also the realisation of the dreams of two mothers who have struggled all their life against  an intolerant world yet with a sense of acknowledgement of the fragility of the future for their children.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
                                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Alexandra Codina' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Niko Von Glasow')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Niko Von Glasow')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/Nobody\'sPerfect_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2008', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 87, 
                        'boiteProduction' => 'Autlookfilm production']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/uWd5nGhKQD0', 
                        'nomFilm' => 'Nobody\'s perfect', 
                        'resumeFilm' => '<p>Le réalisateur Niko von Glasow, dont les bras courts l\'identifient comme un adulte "Thalidomide", cherche onze autres personnes affectées par ce médicament pour les convaincre de poser nu dans un livre de photographies. </p><p>Avec l\'humour et une légèreté surprenante, « Nobody’s Perfect » nous fait le portrait de douze personnages extraordinaires, de l\'enfance à aujourd\'hui, de la gêne et la pudeur face à leur corps, à leur capacité à le regarder dans une nouvelle lumière, au travers du prisme de cette formidable expérience. Un film jubilatoire.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/uWd5nGhKQD0', 
                        'nomFilm' => 'Nobody\'s perfect', 
                        'resumeFilm' => '<p>Director Niko von Glasow, has short arms and is labelled "Thalidomide". He is looking for other 11 persons affected by this medicine to convince them to pose naked in a photography book. « Nobody’s Perfect » presents twelve extraordinary characters from their childhood to adulthood wioth the shame for their bodies and their capacity to look at their body with a different light. </p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'DE', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);

            } else {
                echo "error : metrage 'LM' non trouvé"."
             ";
            }
        } else {
            echo "error : realisateur 'Niko Von Glasow' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Anthony DiSalvo')->count() > 0) {
           $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Anthony DiSalvo')->get()->first()->idRealisateur;
           if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                   ->insertGetId([
                       'urlImageFilm' => 'films/PoeticShorts_200.jpg', 
                       'idRealisateur' => $idRealisateur, 
                       'anneeProduction' => '2009', 
                       'interdictionAge' => '', 
                       'initialMetrage' => $initialMetrage, 
                       'dureeMinuteFilm' => 8, 
                       'boiteProduction' => 'Sprout Festival']); 

                DB::table('FilmTraduction')
                   ->insertGetId([
                       'idFilm' => $id, 
                       'initialLangue' => 'fr', 
                       'lienVideo' => 'http://www.youtube.com/embed/PYlIPoVf24g', 
                       'nomFilm' => 'Poetic shorts', 
                       'resumeFilm' => '<p>« Poetic shorts » est une série de 16 très courts métrages nous présentant des poèmes écrits par des personnes porteurs d’une déficience mentale. Chacun d’eux est récité et interprété par une personne en situation de handicap. Le festival « Eop ! » vous en propose 5 : « Two Evils », « I wish », « Go for it », « Dear God » et « How do you know »</p>']);   

                DB::table('FilmTraduction')
                   ->insertGetId([
                       'idFilm' => $id, 
                       'initialLangue' => 'en', 
                       'lienVideo' => 'http://www.youtube.com/embed/PYlIPoVf24g', 
                       'nomFilm' => 'Poetic shorts', 
                       'resumeFilm' => '<p>« Poetic pairs of shorts » is a serie of 16 shorts Movies presenting us poems written by persons carriers of a mental deficiency. Each of them is recited and interpreted by a person in situation of handicap. The festival " Eop! " Proposes you 5 of them : "Two Evils", "I wish", " Go for it ", "Dear God" and " How doh you know ".</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
               
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 3]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 9]);
                
           } else {
                echo "error : metrage 'CM' non trouvé"."
                ";
           }
       } else {
            echo "error : realisateur 'Anthony DiSalvo' non trouvé"."
                ";
       }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jung Von Matt et Limmat')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jung Von Matt et Limmat')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','Clip')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','Clip')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/Rapprochez-vous!_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 2, 
                        'boiteProduction' => 'Jung Von Matt et Limmat']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/ocBh9bgph_g', 
                        'nomFilm' => 'Rapprochez-vous !', 
                        'resumeFilm' => '<p>Un ours se tient au milieu d\'une zone piétonne. Au début un peu perdu, il s\'efforce bientôt d\'établir des contacts avec son entourage : il ouvre ses bras pou</p><H1>manque du texte</h1>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/ocBh9bgph_g', 
                        'nomFilm' => 'Rapprochez-vous !', 
                        'resumeFilm' => '<p>A bear stands in the middles of a pedestrian area. He is trying to get into contact with people : he wants to hug pedestrians. Suddenly…</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'CH', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 4]);

            } else {
                echo "error : metrage 'Clip' non trouvé"."
                ";
            }
        } else {
            echo "error : realisateur 'Jung Von Matt et Limmat' non trouvé"."
                ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jean-Michel Carré')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jean-Michel Carré')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/Sexe,AmourEtHandicap_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '12', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 74, 
                        'boiteProduction' => 'Les films Grains de sable']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/CWSHLzUTPhI', 
                        'nomFilm' => 'Sexe, Amour et Handicap', 
                        'resumeFilm' => '<p>Chacun de nous aspire à une vie affective et sexuelle pour accomplir sa vie. Atteintes de maladies dégénératives, handicapées moteur ou déficientes intellectuelles, la plupart des personnes en situation de handicap vivent leur situation comme un obstacle au plaisir. </p><p>Comment assouvir leurs désirs et envisager une relation amoureuse quand, des simples citoyens aux professionnels ou décideurs, la société nie leurs besoins vitaux ? On est dans une situation de privation, en contradiction avec les droits humains les plus élémentaires. Ce film veut aborder ces questions essentielles et envisager des solutions avec ceux qui sont au centre de cette souffrance et ceux qui s’engagent à leurs côtés.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/CWSHLzUTPhI', 
                        'nomFilm' => 'Sexe, Amour et Handicap', 
                        'resumeFilm' => '<p>Everyone wants a emotional and sexual life. Handicapped persons live through several challenges faced with this need. This movie presents paths for making their needs real and explores essential questions.  </p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);

            } else {
                echo "error : metrage 'LM' non trouvé"."
                ";
            }
        } else {
            echo "error : realisateur 'Jean-Michel Carré' non trouvé"."
            ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Sandrine Herman et Igor Ochronowicz')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Sandrine Herman et Igor Ochronowicz')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/SourdsEtMalentendus_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2009', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 70, 
                        'boiteProduction' => 'Point du Jour']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/EylRz4w6vFU', 
                        'nomFilm' => 'Sourds et malentendus', 
                        'resumeFilm' => '<p>Ce film nous présente la réalité de Sandrine, adulte et sourde de naissance. Au fil de son témoignage,  nous retournons avec elle dans son passé. Un parcours pas facile, entre le regard des autres, la scolarité, les apprentissages, la rééducation. Tout a conduit à vouloir « réparer » la petite fille qu’elle était, à faire en sorte qu’elle se rapproche de la norme : entendre et parler. Et s’il y avait une autre voie possible ? Ce film est une rencontre avec un monde où la langue des signes est vivante, où la langue est porteuse d’identité, d’histoire et de culture.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/EylRz4w6vFU', 
                        'nomFilm' => 'Sourds et malentendus', 
                        'resumeFilm' => '<p>Sandrine is a hearing-impaired adult. We will travel with her in her past, a difficult journey, including others, the school, the learning, education and society. Everything seems to try to ‘repair’ the little girl>: What of there was another path? </p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
                
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);

            } else {
                echo "error : metrage 'LM' non trouvé"."
                ";
            }
        } else {
            echo "error : realisateur 'Sandrine Herman et Igor Ochronowicz' non trouvé"."
            ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Sarah Tracton')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Sarah Tracton')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/WhiteSound_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2008', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 6, 
                        'boiteProduction' => 'Metro Screen Production']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/9ERibbX3baw', 
                        'nomFilm' => 'White sound', 
                        'resumeFilm' => '<p>« White sound » ou « Son blanc » explore la notion d\'une existence silencieuse. « White sound » est un espace où le bruit, le silence et l\'imagination convergent. Les décibels des soudures d’un sculpteur contrastent avec le grattement calme d’artisants réalisant des gravures. « White sound » recrée dans l\'oreille la perception de l’esprit.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/9ERibbX3baw', 
                        'nomFilm' => 'White sound', 
                        'resumeFilm' => '<p>« White sound » explores the notion of silent existence. « White sound » is a space where noise, silence and imagination combine. </p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
                ";
            }
        } else {
            echo "error : realisateur 'Sarah Tracton' non trouvé"."
            ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Teemu Eramaa')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Teemu Eramaa')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/ABOUTBROTHERS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 4, 
                        'boiteProduction' => 'NOPIA LTD']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'ABOUT BROTHERS', 
                        'resumeFilm' => '<p>Ce clip s&rsquo;inspire librement de la vie de Tomi, fr&egrave;re du r&eacute;alisateur, qui inscrit son univers dans le dessin, la musique et les histoires de robots et autres endro&iuml;des. Se voulant l&rsquo;ambassadeur du bien, il se plait &agrave; venir au secours des desmoiselles en d&eacute;tresse.</p>

 <p>Inspir&eacute; du morceau &ldquo;About Brothers&rdquo; du groupe Delay Trees, ce clip r&eacute;solument vintage s&rsquo;est construit sur base des dessins de Tomi, scann&eacute;s et anim&eacute;s en 3D pour interagir avec lui et son monde imaginaire. Teemu Er&auml;maa a laiss&eacute; son fr&egrave;re s&rsquo;exprimer dans ce qu&rsquo;il fait de mieux : s&rsquo;&eacute;clater face cam&eacute;ra.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'ABOUT BROTHERS', 
                        'resumeFilm' => '<p>This music video tells a story of a boy who creates a world with his drawings - meets some bad guys but befriends them and gets the girl in the end.</p>

 <p>The boy is acted by the directors brother, Tomi, who in real life draws dozens of pictures a day, listens to great deal of music and writes stories about robots, droids and saving damsels in distress - he likes to call himself the &quot;Ambassador of good will&quot;.</p>

 <p>The director originally aimed to make a short film about his brother, but when the band Delay Trees contacted him in the hopes of a music video, he realized their music made the perfect match for this story.</p>

 <p>Filming took place in the dusk of the Western Finland&#39;s countryside and was supplemented with shots in a local doll-museum.</p>

 <p>To re-create that 8-mm retro-look, the director attached vintage Canon FD lenses to his camera with a 35-mm adapter built by himself. This added to the unique look. Tomi&#39;s drawings were then scanned in digitally and animated in 3D to interact with him in his imaginative world.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FI', 
                        'idFilm' => $id]);
                
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
                ";
            }
        } else {
            echo "error : realisateur 'Teemu Eramaa' non trouvé"."
            ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Bard Rossevol')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Bard Rossevol')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/AKVARIUM_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 17, 
                        'boiteProduction' => 'Stiv Kuling']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'AKVARIUM', 
                        'resumeFilm' => '<p>Emma, jeune femme sourde-muette, m&egrave;ne une vie d&rsquo;artiste recluse avec son poisson rouge. Suite au d&eacute;c&egrave;s inopin&eacute; de celui-ci, elle d&eacute;couvre un jeune homme inconscient pr&egrave;s des poubelles dans la cour de son immeuble. Elle le ram&egrave;ne &agrave; son appartement et s&rsquo;occupe de lui. Emma se lie peu &agrave; peu au jeune homme mais, au r&eacute;veil de ce dernier, les choses prennent une tournure impr&eacute;vue&hellip;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'AKVARIUM', 
                        'resumeFilm' => '<p><em>Aquarium</em> is a short film about a deaf and mute girl, Emma. Because of her handicap, she lives a secluded life as an artist. One day, during the burial ceremony of her goldfish, she finds an unconscious young man in her backyard. She brings him to her apartment and treats him there. Emma starts to develop a relationship to the unconscious young man, but when he wakes up, things do not turn out as planned.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'NO', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
                ";
            }
        } else {
            echo "error : realisateur 'Bard Rossevol' non trouvé"."
            ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Niko Von Glasow')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Niko Von Glasow')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/ALLESWIERDGUT_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 96, 
                        'boiteProduction' => 'Palladio films']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/xTS2aZyQVu8', 
                        'nomFilm' => 'ALLES WIERD GUT', 
                        'resumeFilm' => '<p>&laquo;&nbsp;Tous les acteurs sont des handicap&eacute;s, et sp&eacute;cialement les meilleurs d&rsquo;entre eux&raquo; dit Niko Von Glasow. Ce documentaire nous raconte le montage d&rsquo;une cr&eacute;ation th&eacute;&acirc;trale avec une troupe de com&eacute;diens compos&eacute;e de personnes en situation de handicap physique ou mentale et de com&eacute;diens &agrave; priori sans handicap. &laquo;&nbsp;A priori&nbsp;&raquo;, car chacun devra se nourrir de ses obstacles et limitations (sociales et affectives) pour habiter son propre r&ocirc;le. Un film d&eacute;tonnant&nbsp;ou n&rsquo;est pas n&eacute;cessairement handicap&eacute; qui le croit !</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/xTS2aZyQVu8', 
                        'nomFilm' => 'ALLES WIERD GUT', 
                        'resumeFilm' => '<p>&quot;All actors are disabled, especially the good ones&quot; says Niko von Glasow, Germany&rsquo;s only short-armed director, who finds fourteen exceptionally good actors to help him create a play. He films the play&rsquo;s development and rehearsals, and it quickly becomes hard to distinguish fact from theatre and film-making.&nbsp; What becomes very clear is that no comedy-playwright could ever dream up the real-life emotional tour-de-force which unfolds between Niko and his unique cast.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'DE', 
                        'idFilm' => $id]);
                
                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);

            } else {
                echo "error : metrage 'LM' non trouvé"."
             ";
            }
        } else {
            echo "error : realisateur 'Niko Von Glasow' non trouvé"."
             ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','David GUIRAUD et Anne-Claire JAULIN')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','David GUIRAUD et Anne-Claire JAULIN')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/L’ASSISTANTE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '12', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 12, 
                        'boiteProduction' => 'AD ASTRA FILMS']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/yUEUKZP8un4', 
                        'nomFilm' => 'L’ASSISTANTE', 
                        'resumeFilm' => '<p>Isabelle travaille dans un centre de r&eacute;&eacute;ducation. A c&ocirc;t&eacute; de cela, elle consacre son temps &agrave; une activit&eacute; beaucoup moins commune&hellip;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/yUEUKZP8un4', 
                        'nomFilm' => 'L’ASSISTANTE', 
                        'resumeFilm' => '<p>Isabelle is a physiotherapist. After work, she is involved in a completely different</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'David GUIRAUD et Anne-Claire JAULIN' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Genevieve Clay-Smith')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Genevieve Clay-Smith')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/BEAUTIFUL_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 17, 
                        'boiteProduction' => 'Bus Stop Films']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'BEAUTIFUL', 
                        'resumeFilm' => '<p>: Un couple de jeunes en situation de handicap doit faire face aux pr&eacute;jug&eacute;s port&eacute;s par la soci&eacute;t&eacute; et aux pressions parentales. Lui l&rsquo;aime mais, compte tenu de ses difficult&eacute;s d&rsquo;&eacute;locution, il n&rsquo;ose pas lui dire. Elle l&rsquo;aime mais n&rsquo;arrive pas &agrave; convaincre ses parents de la r&eacute;alit&eacute; de cet amour. L&rsquo;affichage de leur relation &agrave; la piscine municipale engendre questionnements et incompr&eacute;hensions&hellip;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'BEAUTIFUL', 
                        'resumeFilm' => '<p>Young lovers, both living with a disability; must navigate their relationship around the pressures of family and the prejudice of society.</p>

 <p>Two people with disabilities navigate their way through challenges when their relationship is on display at the local swimming pool.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Genevieve Clay-Smith' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Chris Dundon')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Chris Dundon')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/BRO_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 18, 
                        'boiteProduction' => 'Chris Dundon']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'BRO', 
                        'resumeFilm' => '<p>Marc est atteint du Syndrome de l&rsquo;X fragile. Son fr&egrave;re Simon est persuad&eacute; que son incapacit&eacute; &agrave; mener une vie &laquo;&nbsp;normale&nbsp;&raquo; d&rsquo;adolescent r&eacute;sulte du handicap de Marc. S&rsquo;occupant quotidiennement de son fr&egrave;re, Simon cumule les frustrations. Nouvellement arriv&eacute; en ville, il se lie d&rsquo;affection &agrave; une jeune fille du coin. Mais la peur du regard de cette derni&egrave;re et de son cercle d&rsquo;amis le ram&egrave;ne &agrave; son pass&eacute; fait de jugements et stigmatisations.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'BRO', 
                        'resumeFilm' => '<p>Bro tells the story of frustrated teenager Simon who spends most of his time caring for his brother Mark, who suffers from Fragile X Syndrome.&nbsp; New to town, Simon shows affection towards a local girl and is desperate to find a way into her world.&nbsp; However, he is fearful if she or her friends find out about his brother they will judge him the same way others have in the past.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Chris Dundon' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Joshua and Rebekah Weigel')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Joshua and Rebekah Weigel')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/THEBUTTERFLYCIRCUS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2009', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 23, 
                        'boiteProduction' => 'Joshua Weigel Rebekah Weigel et Angie Alvarez']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/Uw0oMsKcJ4Y', 
                        'nomFilm' => 'THE BUTTERFLY CIRCUS', 
                        'resumeFilm' => '<p>Lors de la Grande D&eacute;pression de 1929, le forain d&#39;un cirque renomm&eacute; m&egrave;ne sa troupe dans la campagne am&eacute;ricaine d&eacute;vast&eacute;e, apportant un peu de joie et de fantaisie au gr&eacute; du chemin. Pendant leur voyage, ils d&eacute;couvrent un homme sans membres, exhib&eacute;&nbsp; dans une attraction foraine.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/Uw0oMsKcJ4Y', 
                        'nomFilm' => 'THE BUTTERFLY CIRCUS', 
                        'resumeFilm' => '<p>At the height of the Great Depression, the showman (Eduardo Verastegui) of a renowned circus leads his troupe through the devastated American landscape, lifting the spirits of audiences along the way.&nbsp;During their travels they discover Will (Nick Vujicic), a man without limbs at a carnival sideshow, but after an intriguing encounter with the showman he becomes driven to hope against everything he has ever believed.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Joshua and Rebekah Weigel' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Benjamin Lehrer')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Benjamin Lehrer')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/CENDRILLONDUPIEDGAUCHE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 13, 
                        'boiteProduction' => 'Tobina Film']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/cuUkGRMNV9E', 
                        'nomFilm' => 'CENDRILLON DU PIED GAUCHE', 
                        'resumeFilm' => '<p>Une journ&eacute;e dans la vie de L&eacute;a, une jeune fille comme les autres, si ce n&rsquo;est une moiti&eacute; de jambe en plastique. D&rsquo;ailleurs, c&rsquo;est bien du mauvais pied qu&rsquo;elle s&rsquo;est lev&eacute;e ce matin&hellip; D&rsquo;autant qu&rsquo;elle n&rsquo;a rien &agrave; se mettre pour la soir&eacute;e de Marie. Le chemin qui m&egrave;ne au Prince Charmant sera sem&eacute; d&rsquo;emb&ucirc;ches.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/cuUkGRMNV9E', 
                        'nomFilm' => 'CENDRILLON DU PIED GAUCHE', 
                        'resumeFilm' => '<p>A day in the life of L&eacute;a, a girl as many others, with the exception of the plastic leg. Moreover, this is the bad foot that she got up this morning &hellip; Especially as she has to put nothing itself for the evening of Marie. The journey leading to Prince charming will be full of pitfalls.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 5]);   

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Benjamin Lehrer' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Matthieu Bron')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Matthieu Bron')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','MM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','MM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/CORPSETAMES_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 54, 
                        'boiteProduction' => 'Meetings']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://player.vimeo.com/video/58568049', 
                        'nomFilm' => 'CORPS ET AMES', 
                        'resumeFilm' => '<p>Victoria, Mariana et Vasco sont trois jeunes Mozambicains handicap&eacute;s physiques qui vivent dans la banlieue de la capitale du Mozambique, Maputo.</p>

 <p>Victoria transmet l&rsquo;auto estime re&ccedil;ue de son &eacute;ducation &agrave; d&rsquo;autres femmes handicap&eacute;es, en organisant un d&eacute;fil&eacute; de mode&nbsp;; Mariana utilise son &eacute;nergie pour cr&eacute;er des amiti&eacute;s et d&eacute;passer les barri&egrave;res architectoniques urbaines et Vasco fait des affaires en r&eacute;parant des chaussures dans le secteur informel.</p>

 <p>Le film explore le regard qu&rsquo;ils portent sur eux m&ecirc;me et sur les autres et pose des questions universelles sur l&rsquo;acceptation de soi et sur comment trouver sa place dans la soci&eacute;t&eacute;.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://player.vimeo.com/video/58568049', 
                        'nomFilm' => 'CORPS ET AMES', 
                        'resumeFilm' => '<p>Victoria, Mariana et Vasco are three young physically challenged Mozambicans living in the capital Maputo&rsquo;s suburbs.&nbsp; Victoria transfers the self-esteem she got from her education to other physically challenged&nbsp; women thanks to a fashion-show&nbsp;; Mariana uses her energy to establish friendship networks and overcome the urban architecture odds and Vasco has a show repair business in the informal sector.</p>

 <p>The movie explores the universal themes of self-confidence and self-acceptance how to relate to others and fit in the social realm.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
                
                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'MZ', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);

            } else {
                echo "error : metrage 'MM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Matthieu Bron' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Pascal Roy')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Pascal Roy')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/CORPSSOLIDAIRES_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '16', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 28, 
                        'boiteProduction' => 'C Ton Film Productions']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'CORPS SOLIDAIRES', 
                        'resumeFilm' => '<p>Lucie, coiffeuse &agrave; domicile, rencontre Martial, un jeune handicap&eacute;. L&rsquo;isolement physique et affectif de celui-ci touche la jeune femme. A la demande du gar&ccedil;on, celle-ci accepte de revenir le voir en tant que masseuse, son ancienne profession. Malgr&eacute; ses propres r&eacute;ticences et celles de Vittorio, son conjoint,&nbsp; Lucie acceptera-t-elle de d&eacute;passer les limites de sa mission pour aider Martial &agrave; d&eacute;couvrir son corps ?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'CORPS SOLIDAIRES', 
                        'resumeFilm' => '<p>Lucie, is a mobile hair-dresser. She meets Martial, a young disabled man and is touched by his physical and emotional isolation. At his request, she accepts to come back and visit him as a masseuse, her former profession. In spite of her husband&rsquo;s and her own resistances, is Lucie going to accept to overcome the limits of her mission and help Martial to explore his body ?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Pascal Roy' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jean-Claude Rozec')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jean-Claude Rozec')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/CULDEBOUTEILLE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 9, 
                        'boiteProduction' => 'Vivement lundi !']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.dailymotion.com/embed/video/xers0z_cul-de-bouteille-specky-four-eyes_creation', 
                        'nomFilm' => 'CUL DE BOUTEILLE', 
                        'resumeFilm' => '<p>La nouvelle, terrible, est tomb&eacute;e : profond&eacute;ment myope, Arnaud doit porter des lunettes. Et pas nʼimporte quelles lunettes : une monture hideuse qui lui d&eacute;colle les oreilles et lui pince le nez, des verres si &eacute;pais que ses yeux ne semblent plus que deux petits points noirs&hellip; Ces affreuses binocles, Arnaud ne les aime pas et il pr&eacute;f&egrave;re de loin le monde flou et prot&eacute;iforme de sa myopie, un monde peupl&eacute; de monstres, licornes et autres chim&egrave;res qui apparaissent au gr&eacute; de sa fertile imagination...</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.dailymotion.com/embed/video/xers0z_cul-de-bouteille-specky-four-eyes_creation', 
                        'nomFilm' => 'CUL DE BOUTEILLE', 
                        'resumeFilm' => '<p>The terrible news arrived&nbsp;: Arnaud has to wear glasses as he is very pyopic. And not only does he have to wear glasses&nbsp;, these are very peculiar glasses&nbsp;: a horrible frame sticking to his ears and pinching his nose, very thick glasses that make his eyes look like small black dots&hellip; Arnaud really does not like these horrible glasses, and prefers his blurry and fuzzy myopic world that stages monsters, unicorns and other&nbsp; beings according to his very fertile imagination...</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Jean-Claude Rozec' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','William Mager')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','William Mager')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/DEAFMUGGER_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 2, 
                        'boiteProduction' => '104 Films']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'DEAF MUGGER', 
                        'resumeFilm' => '<p>Une victime, un agresseur et une interpr&egrave;te. Sauf que cet agresseur est une personne sourde et que l&rsquo;interpr&egrave;te ne s&rsquo;attendait nullement &agrave; se retrouver complice, malgr&eacute; elle, de ce vol pour le moins peu banal&hellip;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'DEAF MUGGER', 
                        'resumeFilm' => '<p>The film is a comic sketch about a deaf mugger, his victim, and a hapless woman caught in the middle, an interpreter who discovers that her client is more of a challenge than she has bargained for. Ben Green, who plays the victim, worked for a television program for the deaf called <em>See Hear</em>. He came to Mager with idea for the film when he asked himself what would happen if a deaf person wanted to commit a crime, and hired an interpreter: how would the latter respond?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 5]);   

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'William Mager' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Diane Wilkins')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Diane Wilkins')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/DEAFRELAYATYOURSERVICE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 4, 
                        'boiteProduction' => 'Diane Wilkins Productions et Mickee Faust Films']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'DEAF RELAY AT YOUR SERVICE', 
                        'resumeFilm' => '<p>Une plong&eacute;e dans un call-center destin&eacute; aux sourds et malentendants pour qu&rsquo;ils puissent acc&eacute;der &agrave; la communication. Cette fiction surfe avec humour sur ce service d&rsquo;assistance o&ugrave; se relaient des op&eacute;rateurs infatigables qui traduisent toutes les conversations. Toutes. M&ecirc;me les conversations &eacute;rotiques&nbsp;?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'DEAF RELAY AT YOUR SERVICE', 
                        'resumeFilm' => '<p>An inside look at the high-tech critical communications service provided to deaf or hard-of-hearing folks so they can access <em>any</em> type of valuable benefits within an uncensored environment.&nbsp; It&rsquo;s all about service as these tireless operators provide 24-hour-a-day assistance to our fellow citizens. A call from the Deaf Relay Service might just be the most exciting call of the day! &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 5]);   

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Diane Wilkins' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jérome Guiot')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jérome Guiot')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/LEDERNIERVENDREDIDUMOIS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 7, 
                        'boiteProduction' => 'Centre Reine Fabiola de la Neuvilles']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'LE DERNIER VENDREDI DU MOIS', 
                        'resumeFilm' => '<p>Comme chaque fin de mois, Nicolas, chauffeur de taxi, s&rsquo;occupe de son fr&egrave;re, Arnaud, qui vit dans un lieu de vie pour personnes en situation de handicap. Durant une journ&eacute;e, il l&rsquo;emm&egrave;ne avec lui dans son taxi pendant ses courses. Mais au d&eacute;tour d&rsquo;un arr&ecirc;t, Arnaud s&rsquo;enfuit du taxi.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'LE DERNIER VENDREDI DU MOIS', 
                        'resumeFilm' => '<p>Every end of the month Nicolas, taxi-driver takes care of his brother, Arnaud who lives in a home for people with handicaps. One day, he takes him in his taxi during one of his tour of duty. But at some point, during a stop over, Arnaud escapes from the taxi.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'BE', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Jérome Guiot' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Lloyd Newson')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Lloyd Newson')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/THECOSTOFLIVING_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2006', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 34, 
                        'boiteProduction' => 'DV8 theater']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.dailymotion.com/embed/video/x8ipws_dv8-physical-theater-the-cost-of-li_creation', 
                        'nomFilm' => 'THE COST OF LIVING', 
                        'resumeFilm' => '<p>David et Eddie font un spectacle de rue dans une ville au bord de la mer. &laquo;&nbsp;Le Co&ucirc;t de la vie&nbsp;&raquo; les suit dans leur travail, leur discussion ou la drague. Si Eddie est dans la norme, Dave quant &agrave; lui n&rsquo;a pas de jambes. Ce film pose la question de notre propre estime et de notre rapport avec les autres de mani&egrave;re &eacute;blouissante, dans un m&eacute;lange mariant&nbsp; fiction et chor&eacute;graphie.</p>

 <p>&laquo;&nbsp;Le Co&ucirc;t de la vie&nbsp;&raquo; est le quatri&egrave;me film produit par le Th&eacute;&acirc;tre DV8. Les chor&eacute;graphies et la mise en sc&egrave;ne ont &eacute;t&eacute; r&eacute;alis&eacute;s par le metteur en sc&egrave;ne Lloyd Newson. La compagnie th&eacute;&acirc;trale DV8 est r&eacute;put&eacute;e pour ses prises de risque tant au niveau esth&eacute;tique qu&rsquo;en terme de sujets abord&eacute;s, mais sans pr&eacute;tention aucune.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.dailymotion.com/embed/video/x8ipws_dv8-physical-theater-the-cost-of-li_creation', 
                        'nomFilm' => 'THE COST OF LIVING', 
                        'resumeFilm' => '<p>David and Eddie are street actors in a small city on the seaside. &laquo; The Cost of Life &raquo; follows them in their job, their conversations, and their flirts. Eddie is in the norm, but Dave does not have legs. This film questions our pride and our relationship with other persons in a mix of fiction and choreography.&nbsp;<br />
 &laquo; The Cost of Life &raquo; is the fourth film produced by Theatre DV8. The choreographies were produced by director Lloyd Newson. The theater company DV8 is famous for its esthetic as well subject oriented risk-taking attitude.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 2]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Lloyd Newson' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Gwenael Cohenner et le groupe Démosthène')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Gwenael Cohenner et le groupe Démosthène')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/ETPOURTANTJECOMMUNIQUELeGaragiste_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 3, 
                        'boiteProduction' => 'Labo Matci et Association des Paralysés de France']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'ET POURTANT JE COMMUNIQUE Le garagiste', 
                        'resumeFilm' => '<p>Un homme a une paralysie faciale et ne peut communiquer facilement. Il est garagiste. En rentrant chez lui apr&egrave;s sa journ&eacute;e de travail, il rencontre sur la route un automobiliste en panne et lui propose son aide. Mais tr&egrave;s vite l&rsquo;incompr&eacute;hension s&rsquo;installe&hellip;&nbsp;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'ET POURTANT JE COMMUNIQUE Le garagiste', 
                        'resumeFilm' => '<p>A man has a facial paralysis and is challenged in how he can communicate.He is a mechanic. &nbsp;One day on his way home after work, he stumbles upon a man whose car broke down and offers to help. Quite quickly, misunderstandings occur&hellip;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Gwenael Cohenner et le groupe Démosthène' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Marie Mandy')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Marie Mandy')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/L’ETRANGEBALADEDESARINA_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 17, 
                        'boiteProduction' => 'Factory et Luna Blue Film']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'L’ETRANGE BALADE DE SARINA', 
                        'resumeFilm' => '<p>Il est question d&#39;une ville, d&#39;une jeune fille, d&#39;une promenade. Il est question de ce qu&#39;on voit, et de ce qu&#39;on ne voit pas. Sarina, 18 ans, se prom&egrave;ne dans Bruxelles, sa ville. Elle la raconte &agrave; sa mani&egrave;re&nbsp;: en sensations et lumi&egrave;res&hellip; se r&ecirc;vant g&eacute;ante pour un soir s&rsquo;approprier &nbsp;la ville en la caressant du bout des doigts&hellip; Et si, voir au del&agrave; des apparences permettait de ne plus percevoir que l&rsquo;essence des choses, et selon les mots de Sarina, d&rsquo;apprivoiser la mort&nbsp;?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'L’ETRANGE BALADE DE SARINA', 
                        'resumeFilm' => '<p>The theme is about a city, a young woman, and an outing. It is about what we see, what we don&rsquo;t see. Sarina is 18 years old, and i shaving a walk in Brussels, her city. She has her won way to tell us about it&nbsp;: sensations, perceptions and lights&hellip; dreaming to be a giant for one evening and caress the city with the tip of her fingers&hellip; And what if seeing beyond the veils of reality we could garsb the essence things and according to Sarina&rsquo;s own words, tame death itself&nbsp;?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'BE', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Marie Mandy' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Sergio Cruz')->count() > 0) {
           $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Sergio Cruz')->get()->first()->idRealisateur;
           if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
               $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/FEAST_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 7, 
                        'boiteProduction' => 'Helen Crocker GDance']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'FEAST', 
                        'resumeFilm' => '<p>Cette chor&eacute;graphie m&ecirc;lant danseurs valides et en situation de handicap d&eacute;voile les tensions, conflits et c&eacute;r&eacute;monials de familles dans une atmosph&egrave;re intemporelle. Prenant pour d&eacute;cor un ch&acirc;teau m&eacute;di&eacute;val, la troupe professionnelle nous livre une prestation intimiste faite d&rsquo;&eacute;motions et d&rsquo;interactions. Riches tapisseries, d&eacute;cors int&eacute;rieurs et ext&eacute;rieurs, costumes tant&ocirc;t d&rsquo;&eacute;poque tant&ocirc;t contemporains compl&egrave;tent le tableau.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'FEAST', 
                        'resumeFilm' => '<p>Set in a medieval castle in both contemporary and period costume Feast captures the timeless atmosphere of&nbsp; &nbsp;families, their tensions, conflicts and celebrations, at the dining table. &nbsp;The professional company of disabled and non disabled dancers give us an insight into the emotional landscape of interactions between family members against the changing backdrop of the castle&rsquo;s interior and exterior.</p>

 <p>This film is adapted from disabled choreographer Marc Brew&rsquo;s piece of the same name, which deals with conflict and resolution.</p>']);

              DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 2]); 

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Sergio Cruz' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Rodrigo Barriuso')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Rodrigo Barriuso')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/FORDORIAN_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 16, 
                        'boiteProduction' => 'Davina Rimmer']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'FOR DORIAN', 
                        'resumeFilm' => '<p>Oliver, p&egrave;re hyper-protecteur, est confront&eacute; &agrave; l&rsquo;&eacute;veil sexuel de son fils atteint du syndrome de Down. L&rsquo;adolescent est en proie &agrave; des d&eacute;sirs l&eacute;gitimes et se bat pour son ind&eacute;pendance. Oliver ne peut fermer les yeux sur ces changements mais craint que son fils se distingue non seulement de par son handicap mais &eacute;galement de par son orientation sexuelle&hellip;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'FOR DORIAN', 
                        'resumeFilm' => '<p>Oliver, a controlling yet loving father is shaken abruptly when forced to recognize his son Dorian, a teenager living with Down syndrome, as an emerging adult with sexual urges who yearns for his independence. As Oliver begins to discover the changing dynamics within his home, he starts to fear that his son might not only be different by virtue of his disability, but also his sexual orientation.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'CA', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Rodrigo Barriuso' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Roswitha Chesher')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Roswitha Chesher')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/GOODMORNINGMRFERGUSON_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 9, 
                        'boiteProduction' => 'Helen Crocker GDance']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'GOOD MORNING MR FERGUSON', 
                        'resumeFilm' => '<p>Co-produit avec la compagnie Candoco int&eacute;grant personnes valides et en situation de handicap, ce film frais et divertissant nous plonge dans le quotidien de Mr Ferguson. Cette prestation fait partie int&eacute;grante du projet &laquo;&nbsp;Candoco&rsquo;s Moving Bodies&nbsp;&raquo;. Ce ballet s&rsquo;inspire librement de la performance de Sarah Blanc et Katie Ryan.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'GOOD MORNING MR FERGUSON', 
                        'resumeFilm' => '<p>Co-producedwithintegrated dance companyCandoco, thisquirky, fun film featuresa cast of disabled and non-disableddancers dancing us through a day in the life of Mr Ferguson.&nbsp;</p>

 <p>&#39;Good Morning Mr Ferguson&#39; wascreated as part of Candoco&#39;sMoving Bodies project.</p>

 <p>The piecewasbased on original choreography for stage by Sarah Blanc and Katie Ryan.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 2]); 

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Roswitha Chesher' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Bill Plympton')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Bill Plympton')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/GUIDEDOG_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2006', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 5, 
                        'boiteProduction' => 'Plymptons Studios']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'GUIDE DOG', 
                        'resumeFilm' => '<p>&laquo;&nbsp;Guide Dog&nbsp;&raquo; est un clin d&rsquo;&oelig;il au court-m&eacute;trage nomin&eacute; aux Oscars &laquo;&nbsp;Guard Dog&nbsp;&raquo;. Le h&eacute;ros, chien-guide pour personnes aveugles ou mal-voyantes, encha&icirc;ne gaffes sur gaffed avec des r&eacute;sultats pour le moins catastrophiques&hellip;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'GUIDE DOG', 
                        'resumeFilm' => '<p>&ldquo;Guide Dog&rdquo; is a sequel to the Oscar nominated short &ldquo;Guard Dog&rdquo;. This time our hero dog helps blind people with typical disastrous results.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Bill Plympton' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Collectif  A chacun son cinéma')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Collectif  A chacun son cinéma')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/HANDICAPTOIMEME_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 23, 
                        'boiteProduction' => 'A chacun son cinéma et Le potelier des Pilifs']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'HANDICAP TOI MEME', 
                        'resumeFilm' => '<p>Cam&eacute;ras et micros &agrave; la main, un groupe d&#39;adultes porteurs d&#39;un handicap, interviewent les professionnels du secteur et sondent les passants dans la rue, s&#39;interrogeant sur le regard que notre soci&eacute;t&eacute; porte sur eux. Ils nous interpellent sur la place de la personne diff&eacute;rente, mais aussi sur l&#39;origine et l&#39;histoire du mot &laquo;&nbsp;handicap &raquo;. Ainsi Anne, Samuel, Le&iuml;la, Micha&euml;l et les autres se mettent en sc&egrave;ne, partageant leurs r&ecirc;ves et retournent le mot handicap dans tous les sens avec humour et &eacute;motion.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'HANDICAP TOI MEME', 
                        'resumeFilm' => '<p>Using video cameras and microphones, a group of handicaped adults, interview some industry professionnals and survey pedestrians exploring the views society has on them. They challenge us on the perception we have of people living with differences as well as on the origin and the history of the word &laquo;&nbsp;handicap&raquo;.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'BE', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Collectif  A chacun son cinéma' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','William Mager')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','William Mager')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/HANDSSOLO_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 14, 
                        'boiteProduction' => '104 Films']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'HANDS SOLO', 
                        'resumeFilm' => '<p>Un homme sourd devient du jour au lendemain star de porno. Tout cela parce qu&rsquo;il est dou&eacute; avec ses mains ! Mais trouvera-t-il le r&eacute;el amour&nbsp;? Ce faux documentaire met en exergue l&rsquo;apog&eacute;e et la chute d&rsquo;un homme sourd pour le moins talentueux. Hands Solo utilise l&rsquo;humour et la satire pour explorer deux points de vue. D&rsquo;une part la sexualit&eacute; d&rsquo;un homme sourd, homme avant tout. D&rsquo;autre part, la lutte d&rsquo;Hands Solo dans l&rsquo;univers coupe-gorge du porno. Fraicheur et controverse garanties&nbsp;!</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'HANDS SOLO', 
                        'resumeFilm' => '<p>A deaf man becomes a world famous porn star &ndash; all because he is very, very good with his hands. But will he ever find true love? This mockumentary captures the rise and fall of a very talented deaf man.</p>

 <p>Hands Solo uses humour and satire to explore two serious conceits. The first is the sexualisation of a Deaf man as an everyday, normal thing - challenging normal media portrayals of the deaf and disabled; the second is to explore for comic effect how this deaf man thrives in the cut throat alpha male world of porn.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 5]);   

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'William Mager' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Sergio Cruz')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Sergio Cruz')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                    $id = DB::table('Film')
                        ->insertGetId([
                            'urlImageFilm' => 'films/HANNAH_200.jpg', 
                            'idRealisateur' => $idRealisateur, 
                            'anneeProduction' => '2010', 
                            'interdictionAge' => '', 
                            'initialMetrage' => $initialMetrage, 
                            'dureeMinuteFilm' => 5, 
                            'boiteProduction' => 'Sergio Cruz']); 

                    DB::table('FilmTraduction')
                        ->insertGetId([
                            'idFilm' => $id, 
                            'initialLangue' => 'fr', 
                            'lienVideo' => '', 
                            'nomFilm' => 'HANNAH', 
                            'resumeFilm' => '<p>Hannah illustre l&rsquo;engouement et l&rsquo;ambition de la jeune danseuse et athl&egrave;te Hannah Dempsey atteinte de trisomie 21. C&eacute;l&eacute;bration de l&rsquo;&eacute;motion et de l&rsquo;&eacute;l&eacute;gance du mouvement humain, ce documentaire met en avant la connexion art-sport et la relation particuli&egrave;re qu&rsquo;entretient Hannah avec ses deux univers&nbsp;: le sport et la danse. L&rsquo;intention de ce court-m&eacute;trage est de briser les st&eacute;r&eacute;otypes et pr&eacute;jug&eacute;s en d&eacute;montrant que oui, cr&eacute;ativit&eacute; et handicap peuvent co-exister&nbsp;!</p>']);   

                    DB::table('FilmTraduction')
                        ->insertGetId([
                            'idFilm' => $id, 
                            'initialLangue' => 'en', 
                            'lienVideo' => '', 
                            'nomFilm' => 'HANNAH', 
                            'resumeFilm' => '<p>Hannah explores the playful ambition of Hannah Dempsey, a young dancer and athlete with a disability.<br />
     The film is a celebration of motion, energy and elegance of human movement, evoking the power of adrenaline in the young Hannah. It makes the connection between art and sport with emphasis on the athlete-dancer relationship.<br />
     It is also an exploration of ways to challenge and subvert representations of physical and mental disability.<br />
     Hannah&rsquo;s personal achievements reveal that disability is no barrier to creativity. Her life challenges society&rsquo;s preconceptions and prejudices.</p>']);

                    DB::table('PaysFilm')
                        ->insertGetId([
                            'initialPays' => 'GB', 
                            'idFilm' => $id]);
                  
                    DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 2]); 

                } else {
                    echo "error : metrage 'CM' non trouvé"."
                    ";
                }
            } else {
                echo "error : realisateur 'Sergio Cruz' non trouvé"."
                    ";
            }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Heidi Sundby')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Heidi Sundby')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
               $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/THEHUMMINGCHILD_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 28, 
                        'boiteProduction' => 'Helga Fjordholm']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'THE HUMMINGCHILD', 
                        'resumeFilm' => '<p>Apr&egrave;s une crise d&rsquo;&eacute;pilepsie &eacute;tant b&eacute;b&eacute;, l&rsquo;autisme est suspect&eacute; lorsqu&rsquo;Agn&egrave;s a un an. Sa maman et cin&eacute;aste Heidi Sundby se concentre alors sur sa famille, cam&eacute;ra au poing pendant 5 ans., d&eacute;peignant le portrait d&rsquo;Agn&egrave;s, la qu&ecirc;te de communication et sa grammaire particuli&egrave;re.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'THE HUMMINGCHILD', 
                        'resumeFilm' => '<p>After heavy epileptic seizures as a baby, one suspected autism when Agnes was one year old. Mother and filmmaker Heidi Sundby focuses on the inner family sphere over a span of&nbsp; five years, depicting her voyage towards a contact with Agnes &ndash; a communication on unknown terms</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'NO', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Heidi Sundby' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Marion Casabianca')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Marion Casabianca')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/JEVIENSDELOIN_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 5, 
                        'boiteProduction' => 'Marion Casabianca  Studios Off  La Maison du Cartel']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'JE VIENS DE LOIN', 
                        'resumeFilm' => '<p>Mathilde, jeune femme atteinte de Trisomie 21, nous raconte son handicap avec ses doutes, ses peurs, ses espoirs&hellip;.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'JE VIENS DE LOIN', 
                        'resumeFilm' => '<p>Mathilde, young woman affected by Trisomy 21 tells us about her life with its challenges, doubts, fears and hopes...</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Marion Casabianca' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Florian Kuhn')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Florian Kuhn')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','MM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','MM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/L’AMERIQUEDESAUTRES_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 52, 
                        'boiteProduction' => 'Mikiti']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'L’AMERIQUE DES AUTRES', 
                        'resumeFilm' => '<p>Jusqu&rsquo;o&ugrave; mettre la pression et l&rsquo;ambition lorsqu&rsquo;on anime, par exemple, un atelier artistique avec des personnes porteuses d&rsquo;autisme&nbsp;? Comment g&eacute;rer les relations des uns avec les autres&nbsp;? Ce film suivra une troupe de th&eacute;&acirc;tre compos&eacute;e de jeunes autistes (et plus particuli&egrave;rement Anthony et Adlane), qui sillonne les routes pour &eacute;prouver leur travail, leur capacit&eacute; &agrave; faire rire, &agrave; &eacute;mouvoir, &agrave; exprimer leur sensibilit&eacute; au travers du handicap, sous les exigences de leur metteur en sc&egrave;ne.</p>

 <p>Ce film ne manquera pas de nous questionner sur le juste rapport humain et les exigences vis-&agrave;-vis de personnes porteuses de handicap mental.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'L’AMERIQUE DES AUTRES', 
                        'resumeFilm' => '<p>How much pressure and ambition can be put when animating an art workshop with people affected by autism?&nbsp; How to handle relations with each other?&nbsp; This film follows the journey of a theater crew comprising of young persons affected by autism (in particular Anthony and Adlane) along their search for a job, their capacity to entertain, to challenge emotions and express their sensitivity through a handicap as well as through the requirements of the screnwriter. &nbsp;</p>

 <p>This film will question integrity in human relations and requirements towards persons affected by mental handicap.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'MM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Florian Kuhn' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Collectif')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Collectif')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/LACOQUILLE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 13, 
                        'boiteProduction' => 'Caméra etc']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.dailymotion.com/embed/video/x10n0kl_sous-la-coquille-avec-audiodescription_shortfilms', 
                        'nomFilm' => 'LA COQUILLE', 
                        'resumeFilm' => '<p>Un matin, Sam d&eacute;couvre une petite coquille sur son dos. Chaque jour, elle grossit et devient de plus en plus encombrante. Comment parviendra-t-il &agrave; vivre avec cet &eacute;trange et envahissant appendice&nbsp;?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.dailymotion.com/embed/video/x10n0kl_sous-la-coquille-avec-audiodescription_shortfilms', 
                        'nomFilm' => 'LA COQUILLE', 
                        'resumeFilm' => '<p>One morning, Sam discovers a small shell on the back. Every day, it grows and becomes more and more cumbersome. How will he succeed in living with this strange and invading appendix?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'BE', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Collectif' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Marianne Cramer et Robert Iséni')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Marianne Cramer et Robert Iséni')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','MM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','MM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/LAVIEABRASLECORPS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 52, 
                        'boiteProduction' => 'Gédéon programmes']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.dailymotion.com/embed/video/xvi0ym_la-vie-a-bras-le-corps-bande-annonce_tv', 
                        'nomFilm' => 'LA VIE A BRAS LE CORPS', 
                        'resumeFilm' => '<p>Ag&eacute; aujourd&rsquo;hui de 44 ans, Philippe Croizon a &eacute;t&eacute; amput&eacute; des 4 membres &agrave; la suite d&rsquo;un accident en 1994. Dot&eacute; d&rsquo;une d&eacute;termination sans faille et gr&acirc;ce au soutien de ses proches, il est parvenu &agrave; franchir les obstacles et &agrave; gagner de l&rsquo;autonomie. En 2010, il est le 1er nageur handicap&eacute; &agrave; r&eacute;ussir la travers&eacute;e de la Manche &agrave; la nage. Un v&eacute;ritable exploit qui le propulse &agrave; la une des m&eacute;dias. En 2012, il a r&eacute;ussi &agrave; relier symboliquement &agrave; la nage les cinq continents aux c&ocirc;t&eacute;s de son ami Arnaud Chassery. Ce film nous fait d&eacute;couvrir en toute intimit&eacute; l&rsquo;univers de Philippe Croizon, dont le combat nous am&egrave;ne &agrave; porter un regard diff&eacute;rent sur le handicap. Une le&ccedil;on de vie et d&rsquo;espoir pour chacun de nous.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.dailymotion.com/embed/video/xvi0ym_la-vie-a-bras-le-corps-bande-annonce_tv', 
                        'nomFilm' => 'LA VIE A BRAS LE CORPS', 
                        'resumeFilm' => '<p>Today Philippe Croizon is 44 yrs old. He was amputated of his four limbs after an accident in 1994.&nbsp; Philippe is a very determined person and thanks to the suppoer of his family he was able to overcome main challenges and become autonomous. In 2010, he ewas the first handicapped swimmer&nbsp; to cross the Channel. A real record that made him quite famous in the media. In 2012 he succeeds to symbolically connecy by sea the five continents with his friend Arnaud Chassery. This films takes on a intimate exploration journey in what shapes up Philippe Croizon&rsquo;s life whose struggle expresses futher challenges for us and our perceptions of handicaps. A lesson of life and hope for each and everyone of us.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'MM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Marianne Cramer et Robert Iséni' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Aniko Ozorai')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Aniko Ozorai')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','MM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','MM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/LECONDEVIE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 52, 
                        'boiteProduction' => 'No Télé']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'LECON DE VIE', 
                        'resumeFilm' => '<p>Faire cohabiter sans distinction enfants entendants et sourds dans une m&ecirc;me &eacute;cole et parvenir &agrave; &eacute;tablir la communication entre chacun gr&acirc;ce &agrave; la langue des signes&nbsp;: l&rsquo;exploit surprend. Depuis plus de 15 ans, &agrave; Porto-Novo, au B&eacute;nin, le CAEIS, centre d&rsquo;accueil, d&rsquo;&eacute;ducation et d&rsquo;int&eacute;gration des sourds, est une &eacute;cole &laquo;extra&raquo; ordinaire. Les cours s&rsquo;y donnent simultan&eacute;ment en fran&ccedil;ais et en langue des signes. Ici, tous, enfants et adultes sont &laquo;&nbsp;bilingues&nbsp;&raquo;&nbsp;: une v&eacute;ritable le&ccedil;on de vie pour le monde occidental.</p>

 <p>Ce film a &eacute;t&eacute; r&eacute;alis&eacute; en partenariat avec Alpha-Signes (Bruxelles) et Espace Sourds (Tournai).</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'LECON DE VIE', 
                        'resumeFilm' => '<p>Getting a successful common residency between hearing impaired and non-hearing impaired children in a boarding school and achieving to establish good communication between them through sign language is a surprising initiative. For over 15 years&nbsp; in Porto-Novo (Benin), CAEIS, Center for the Education and Int&eacute;gration of Hearing Impaired is a &laquo;extra&raquo; ordinary school. Classes are being held simultaneously in French and in sign language. Here, all children and adults are &laquo;&nbsp;bilingual&nbsp;&raquo;: a real life lesson form the western world. .</p>

 <p>This film is a partnership between Alpha-Signes (Brussels) and Espace Sourds (Tournai).</p>

 <p>&nbsp;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'BE', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'MM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Aniko Ozorai' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Francisco Taranto jr')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Francisco Taranto jr')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/LIBREETHEUREUX_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 6, 
                        'boiteProduction' => 'Francisco Taranto jr']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'LIBRE ET HEUREUX', 
                        'resumeFilm' => '<p>Philippe Ribi&egrave;re est un grimpeur professionnel. Il est aussi DJ, chanteur, parolier, jongleur de feu... Il voyage beaucoup &agrave; bord de son camion, qui lui fait office de camion. Tout cela malgr&eacute; son handicap...</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'LIBRE ET HEUREUX', 
                        'resumeFilm' => '<p>Philippe Ribi&egrave;re is a professional climber. He also is a DJ, a singer, a song-writer, a fire juggler&hellip; He travels a lot on his truck. All of that,&nbsp; in spite of his handicap&hellip;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Francisco Taranto jr' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Collectif sous la direction de Aline Moens')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Collectif sous la direction de Aline Moens')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/MAPEAUAIME_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 12, 
                        'boiteProduction' => 'Graphoui et le centre Sésame']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'MA PEAU AIME', 
                        'resumeFilm' => '<p>&laquo;&nbsp;Mon intimit&eacute; est un jardin secret.</p>

 <p>Je suis perdue. Il est perdu aussi.</p>

 <p>Ta m&eacute;lodie berce mes sens. C&#39;est fou !</p>

 <p>Lion, embrasse-moi.&nbsp;&raquo;</p>

 <p>Un film d&rsquo;animation dans le cadre d&rsquo;un groupe de parole &laquo;&nbsp;vie affective et sexuelle&nbsp;&raquo;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'MA PEAU AIME', 
                        'resumeFilm' => '<p>&laquo;&nbsp;My intimacy is my secret garden.</p>

 <p>I am lost. He is lost too.</p>

 <p>My senses bask in your melody. That&rsquo;s crazy !</p>

 <p>Lion, kiss me.&nbsp;&raquo;</p>

 <p>An animation film for a speech group &laquo;&nbsp;emotional and sexual life&nbsp;&raquo; for persons living with mental challenges.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'BE', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Collectif sous la direction de Aline Moens' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Daniel Metge')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Daniel Metge')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/MONAMOUREUX_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '12', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 23, 
                        'boiteProduction' => 'Les films du cygne']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/n1ETMkXiXms', 
                        'nomFilm' => 'MON AMOUREUX', 
                        'resumeFilm' => '<p>Romain, c&rsquo;est mon amoureux. On s&rsquo;embrasse avec la langue. On va se marier on va vivre ensemble et on va avoir des enfants. On va m&ecirc;me avoir des rapports sexuels.</p>

 <p>Mais bon, aux &Eacute;glantines, c&rsquo;est interdit. Alors samedi, ma petite s&oelig;ur elle va venir nous chercher avec sa voiture et elle va nous emmener &agrave; la campagne.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/n1ETMkXiXms', 
                        'nomFilm' => 'MON AMOUREUX', 
                        'resumeFilm' => '<p>Romain is my boyfriend. We kiss&nbsp; with the tongue.&nbsp; We are going to get married, live together and have children together. We even going to have sex. Well, at Eglantines, this is forbidden. So Saturday, my younger sister will pick us up and will take us out of town.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Daniel Metge' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Niko Von Glasow')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Niko Von Glasow')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/MYWAYTOOLYMPIA_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 82, 
                        'boiteProduction' => 'Palladio films']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/zUugq9rUWok', 
                        'nomFilm' => 'MY WAY TO OLYMPIA', 
                        'resumeFilm' => '<p>&laquo;&nbsp;My way to Olympia&nbsp;&raquo; est le deuxi&egrave;me long m&eacute;trage documentaire du r&eacute;alisateur Niko Von Glasow propos&eacute; cette ann&eacute;e (en plus du brillant &laquo;&nbsp;Nobody&rsquo;s perfect&nbsp;&raquo; prim&eacute; en 2011).</p>

 <p>Toujours avec son ton acerbe et un rien provoquant, Niko nous emm&egrave;ne cette fois &agrave; la rencontre de cinq sportifs de cinq nationalit&eacute;s et d&rsquo;autant de disciplines diff&eacute;rentes, de leur pr&eacute;paration jusqu&#39;aux jeux paralympics de Londres. Etant lui-m&ecirc;me handicap&eacute; par ses petits bras, il dit ne pas comprendre l&rsquo;int&eacute;r&ecirc;t qu&rsquo;on des personnes porteuses de handicap d&rsquo;ainsi s&rsquo;exhiber dans des manifestations sportives. Elles ont d&eacute;j&agrave; assez de challenge &agrave; relever au quotidien.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/zUugq9rUWok', 
                        'nomFilm' => 'MY WAY TO OLYMPIA', 
                        'resumeFilm' => '<p>The film director Niko von Glasow undertakes a journey to athletes, who compete at the Paralympic Games in London 2012. He himself is a short-armed avowed hater of sport who cannot understand how anyone could take on such an odeal voluntarily. Even more since everyday life for people with a disability is most often challenging enough.</p>

 <p>He meets U.S.archer Matt Stutzman, Norwegian table tennis player Aida Dahlen, German swimmer Christiane Reppe, Greek boccia player Greg Polychronidis and a Sitting Volleyball team. Niko neither spares the athletes nor himself asking questions about life, sport and fears. With an ever growing appreciation for sport Niko attends the Paralympic Games and travels back to the ancient city of Olympia, where everything began and where boccia playing is prohibited.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'DE', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Niko Von Glasow' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Frédéric Philibert')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Frédéric Philibert')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/MONPETITFREREDELALUNE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2007', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 6, 
                        'boiteProduction' => 'Sacrebleu production']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/HLKwpjI7XZM', 
                        'nomFilm' => 'MON PETIT FRERE DE LA LUNE', 
                        'resumeFilm' => '<p>Une petite fille essaie de nous faire comprendre pourquoi son petit fr&egrave;re (autiste) n&rsquo;est pas vraiment comme les autres enfants. Au travers de sa compr&eacute;hension des faits non d&eacute;nu&eacute;e d&rsquo;humour, elle nous donne un t&eacute;moignage tr&egrave;s juste de ce que peut &ecirc;tre la r&eacute;alit&eacute; d&rsquo;une famille ayant un enfant autiste en son sein. Prix du public au festival EOP&nbsp;! en 2011, le film nous revient dans le cadre de s&eacute;ances p&eacute;dagogiques pour les enfants et la s&eacute;ance animation.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/HLKwpjI7XZM', 
                        'nomFilm' => 'MON PETIT FRERE DE LA LUNE', 
                        'resumeFilm' => '<p>A young girl is trying to make us understand why her brother ( autist) is not really like other boys. Through her own understanding and certainly with a lot of humour, the girl is giving us a real experience of what the reality of a family with an &ldquo; autist&rdquo; member is.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Frédéric Philibert' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Timothy Wood et Rohan Brooks')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Timothy Wood et Rohan Brooks')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/NOGOODBYES_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 4, 
                        'boiteProduction' => 'Ruddely Interrupted']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'NO GOODBYES', 
                        'resumeFilm' => '<p>C&eacute;cit&eacute;, surdit&eacute;, autisme, syndrome d&#39;Asperger, trisomie 21... Presque tous les membres du groupe autralien &laquo;&nbsp;Rudely Interrupted&nbsp;&raquo; ont un handicap mental ou physique. &Ccedil;a ne les a pas emp&ecirc;ch&eacute;s de faire du rock. Apr&egrave;s un premier album en 2007, le groupe a commenc&eacute; &agrave; donner des concerts sur le circuit australien avant de d&eacute;border &agrave; l&#39;international.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'NO GOODBYES', 
                        'resumeFilm' => '<p>Blindness, deafness, autsim, asperger, down syndrom&nbsp;: all members of the australian group &laquo;&nbsp;Rudely Interrupted&nbsp;&raquo; have disabilities. No Goodbyes is a ROCK/POP masterpiece from one of Australia&rsquo;s most unique rock acts. The catchy as all get up verses and power hitting to Nthe point choruses, makes this little tune larger than life and will see Rudely Interrupted make their mark on the Australian musical landscape.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 3]); 
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 8]); 

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Timothy Wood et Rohan Brooks' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Anthony DiSalvo')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Anthony DiSalvo')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/ONEQUESTION_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 7, 
                        'boiteProduction' => 'Sprout org']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'ONE QUESTION', 
                        'resumeFilm' => '<p>35 personnes porteurs de handicap mental r&eacute;pondent &agrave; une seule et m&ecirc;me question&nbsp;: si vous pouviez changer quelque chose en vous, que changeriez-vous&nbsp;? &hellip;R&eacute;ponses &eacute;tonnantes garanties&nbsp;!</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'ONE QUESTION', 
                        'resumeFilm' => '<p>35 people with developmental disabilities answer the same <strong>one</strong><strong> <strong>question</strong></strong>: If you could change <strong>one</strong> thing about yourself, what would you change? ... Amazing answers garanteed&nbsp;!</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Anthony DiSalvo' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Shira Avni')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Shira Avni')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/PETRASPOEM_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 4, 
                        'boiteProduction' => 'ONF']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'PETRAS POEM', 
                        'resumeFilm' => '<p>Le po&egrave;me de Petra accompagne l&rsquo;artiste Petra Tolley, qui pr&eacute;sente sa vision du moi social. Son texte et ses dessins anim&eacute;s illustrent ses pens&eacute;es; une douzaine d&rsquo;adultes trisomiques l&rsquo;entourent dans une chor&eacute;graphie fluide. Petra s&rsquo;adresse &agrave; la cam&eacute;ra avec une franchise empreinte de d&eacute;termination, tendresse et dignit&eacute;.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'PETRAS POEM', 
                        'resumeFilm' => '<p>An animated dance film, based on a poem recited by Petra Tolley, a young artist with Down Syndrome. This film mixes live-action footage, rotoscopy and under-camera animation to illuminate Petra&#39;s poem about &quot;being in the middle&quot; as a person with Down Syndrome. An animated, poetic performance by members of the Common Ground Cooperative illustrating how they, as adults with special needs, feel caught between two realities.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'CA', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Shira Avni' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Seung Jun Yi')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Seung Jun Yi')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/PLANETOFSNAIL_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 89, 
                        'boiteProduction' => 'NHK  distribution CatetDoc']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/XM-E-X-coCM', 
                        'nomFilm' => 'PLANET OF SNAIL', 
                        'resumeFilm' => '<p>Au&nbsp; commencement il y avait l&#39;obscurit&eacute; et le silence.</p>

 <p>L&#39;obscurit&eacute; et le silence &eacute;taient avec Dieu.</p>

 <p>Quand j&#39;ai vu le jour, ils me sont venus.</p>

 <p>Young-Chan a perdu sa vision et son audition suite &agrave; une maladie quand il &eacute;tait tr&egrave;s jeune. Il se d&eacute;crit souvent comme un escargot puisqu&#39;il doit compter seulement sur ses sens tactiles, et communiquer aussi lentement avec les autres. Un ange est entr&eacute; dans sa vie&nbsp;: Soon-Ho, aussi petite qu&#39;une petite fille, a radicalement chang&eacute; sa vie. &Eacute;tant mari&eacute;s, elle explore les choses qu&#39;il peut ni voir, ni entendre.</p>

 <p>Young-Chan nage et &eacute;crit des essais, des po&eacute;sies et m&ecirc;me un sc&eacute;nario pour une pi&egrave;ce, traduisant chaque exp&eacute;rience dans sa singularit&eacute;.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/XM-E-X-coCM', 
                        'nomFilm' => 'PLANET OF SNAIL', 
                        'resumeFilm' => '<p>In the beginning there was darkness and silence.</p>

 <p>&nbsp;</p>

 <p>The darkness and silence were with God.</p>

 <p>&nbsp;</p>

 <p>When I came into existence, they came to me.</p>

 <p>&nbsp;</p>

 <p>Young-Chan lost his vision and hearing from a serious fever when very young. He often describes himself as a &lsquo;snail&rsquo; since he has to rely only on his tactile senses, just as slowly as a snail, to communicate with others.</p>

 <p>&nbsp;</p>

 <p>Being unable to speak other&rsquo;s language, he once believed he had been singled out from the world. But a woman of an angel walks into his life. Soon-Ho, as short as a little girl who is also disabled, changes his life dramatically. Being married to her, he explores the things he can neither see nor hear. The once lonely snail goes sleighing, swimming and writes essays, poems and even a script for a play, translating every experience into his unique words.</p>

 <p>&nbsp;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'KR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Seung Jun Yi' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jukka Karkkainen et JP Passi')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jukka Karkkainen et JP Passi')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/THEPUNKSYNDROME_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 85, 
                        'boiteProduction' => 'Mouka filmi']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/xM58kP_JHkQ', 
                        'nomFilm' => 'THE PUNK SYNDROME', 
                        'resumeFilm' => '<p>&laquo;&nbsp;The Punk Syndrome&nbsp;&raquo; est un film documentaire sur le groupe rock de punk le plus g&eacute;nial de la Finlande &laquo;&nbsp;Pertti Kurikan nimip&auml;iv&auml;t&nbsp;&raquo;. Les membres de la bande, Pertti, Kari, Toni et Sami sont tous porteurs de handicap mental. Ils jouent la musique avec beaucoup de style (punk) et de la fiert&eacute;.<br />
 Le film suit le voyage du groupe de leur pi&egrave;ce de r&eacute;p&eacute;tition au succ&egrave;s sur sc&egrave;ne. Il montre l&#39;amour et la hainr, les coups de gueules et les rires&hellip; Brzf, la vie habituelle d&rsquo;un groupe.<br />
 Le film suit aussi la sortie de leur premier album, les contacts avec les m&eacute;dias, leur tourn&eacute;e&nbsp; en&nbsp; Europe et comment ils grandissent pour devenir un des plus grands groupes cultes en Finlande.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/xM58kP_JHkQ', 
                        'nomFilm' => 'THE PUNK SYNDROME', 
                        'resumeFilm' => '<p>The Punk Syndrome is a documentary film about Finland&rsquo;s most kick-ass punk rock band Pertti Kurikan nimip&auml;iv&auml;t. The band members, Pertti, Kari, Toni et Sami are mentally handicapped ans they play thier music with a lot of attitude and pride.</p>

 <p>The film follows the band&rsquo;s journey from their rehearsal room to cult success. It shows the love and hate between the guys, the crying, the laughter.</p>

 <p>It shows as the band heads out for festivals and releases their first album: as</p>

 <p>they appear on the media, as they tour Europe and as they grow to be one of the</p>

 <p>biggest cult acts in Finland.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FI', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Jukka Karkkainen et JP Passi' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Franco Dipietro')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Franco Dipietro')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/RUGGERO_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 14, 
                        'boiteProduction' => 'Duenonete']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/deJ3HMq5T7o', 
                        'nomFilm' => 'RUGGERO', 
                        'resumeFilm' => '<p>Ruggero est un jeune homme de 30 ans amoureux d&#39;Anna et porteur du syndrome de Down. Un jour un nouveau rival se pr&eacute;sente sur son lieu de travail et Anna change son comportement. Ruggero fait de son mieux pour contrer Paolo, ce rival, mais y arrivera-t-il&nbsp;?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/deJ3HMq5T7o', 
                        'nomFilm' => 'RUGGERO', 
                        'resumeFilm' => '<p>Ruggero is a 30 years old man in love with Anna. A day a new rival shows up in the place where they live, and Anna change her behavior. Ruggero try his best to kick Paolo out, but he will succeed only using his fortune in a different way.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'IT', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 5]); 

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Franco Dipietro' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Catherine  Scott')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Catherine  Scott')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/SCARLETROAD_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '12', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 68, 
                        'boiteProduction' => 'Screen Australia et Paradigm Pictures']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/v9mwJsqumuk', 
                        'nomFilm' => 'SCARLET ROAD', 
                        'resumeFilm' => '<p>&laquo;&nbsp;Scarlet road&nbsp;&raquo; suit le travail extraordinaire d&rsquo;une travailleuse du sexe australienne, Rachel Wotton. Passionn&eacute;e par la libert&eacute; d&#39;expression sexuelle et du droits de travailleuses du sexe, elle s&rsquo;est sp&eacute;cialis&eacute;e sur une client&egrave;le n&eacute;glig&eacute;e &ndash; les personnes en situation de handicap.<br />
 La philosophie de Rachel, bas&eacute;e sur l&rsquo;humain et l&#39;intimit&eacute; sexuelle, peuvent &ecirc;tre un aspect des plus th&eacute;rapeutiques &agrave; notre existence et ont un impact spectaculaire sur les vies de ses clients, Mark, John et tous les autres. Tous les deux n&#39;ont rien que l&#39;&eacute;loge pour ses talents.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/v9mwJsqumuk', 
                        'nomFilm' => 'SCARLET ROAD', 
                        'resumeFilm' => '<p><strong><em>Scarlet Road</em></strong> follows the extraordinary work of Australian sex worker, Rachel Wotton. Impassioned about freedom of sexual expression and the rights of sex workers, she specializes in a long over-looked clientele - people with disability.</p>

 <p>Rachel&rsquo;s philosophy, that human touch and sexual intimacy can be some of the most therapeutic aspects to our existence, is making a dramatic impact on the lives of her clients, Mark and John. Both have nothing but praise for her talents.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Catherine  Scott' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Ted Evans')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Ted Evans')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/THEEND_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 24, 
                        'boiteProduction' => 'Neath Films Ltd.']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'THE END', 
                        'resumeFilm' => '<p>Le film d&eacute;bute dans les ann&eacute;es 1980. &laquo;&nbsp;The end&nbsp;&raquo; suit 4 enfants Sourds pendant 60 ans, passant d&rsquo;un aspect documentaire &agrave; de la pure fiction lorsque l&#39;introduction d&#39;un traitement qui vise &agrave; supprimer la surdit&eacute; sur le territoire anglais appara&icirc;t. La question de la survie m&ecirc;me de la langue des signes et de sa culture se retrouve pos&eacute;e.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'THE END', 
                        'resumeFilm' => '<p>Starting in the 1980&#39;s, &#39;The End&#39; follows 4 Deaf children over 60 years.&nbsp; After the introduction of a treatment aimed at eradicating deafness, the very survival of Deaf language and culture is at stake. Featuring an ensemble cast, &#39;The End&#39; is a thought-provoking alternative vision of the future.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Ted Evans' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Genevieve Clay-Smith')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Genevieve Clay-Smith')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/THEINTERVIEWER_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 7, 
                        'boiteProduction' => 'Bus Stop Films']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://player.vimeo.com/video/45737098', 
                        'nomFilm' => 'THE INTERVIEWER', 
                        'resumeFilm' => '<p>Thomas Howell est un avocat cherchant un &laquo;&nbsp;plus&nbsp;&raquo; dans la vie&nbsp;: contribuer &agrave; changer le monde. Quand il d&eacute;croche un entretien d&rsquo;embauche dans un cabinet juridique prestigieux, il se retrouve face &agrave; James, un jeune homme porteur de trisomie, qui va le d&eacute;sar&ccedil;onner.</p>

 <p>Ce film a &eacute;t&eacute; enti&egrave;rement r&eacute;alis&eacute; par des personnes porteuses de handicap, second&eacute;es par des professionnels. Le making-of de ce film sera projet&eacute; lors du gala d&rsquo;ouverture du festival.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://player.vimeo.com/video/45737098', 
                        'nomFilm' => 'THE INTERVIEWER', 
                        'resumeFilm' => '<p>Thomas Howell is a lawyer looking for more in life - the chance to make a difference in the world. When he snags the opportunity of a lifetime &ndash; an interview at a prestigious law firm for his &lsquo;dream-job&rsquo; working in the pro-bono department&hellip; he realizes that his chance to make a difference is closer and more unexpected than he could ever imagine.</p>

 <p>This film was realised by disable people and the making-of will be show during the opening night of the festival.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 5]);   

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Genevieve Clay-Smith' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Mark Michel')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Mark Michel')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/VERONIKA_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 6, 
                        'boiteProduction' => 'Mark Michel']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'VERONIKA', 
                        'resumeFilm' => '<p>&laquo;&nbsp;Le Sable est une m&eacute;taphore &eacute;vidente puisque je ne suis pas stable. Parfois je me sens comme cela, comme si je tombais en mille morceaux&quot;. Une incursion perceptrice et compatissante dans le monde cach&eacute; d&#39;une adolescente souffrant d&#39;autisme et handicaps multiples. Un tournage imaginatif avec une qualit&eacute; &eacute;th&eacute;r&eacute;e fournie par l&#39;incorporation d&#39;animation de sable dans le film documentaire. Un film documentaire qui invite au courage pour aller au-del&agrave; de l&rsquo;apparence des choses.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'VERONIKA', 
                        'resumeFilm' => '<p>&ldquo;Sand is an obvious metaphor since I am not stable; it takes only a tiny impulse and my sense of being crumbles. Sometimes I feel just like that, as though I&rsquo;ve fallen into a thousand bits&rdquo;. A perceptive and compassionate incursion into the hidden world of a teenage girl suffering from autism and multiple disabilities. A piece of imaginative film-making with an ethereal quality provided by the incorporation of sand animation within the documentary footage. A plea for documentary film as the courage to go beyond the surface of lives and things.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'DE', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Mark Michel' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Filip Jacobson')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Filip Jacobson')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/WALK_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 6, 
                        'boiteProduction' => 'Gdynia Film School']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'WALK', 
                        'resumeFilm' => '<p>&laquo;&nbsp;Walk&nbsp;&raquo; est le film qui accompagne deux enfants - une soeur et son fr&egrave;re aveugle- lors d&rsquo;une promenade o&ugrave; ils s&#39;expliquent comment l&rsquo;un et l&rsquo;autre per&ccedil;oivent les choses, &nbsp;vivent leurs sensations. Pendant leurs jeux et arguments, ils &eacute;changent les diff&eacute;rences de perception du monde et tout ce qui ont aussi en commun.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'WALK', 
                        'resumeFilm' => '<p>&bdquo;Walk&rdquo; is film about two children - a sister and her blind brother. They go for a stroll where&nbsp; they explain each other how they see and feel. During their play and argument the children recognize differences in perceiving the world and all what keeps them together.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'PL', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Filip Jacobson' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Lars Feldball Petersen')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Lars Feldball Petersen')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','MM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','MM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/MYWONDERFULLIFEASAVEGETABLE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 58, 
                        'boiteProduction' => 'TV Compagniet']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'MY WONDERFUL LIFE AS A VEGETABLE', 
                        'resumeFilm' => '<p>Un road-movie inhabituel et original &agrave; propos de Birger Bergmann. Malgr&eacute; le fait qu&#39;il soit paralys&eacute; de la t&ecirc;te aux pieds par la Scl&eacute;rose Lat&eacute;rale Amyotrophique (ALS), Birger maintient qu&#39;il est un homme plus heureux aujourd&rsquo;hui qu&#39;avant cette maladie incurable qui a vu sa vie basculer &agrave; 49 ans. &laquo;&nbsp;Ma merveilleuse vie comme un l&eacute;gume&nbsp;&raquo; est un film sur Birger, sur son amour pour la vie et pour sa femme Jutta. Selon Birger, il s&rsquo;agit avant tout d&rsquo;&ecirc;tre quelqu&rsquo;un, m&ecirc;me si la seule chose que vous pouvez faire est de clignoter vos yeux. En ce sens, il agit et milite pour d&rsquo;autres personnes porteuses de la m&ecirc;me maladie.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'MY WONDERFUL LIFE AS A VEGETABLE', 
                        'resumeFilm' => '<p>An unusual and quirky road movie about former florist Birger Bergmann. Despite the fact that he is paralyzed from head to toe, he maintains that he is now a happier man than before he was hit by the incurable disease, Amyotrophic Lateral Sclerosis (ALS). <em>My Wonderful Life As a Vegetable </em>is a film about Birger, his love for life and his wife Jutta. And it is about insisting on being someone and doing something for others, even if the only thing you can do is to blink your eyes.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'DK', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'MM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Lars Feldball Petersen' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Sophie Hyde')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Sophie Hyde')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/SIXTEEN(NecessaryGames)_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2009', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 7, 
                        'boiteProduction' => 'Closer Production et Restless dance theater']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/AJmsbOVOB7I', 
                        'nomFilm' => 'SIXTEEN (Necessary games)', 
                        'resumeFilm' => '<p>Ce film chor&eacute;graphique nous parle du besoin &agrave; l&rsquo;adolescence de se connecter &agrave; l&rsquo;autre et des rapports urgents dans les relations au travers de Jianna, le personnage principal.</p>

 <p>La joie, la nervosit&eacute;, le d&eacute;sir et l&#39;intimit&eacute; modifient tour &agrave; tour les rapports que la jeune femme entretient dans sa vie.</p>

 <p>&laquo;&nbsp;Sixteen&raquo; est une collaboration dynamique entre le Restless Dance Theatre et Closer Productions. Ce film fait partie d&rsquo;un tryptique de films chor&eacute;graphiques&nbsp; qui aborde l&#39;intimit&eacute; et les rapports humains&nbsp;: trois explorations des jeux humains que nous jouons, honn&ecirc;tes ou malhonn&ecirc;tes, dans des interactions fascinantes. Les trois films ont &eacute;t&eacute; d&eacute;velopp&eacute;s par les jeunes membres du Restless Dance Theatre accompagn&eacute;s par une &eacute;quipe de chor&eacute;graphes. Ce triptyque forme un travail complet, pr&eacute;sent&eacute; comme un tout, mais qui peut aussi &ecirc;tre projet&eacute; individuellement, ce qui sera le cas au festival EOP&nbsp;! puisque deux des trois films seront projet&eacute;s.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/AJmsbOVOB7I', 
                        'nomFilm' => 'SIXTEEN (Necessary games)', 
                        'resumeFilm' => '<p>A dance film about our human need to connect and, the urgent games we play.</p>

 <p>A coming of age game about the joy, nervousness, desire and&nbsp; intimacy of&nbsp; the different kinds&nbsp; of connections a young woman will, did or might have in her life. Jianna moves through a series of moments caught between anticipation andrealisation.</p>

 <p>&nbsp;</p>

 <p>A dynamic collaboration between Restless Dance Theatre and screen media company Closer Productions, &laquo;&nbsp;Sixteen&nbsp;&raquo; is a part of three new dance works (Necessary Games) made specifically for the screen. With three different takes on intimacy and connection and three explorations of the games we play, this ,is honest, idiosyncratic ,movement and compelling interactions. ,Three intriguing films developed by young members ,of the Restless ensemble and a potent creative team. This triptych forms a complete work, screened as one piece, but each also ,stand-alone as mesmerizing individual dance films when screened separately. Two of them will be shown in the festival.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 2]); 

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Sophie Hyde' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Sophie Hyde')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Sophie Hyde')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/MOTHS(NecessaryGames)_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2009', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 7, 
                        'boiteProduction' => 'Closer Production et Restless dance theater']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/AJmsbOVOB7I', 
                        'nomFilm' => 'MOTHS (Necessary games)', 
                        'resumeFilm' => '<p>Par une nuit sombre et pluvieuse un homme envahit un espace sombre. Un autre s&rsquo;y trouve d&eacute;j&agrave;. &Eacute;tait-il toujours l&agrave; ? Peut-&ecirc;tre il est le souvenir de quelqu&#39;un disparu. Les deux hommes se tournent autour puis entrent en collision, d&eacute;sorient&eacute;s ou charg&eacute;s d&rsquo;espoir, jet&eacute; dans des rapports faits de sensations brutes, de d&eacute;membrements ou de souvenirs. Qu&rsquo;attend-on de quelqu&#39;un qui n&#39;est plus l&agrave;&hellip;</p>

 <p>&laquo;&nbsp;Moths&nbsp;&raquo; est une collaboration dynamique entre le Restless Dance Theatre et Closer Productions. Ce film fait partie d&rsquo;un tryptique de films chor&eacute;graphiques&nbsp; qui aborde l&#39;intimit&eacute; et les rapports humains&nbsp;: trois explorations des jeux humains que nous jouons, honn&ecirc;tes ou malhonn&ecirc;tes, dans des interactions fascinantes. Les trois films ont &eacute;t&eacute; d&eacute;velopp&eacute;s par les jeunes membres du Restless Dance Theatre accompagn&eacute;s par une &eacute;quipe de chor&eacute;graphes. Ce triptyque forme un travail complet, pr&eacute;sent&eacute; comme un tout, mais qui peut aussi &ecirc;tre projet&eacute; individuellement, ce qui sera le cas au festival EOP&nbsp;! puisque deux des trois films seront projet&eacute;s.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/AJmsbOVOB7I', 
                        'nomFilm' => 'MOTHS (Necessary games)', 
                        'resumeFilm' => '<p>A dance film triptych about our human need to connect and ,the urgent games we play.</p>

 <p>Two men collide in na dark night world, drenched with loss and heavy with hope. Who do you see ni your</p>

 <p>dreams? On a rainy night a man invades a dark space. There is another already there. Has he always been there? Perhaps he&rsquo;s a memory of someone. Together, they circle and collide, thrown into other worlds full of rough sensation, nremembering and recollecting. What do you want nfrom someone who is no longer there? Here?</p>

 <p>A dynamic collaboration between Restless Dance Theatre and screen media company Closer Productions, &laquo;&nbsp;Sixteen&nbsp;&raquo; is a part of three new dance works (Necessary Games) made specifically for the screen. With three different takes on intimacy and connection and three explorations of the games we play, this ,is honest, idiosyncratic ,movement and compelling interactions. ,Three intriguing films developed by young members ,of the Restless ensemble and a potent creative team. This triptych forms a complete work, screened as one piece, but each also ,stand-alone as mesmerizing individual dance films when screened separately. Two of them will be shown in the festival.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 2]); 

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Sophie Hyde' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Sophie Robert')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Sophie Robert')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','MM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','MM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/LeMur_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2009', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 52, 
                        'boiteProduction' => 'Dragon Bleu']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'Le Mur', 
                        'resumeFilm' => '<p>Dans ce documentaire de Sophie Robert, onze psychanalystes exposent leur point de vue stup&eacute;fiant sur l&rsquo;autisme. Apr&egrave;s 2 ann&eacute;es de censure, d&eacute;couvrez le film &eacute;v&eacute;nement de l&rsquo;autisme.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'Le Mur', 
                        'resumeFilm' => '<p></p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'MM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Sophie Robert' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Luc Boland')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Luc Boland')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/UneSirèneDansLaNuit_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2006', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 80, 
                        'boiteProduction' => 'moi']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'Une sirène dans la nuit', 
                        'resumeFilm' => '<p>test</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'Une sirène dans la nuit', 
                        'resumeFilm' => '<p>test</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'BE', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]); 

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Luc Boland' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Shahriar Pourseyedian')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Shahriar Pourseyedian')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/ACOLDLAND_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 19, 
                        'boiteProduction' => 'Shahriar Pourseyedian']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/lCa1am1sUME', 
                        'nomFilm' => 'A COLD LAND', 
                        'resumeFilm' => '<p>C&rsquo;est l&rsquo;histoire d&rsquo;un fr&egrave;re et d&rsquo;une s&oelig;ur, tous deux handicap&eacute;s, dont la maison a &eacute;t&eacute; d&eacute;truite par une crue en Iran, mais qui n&eacute;anmoins d&eacute;gagent une force de vie incroyable. Il y a toujours autour de nous des gens qui ont terriblement besoin d&rsquo;aide et de soins. Ils sont abandonn&eacute;s &hellip; et ce que nous pouvons faire pour eux est rien moins que de faire entendre leur voix.</p>

 <p>&nbsp;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/lCa1am1sUME', 
                        'nomFilm' => 'A COLD LAND', 
                        'resumeFilm' => '<p>&quot;A Cold Land&quot; is about two disabled siblings whose house was flooded in Iran, but who still display an incredible life force.<br />
 There are always people around us who are in desperate need of help and care.<br />
 They are left alone&hellip; and what we can do for them is no more than making their voice heard.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'IR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Shahriar Pourseyedian' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Joseph Le Baron')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Joseph Le Baron')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 4, 
                        'boiteProduction' => 'Joseph Le Baron']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/FJMGioN4aA8', 
                        'nomFilm' => 'A GOOD LIFE TOO: ALONZO CLEMONS', 
                        'resumeFilm' => '<p>Alonzo Clemons a eu un accident c&eacute;r&eacute;bral &agrave; l&rsquo;&acirc;ge de 10 ans. Cela a&nbsp;chang&eacute; sa fa&ccedil;on d&rsquo;apprendre la musique et de communiquer, mais aussi la fa&ccedil;on dont il interpr&egrave;te le monde autour de lui. Tr&egrave;s t&ocirc;t, il est devenu sculpteur. Il a &eacute;t&eacute; intern&eacute; dix ans en h&ocirc;pital mais il a continu&eacute; &agrave; faire des figures d&eacute;licates avec ses mains. Quand ils ne trouvait pas de l&rsquo;argile, il utilisait le goudron chaud du parking. Malgr&eacute; ses difficult&eacute;s Alonzo continue toujours de sculpter au Colorado.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/FJMGioN4aA8', 
                        'nomFilm' => 'A GOOD LIFE TOO: ALONZO CLEMONS', 
                        'resumeFilm' => '<p>Alonzo Clemons suffered a stroke at the age of 10. It changed the way he learns music and communicates, but also the way he sees the world around him. Early on, he started sculpting. He was committed for ten years but he never stopped creating fine figures. When he couldn&rsquo;t find clay, he would use hot tar from the parking lot. Despite his difficulties, Alonzo still sculpts in Colorado.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Joseph Le Baron' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Laure de Clermont')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Laure de Clermont')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/ATLANTICAVENUE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '16', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 13, 
                        'boiteProduction' => 'Mact Production']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/ux7nGmrYlvE', 
                        'nomFilm' => 'ATLANTIC AVENUE', 
                        'resumeFilm' => '<p>Comment une jeune fille lourdement handicap&eacute;e mais autonome, en fauteuil &eacute;lectrique, d&eacute;cide de s&eacute;duire un jeune marginal afin de vivre, elle aussi, une exp&eacute;rience amoureuse.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/ux7nGmrYlvE', 
                        'nomFilm' => 'ATLANTIC AVENUE', 
                        'resumeFilm' => '<p>How a young woman, severely disabled&nbsp; but autonomous, in an electric wheelchair, decides to seduce a young dropout to live, as would anybody, a romantic experience.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Laure de Clermont' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Ray Jacobs')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Ray Jacobs')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/BASTION_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 10, 
                        'boiteProduction' => 'Ray Jacobs']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/DFLEOigshsc', 
                        'nomFilm' => 'BASTION', 
                        'resumeFilm' => '<p>Juste avant l&#39;heure de fermeture, un homme compl&egrave;tement chauve entre dans un salon de coiffure. &laquo;&nbsp;Bastion&nbsp;&raquo; est un court m&eacute;trage qui explore les fronti&egrave;res entre le jeu, l&#39;imagination et la sant&eacute; mentale. Adapt&eacute; d&#39;une histoire de Simon Armitage le r&eacute;cit joue &agrave; la fronti&egrave;re entre l&#39;imagination et la r&eacute;alit&eacute;. Les ciseaux coupant au raz de la peau nue et un langage taquin et plein d&#39;esprit invitent le rire, qui r&eacute;sonne dans des espaces sombres et vides. Le fou inoffensif n&rsquo;est peut-&ecirc;tre pas aussi inoffensif qu&rsquo;il semble l&rsquo;&ecirc;tre et son monde est peut-&ecirc;tre plus r&eacute;el que le n&ocirc;tre.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/DFLEOigshsc', 
                        'nomFilm' => 'BASTION', 
                        'resumeFilm' => '<p>Just before closing time, a completely bald man walks into a barber&rsquo;s shop. &ldquo;Bastion&rdquo; is short film that explores the boundaries between play, imagination and sanity. Adapted from a prose by Simon Armitage the shards of narrative played at the boundary between imagination and reality. Scissors cutting close to bare skin and a playful witty language invite laughter, which echoes into dark empty spaces. The harmless jester is perhaps not as harmless as he seems and maybe his world is more real than ours.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Ray Jacobs' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Edward Young Lee')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Edward Young Lee')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/BLINDDEVOTION_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2015', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 9, 
                        'boiteProduction' => 'Jubilee Project']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/3x5ydT8rIKU', 
                        'nomFilm' => 'BLIND DEVOTION', 
                        'resumeFilm' => '<p>&laquo;&nbsp;Blind Devotion&nbsp;&raquo; est un film sur l&#39;amour inconditionnel. Cecilia devient aveugle et sa vie enti&egrave;re bascule. Face &agrave; cela, Louie, son compagnon, cherche des moyens pour la soutenir et lui montrer son amour. Un film sur la force de l&rsquo;amour, sans contrepartie.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/3x5ydT8rIKU', 
                        'nomFilm' => 'BLIND DEVOTION', 
                        'resumeFilm' => '<p>&laquo;&nbsp;Blind Devotion&nbsp;&raquo; is a film about unconditional love. Cecilia has gone blind and her entire world is changing. Meanwhile, Louie is searching for ways to support her and show her love. It&#39;s a reminder that love is hard, but worthwhile.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Edward Young Lee' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Amir Masoud Soheili')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Amir Masoud Soheili')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/BLUEEYESBOY_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 18, 
                        'boiteProduction' => 'Simiya Film']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/dtBAgXD4lpY', 
                        'nomFilm' => 'BLUE EYES BOY', 
                        'resumeFilm' => '<p>Il &eacute;tait une fois un gar&ccedil;on qui voyait tout en bleu... compl&egrave;tement bleu, tout comme un oiseau dans le ciel ou un poisson dans l&#39;eau. Un conte iranien, bien que para&icirc;t-il n&eacute; de faits r&eacute;els.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/dtBAgXD4lpY', 
                        'nomFilm' => 'BLUE EYES BOY', 
                        'resumeFilm' => '<p>Once upon a time, a child sees the entire world in blue&hellip; just like a bird in the sky, like a fish in the sea. This Iranian tale might apparently be true&hellip;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'IR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Amir Masoud Soheili' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Pierre Verdez')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Pierre Verdez')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/CELUIQUICHANTE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 58, 
                        'boiteProduction' => 'Mano a Mano']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/Rygk3ThjFY4', 
                        'nomFilm' => 'CELUI QUI CHANTE', 
                        'resumeFilm' => '<p>Simon, jeune t&eacute;nor promis &agrave; une carri&egrave;re internationale, se retrouve paralys&eacute; apr&egrave;s un accident. Avec une force de caract&egrave;re peu commune, Simon d&eacute;cide de poursuivre sa carri&egrave;re de chanteur, m&ecirc;me s&rsquo;il est d&eacute;sormais clou&eacute; dans un fauteuil roulant. La cam&eacute;ra se fait discr&egrave;te, captant les sc&egrave;nes de kin&eacute;, le travail du souffle et les cours de chant, les petites victoires du corps et de l&rsquo;esprit dans les couloirs du centre de r&eacute;&eacute;ducation de Berck-sur-Mer&hellip; Invit&eacute; au Festival de Musique de Namur, sa prestation en a &eacute;mu plus d&rsquo;un. Un final lyrique pour l&rsquo;histoire d&rsquo;une reconqu&ecirc;te.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/Rygk3ThjFY4', 
                        'nomFilm' => 'CELUI QUI CHANTE', 
                        'resumeFilm' => '<p>Simon, a young tenor promised to an international career ends up paralyzed after an accident. With uncommon strength of character, Simon decides to pursue his singing career, even though he is now rooted to a wheelchair. The camera is discreet, capturing scenes at the physiotherapist, the work on breathing and the voice lessons, small victories of the body and mind in the corridors of the rehabilitation center of Berck-sur-Mer ... Invited to the Music Festival of Namur, his performance moves the audience. A lyrical final to this story of&nbsp; reconquest.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Pierre Verdez' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Tarik Ben Salah')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Tarik Ben Salah')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/CHAMALLOW_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 12, 
                        'boiteProduction' => 'Handimaine']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/9n9-U--rti8', 
                        'nomFilm' => 'CHAMALLOW', 
                        'resumeFilm' => '<p>Deux adolescents attendent le bus. Ils discutent de tout et de rien, plaisantent sur leur vie, sur les autres, tout ce qu&rsquo;il y a de plus normal. Lorsqu&rsquo;ils commencent &agrave; se moquer d&rsquo;une personne handicap&eacute;e cela ne semble choquer personne...<br />
 Au travers du quotidien de l&rsquo;un de ces deux jeunes, ce film nous am&egrave;ne &agrave; comprendre comment une id&eacute;e toute faite peut&nbsp;&ecirc;tre amen&eacute;e&nbsp;&agrave; changer.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/9n9-U--rti8', 
                        'nomFilm' => 'CHAMALLOW', 
                        'resumeFilm' => '<p>Two teenagers are in the public transports. They discuss everything and nothing, joke about their lives, on the others, all basic. When they start to make fun of a disabled person, it does not seem to shock anyone...<br />
 The rest of the story is based on the daily life of one of these young people, &quot;inside the city, thing among things, man among men&quot;. Through his life story, the journey of this story will lead us to understand how a preconceived idea may lead to change.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Tarik Ben Salah' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Cathy Heffernan')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Cathy Heffernan')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/CROSSINGTHEDIVIDE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 16, 
                        'boiteProduction' => 'Neath Films']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/yE4wSIoQcw8', 
                        'nomFilm' => 'CROSSING THE DIVIDE', 
                        'resumeFilm' => '<p>Et si la surdit&eacute; faisait fi des conflits et des diff&eacute;rences confessionnelles ? &quot;Crossing the Divide&quot; est un documentaire sur une histoire d&#39;amour et une histoire d&#39;amiti&eacute; &agrave; Belfast pendant les Troubles. Il montre comment la communaut&eacute; sourde a surmont&eacute; les conflits religieux et politiques qui ont divis&eacute; l&rsquo;Irlande du Nord pendant 30 ans.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/yE4wSIoQcw8', 
                        'nomFilm' => 'CROSSING THE DIVIDE', 
                        'resumeFilm' => '<p>Crossing the Divide is a documentary about a love story and friendship in Belfast during the Troubles. It shows how the Deaf community overcame the religious and political divisions that spilt Northern Ireland for 30 years.&nbsp;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Cathy Heffernan' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Pedro Solis Garcia')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Pedro Solis Garcia')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/CUERDAS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 11, 
                        'boiteProduction' => 'La Fiesta Producciones Cinematográficas']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/v-twmwL6gv0', 
                        'nomFilm' => 'CUERDAS', 
                        'resumeFilm' => '<p>La routine de Maria &agrave; l&#39;&eacute;cole change avec l&#39;arriv&eacute;e d&#39;un enfant tr&egrave;s sp&eacute;cial. Tr&egrave;s rapidement, ils deviennent des amis proches. Le film relate l&rsquo;histoire tendre d&#39;une amiti&eacute; entre ces deux enfants. La symbolique des cordes, pr&eacute;sente de bout en bout de l&rsquo;histoire, parle de valeurs et de cr&eacute;ativit&eacute; et de liens que rien ne pourra s&eacute;parer.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/v-twmwL6gv0', 
                        'nomFilm' => 'CUERDAS', 
                        'resumeFilm' => '<p>Mar&iacute;a&rsquo;s routine at school is altered by the arrival of a very special child. Soon, the two become close friends. This movie tells us the story of their friendship. Throughout the whole film, the symbolic of the ropes tells us about the values, the creativity and the bonds that nothing can break.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'ES', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Pedro Solis Garcia' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Félix Fernández de Castro')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Félix Fernández de Castro')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/ELVIAJEDEMARIA_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 6, 
                        'boiteProduction' => 'Fundación Orange']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/U8HkUxyUU2o', 
                        'nomFilm' => 'EL VIAJE DE MARIA', 
                        'resumeFilm' => '<p>Une petite escapade dans le monde int&eacute;rieur de Maria, une adolescente porteuse d&#39;autisme, au travers d&#39;un film d&#39;animation. Un voyage plein de couleur, d&#39;amour, de cr&eacute;ativit&eacute; et d&#39;originalit&eacute;, qui na&icirc;t du processus de prise de conscience des parents de Maria qui observent les comportements singuliers de leur fille.&nbsp;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/U8HkUxyUU2o', 
                        'nomFilm' => 'EL VIAJE DE MARIA', 
                        'resumeFilm' => '<p>A peek in the inner world of Maria, an autistic teenager, through an animation movie. A journey full of color, love, creativity and originality, born from Maria&#39;s parents rising awareness of their daughter&#39;s singular behaviors.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'ES', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Félix Fernández de Castro' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jessica Ashman')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jessica Ashman')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/FIXINGLUKA_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 11, 
                        'boiteProduction' => 'DigiCult']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/pu3IY-syJEs', 
                        'nomFilm' => 'FIXING LUKA', 
                        'resumeFilm' => '<p>Lucy pense que son fr&egrave;re Luka est cass&eacute;. Sa mani&egrave;re si m&eacute;ticuleuse et obsessionnelle de ranger les timbres, les sucres, les canards, les d&eacute;s &agrave; coudre, etc. le prouve. Lucy pense qu&rsquo;il devrait &ecirc;tre r&eacute;par&eacute;, car Luka est parfois bien encombrant, emb&ecirc;tant. Mais peut-on r&eacute;parer Luka&nbsp;?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/pu3IY-syJEs', 
                        'nomFilm' => 'FIXING LUKA', 
                        'resumeFilm' => '<p>Lucy thinks her brother, Luka, is broken. His obsessive, meticulous, infuriating arrangements of sugar cubes and thimbles prove it. Lucy thinks he should be fixed, as he is sometimes a bit annoying. But can Luka really be fixed?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Jessica Ashman' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Sebastian Alfie')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Sebastian Alfie')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/GABOR_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 69, 
                        'boiteProduction' => 'Minimal Prod']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/9dZA5ekUR58', 
                        'nomFilm' => 'GABOR', 
                        'resumeFilm' => '<p>Sebasti&aacute;n doit r&eacute;aliser un documentaire sur la c&eacute;cit&eacute; sur le plateau bolivien. Il rencontre Gabor, un directeur de photographie retrait&eacute; qui a perdu la vue dix ans auparavant. Il lui propose de devenir son cam&eacute;raman et de travailler ensemble. Gabor &eacute;tant aveugle, comment va-t-il faire pour filmer, cadrer, &eacute;clairer ?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/9dZA5ekUR58', 
                        'nomFilm' => 'GABOR', 
                        'resumeFilm' => '<p>Sebasti&aacute;n has to film a documentary on blindness on the Bolivian plateau. While searching for filming equipment, he meets Gabor, a retired director of photography who lost his sight 10 years ago. He offers to become his cameraman and film together in Bolivia. Gabor is blind, how will he shoot, frame and enlighten?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'ES', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Sebastian Alfie' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Enric Ribes & Oriol Martinez')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Enric Ribes & Oriol Martinez')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/GLANCEUP_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 69, 
                        'boiteProduction' => 'La Luca Producciones']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/r45aBhwKbgA', 
                        'nomFilm' => 'GLANCE UP', 
                        'resumeFilm' => '<p>Joan, 28 ans, est passionn&eacute; de basket. Rien d&rsquo;extraordinaire except&eacute; un d&eacute;tail&nbsp;: il mesure 1 m&egrave;tre. Son objectif est de participer &agrave; diff&eacute;rents disciplines des Jeux paralympiques pour personnes de petites tailles aux Etats-Unis. Un probl&egrave;me pour le basket&nbsp;: il est le seul Espagnol. Qu&#39;importe, il va constituer une &eacute;quipe europ&eacute;enne.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/r45aBhwKbgA', 
                        'nomFilm' => 'GLANCE UP', 
                        'resumeFilm' => '<p>Joan is 28 years old and has a huge passion: basketball. It would be nothing extraordinary except for a detail: he&#39;s exactly one meter tall. His objective is to participate in many disciplines in the paralympic games for people of small sizes in the US. Problem for basketball : he is the only Spanish. Whatever, he will build a European team.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'ES', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Enric Ribes & Oriol Martinez' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Diego Robles')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Diego Robles')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/GLIMPSEFORHEAVEN_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 12, 
                        'boiteProduction' => 'Naqturnal Picture']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/pZO4i7bpFeo', 
                        'nomFilm' => 'GLIMPSE FOR HEAVEN', 
                        'resumeFilm' => '<p>L&#39;histoire mouvante d&#39;un v&eacute;t&eacute;ran du Vietnam, Frank, devenu aveugle, qui&nbsp; rencontre une petite fille sp&eacute;ciale, Huian. Elle l&#39;emm&egrave;ne dans un voyage qui change sa vie faite de routine, planification, rendez-vous et horaires. L&#39;innocence de l&#39;enfant va r&eacute;veiller en lui les souvenirs, les sentiments et les motions dans son monde terne.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/pZO4i7bpFeo', 
                        'nomFilm' => 'GLIMPSE FOR HEAVEN', 
                        'resumeFilm' => '<p>The moving story of a blind Vietnam veteran, Frank, and a special little girl, Huian. She takes him on a life-changing journey, he who relays on routine, planning and schedules. The child&#39;s innocence will revive memories, feelings and emotions he had buried away from in his dull world.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Diego Robles' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Pierre-Louis Levacher')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Pierre-Louis Levacher')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/GUILLAUMEAUPAYSDESMERVEILLES_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 52, 
                        'boiteProduction' => 'EgoDoc Production']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/Q8pzCYRmo90', 
                        'nomFilm' => 'GUILLAUME AU PAYS DES MERVEILLES', 
                        'resumeFilm' => '<p>Il y a des histoires qui commencent bien ... Celle-ci d&eacute;bute par le rapt de Guillaume de son foyer APF (l&#39;Association des Paralys&eacute;s de France). Guillaume est handicap&eacute; moteur et cela depuis sa naissance. Il va f&ecirc;ter ses 50 ans en 2013, et pour son anniversaire, sa soeur Doroth&eacute;e a la bonne id&eacute;e de l&rsquo;enlever afin de lui r&eacute;server une grande et belle surprise. Avec sa deuxi&egrave;me soeur Charlotte et sa m&egrave;re Denise, Guillaume va partir sur les routes &agrave; bord d&rsquo;un van pour un long et beau voyage vers une destination inconnue, un endroit o&ugrave; tout le monde est suppos&eacute; &ecirc;tre comme lui. Handicap&eacute;&hellip;.&nbsp;? Un documentaire bourr&eacute; d&rsquo;humour et d&rsquo;humanit&eacute;.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/Q8pzCYRmo90', 
                        'nomFilm' => 'GUILLAUME AU PAYS DES MERVEILLES', 
                        'resumeFilm' => '<p>There are stories that begins well... This one begins with the abduction of William from his APF home (French Paralytics Association). Guillaume is spastic and this since birth. He will celebrate its 50th anniversary in 2013, and for his birthday, his sister Dorothy, had the good idea to steal him in order to reserve him a nice big surprise. With his second sister Charlotte and his mother Denise, William will go on the road on board of a van for a long and beautiful journey to an unknown destination, a place where everyone is supposed to be like him.... Disabled ?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Pierre-Louis Levacher' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jake Willis')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jake Willis')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/HEREINSILENCE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 6, 
                        'boiteProduction' => 'Hollandse Helden']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/wCkvpoESaXE', 
                        'nomFilm' => 'HERE IN SILENCE', 
                        'resumeFilm' => '<p>Par un accident du hasard, Michael et Isabelle manquent le m&ecirc;me train. Attendant sur le quai, Michael r&eacute;alise que sa charmante compagne est sourde. Comme le temps passe, tous deux cherchent &agrave; surmonter leur barri&egrave;re de la langue et finalement comprennent qu&rsquo;une connexion sans voix peut parfois cr&eacute;er une intimit&eacute; plus profonde que les mots.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/wCkvpoESaXE', 
                        'nomFilm' => 'HERE IN SILENCE', 
                        'resumeFilm' => '<p>In a moment of serendipity, Michael and Isabelle find themselves missing the same train. Left to wait on the platform, Michael realizes his lovely companion is deaf. As time goes by, the two struggle to overcome their language barrier, and eventually learn that a speechless connection can sometimes create an intimacy deeper than words.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Jake Willis' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Carolina Giammetta')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Carolina Giammetta')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                   ->insertGetId([
                       'urlImageFilm' => 'films/IDON\'TCARE_200.jpg', 
                       'idRealisateur' => $idRealisateur, 
                       'anneeProduction' => '2013', 
                       'interdictionAge' => '', 
                       'initialMetrage' => $initialMetrage, 
                       'dureeMinuteFilm' => 14, 
                       'boiteProduction' => 'Spool films - post']); 

               DB::table('FilmTraduction')
                   ->insertGetId([
                       'idFilm' => $id, 
                       'initialLangue' => 'fr', 
                       'lienVideo' => 'http://www.youtube.com/embed/C7k21anifYA', 
                       'nomFilm' => 'I DON\'T CARE', 
                       'resumeFilm' => '<p>Ollie, une jeune femme enceinte, doit faire face &agrave; la probabilit&eacute; d&#39;avoir un enfant trisomique. Faisant des petits jobs de jardinage, elle se prend d&#39;amiti&eacute;&nbsp;avec une famille dont le fils Jacques, est trisomique. Commence alors un chemin initiatique qui l&#39;emm&egrave;nera peut-&ecirc;tre &agrave; l&#39;acceptation de cette diff&eacute;rence.</p>

<p>&nbsp;</p>']);   

               DB::table('FilmTraduction')
                   ->insertGetId([
                       'idFilm' => $id, 
                       'initialLangue' => 'en', 
                       'lienVideo' => 'http://www.youtube.com/embed/C7k21anifYA', 
                       'nomFilm' => 'I DON\'T CARE', 
                       'resumeFilm' => '<p>Ollie - a young &quot;mum to be&quot; faces the possibility of having a child with Down Syndrome.&nbsp; She takes on a gardening job and develops a friendship with a family, which includes 12 year old Jacques who has Down Syndrome. An incident where Ollie is left alone with Jacques, challenges her ability to deal with difference.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
             
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

           } else {
               echo "error : metrage 'CM' non trouvé"."
                    ";
           }
       } else {
           echo "error : realisateur 'Carolina Giammetta' non trouvé"."
                    ";
       }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Scott Anderson')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Scott Anderson')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/ILOVEGRILLEDCHEESE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 4, 
                        'boiteProduction' => 'Scott Anderson']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/RaMmf7btvmU', 
                        'nomFilm' => 'I LOVE GRILLED CHEESE', 
                        'resumeFilm' => '<p>La petite Libby Anderson donne un aper&ccedil;u de sa joie de vivre avec son meilleur ami et fr&egrave;re, Max, atteint de trisomie. Un touchant portrait r&eacute;alis&eacute; par le p&egrave;re des deux enfants.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/RaMmf7btvmU', 
                        'nomFilm' => 'I LOVE GRILLED CHEESE', 
                        'resumeFilm' => '<p>The little Libby Anderson provides some insight about the joys of living with her best friend, and brother, Max, who has Down syndrome. A beautiful film made by the father of the two children.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'CA', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Scott Anderson' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Anja Hiddinga & Jascha Blume')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Anja Hiddinga & Jascha Blume')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/ISIGN,ILIVE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 59, 
                        'boiteProduction' => 'Geelprodukt']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/LNLjngDHYHc', 
                        'nomFilm' => 'I SIGN, I LIVE', 
                        'resumeFilm' => '<p>Jascha est un jeune &eacute;tudiant en art, sourd, qui se soucie peu du monde des entendants. Mais il ne peut le fuir si il veut r&eacute;aliser ses projets. Arm&eacute; d&#39;un appareil photo, il visite le seul foyer d&#39;Europe qui accueille des personnes &acirc;g&eacute;es sourdes et cherche &agrave; savoir comment elles ont v&eacute;cu leur vie. Elles parlent de leur jeunesse, quand la langue des signes &eacute;tait interdite, et de leur lutte pour leur dignit&eacute;. Son combat pour l&#39;&eacute;galit&eacute; et le respect, &agrave; la fois en tant qu&#39;individu et en tant que membre d&#39;une minorit&eacute; culturelle, la communaut&eacute; sourde, r&eacute;sonne dans&nbsp; les exp&eacute;riences de ces personnes &acirc;g&eacute;es. Les photographies de Jascha sont des moyens pour lui d&#39;exprimer ce qu&#39;il endure et de r&eacute;fl&eacute;chir sur sa propre vie.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/LNLjngDHYHc', 
                        'nomFilm' => 'I SIGN, I LIVE', 
                        'resumeFilm' => '<p>Jascha is a young deaf art student who doesn&rsquo;t care much about the hearing world. But he can&#39;t escape it if he wants to fulfill his ambitions. Armed with a camera, he visits Europe&rsquo;s only home for elderly deaf people and tries to find out how these people have lived their lives. They tell him about their youth, when sign language was forbidden, and about their struggles against embarrassment and indignities. His fight for equality and respect, both as an individual and as a member of a cultural minority, the Deaf community, echo the life experiences of the elderly. The denial of access, of equal opportunities to live, work and participate in society are on top of the agenda of the Deaf movement. Jascha&rsquo;s camera images, are comments on what he encounters, and reflections on his own life.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'NL', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Anja Hiddinga & Jascha Blume' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Denise Janzee')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Denise Janzee')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/JAMEY\'SGEVECHT_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 15, 
                        'boiteProduction' => 'Zeefilm']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/sXnHf4OItbw', 
                        'nomFilm' => 'JAMEY\'S GEVECHT', 
                        'resumeFilm' => '<p>Jamey, 16 ans, veut se d&eacute;barrasser de son b&eacute;gaiement et poser sa candidature &agrave; une acad&eacute;mie de sport o&ugrave; il devra s&#39;exprimer devant des classes. Jamey b&eacute;gaie depuis l&rsquo;&acirc;ge de quatre ans et ne sait pas faire autrement. Il a essay&eacute; un grand nombre de choses, mais rien n&#39;y fait. Pourtant, il parvient &agrave; trouver le courage de d&eacute;passer le dernier obstacle et il surmonte son b&eacute;gaiement.&nbsp;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/sXnHf4OItbw', 
                        'nomFilm' => 'JAMEY\'S GEVECHT', 
                        'resumeFilm' => '<p>Jamey (16) wants to get rid of his stammer and wants to apply to a sport academy where he will have to teach classes. Jamey has had a stammer since age four and doesn&rsquo;t know any different. He&rsquo;s tried any number of things, but nothing helped. Still he manages to pluck up courage once more to clear the last hurdle and overcome his stammer.&nbsp;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'NL', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Denise Janzee' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Clark Matthews')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Clark Matthews')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/KRUTCH_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '16', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 6, 
                        'boiteProduction' => 'Mat Fraser']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/CsENQKK4dy4', 
                        'nomFilm' => 'KRUTCH', 
                        'resumeFilm' => '<p>Un court m&eacute;trage exp&eacute;rimental torride explorant la perception, la sexualit&eacute;, le handicap et le genre dans les rues de New York. Une revendication forte initi&eacute;e par la com&eacute;dienne elle-m&ecirc;me.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/CsENQKK4dy4', 
                        'nomFilm' => 'KRUTCH', 
                        'resumeFilm' => '<p>A steamy experimental short exploring perception, sexuality, disability and gender on the streets and sheets of New York City. A strong demand initiated by the lead actress herself.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Clark Matthews' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Ricardo Di Gerlando')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Ricardo Di Gerlando')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/L\'AMOREINCOMPRESSO_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 15, 
                        'boiteProduction' => 'Sanremo Cinema']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/btwje76PgNY', 
                        'nomFilm' => 'L\'AMORE INCOMPRESSO', 
                        'resumeFilm' => '<p>Quand l&rsquo;amour rencontre l&rsquo;art. Une &eacute;trange rencontre &agrave; la crois&eacute;e du surr&eacute;alisme, du handicap et de l&rsquo;esth&eacute;tique.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/btwje76PgNY', 
                        'nomFilm' => 'L\'AMORE INCOMPRESSO', 
                        'resumeFilm' => '<p>When love meets the art. A strange meeting between the surrealism, the handicap and the aesthetics.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'IT', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 2]);

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Ricardo Di Gerlando' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Sarah-Laure Estragnat')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Sarah-Laure Estragnat')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/LAFILLEAUXBOUEESROSES_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 2, 
                        'boiteProduction' => 'Sarah-Laure Estragnat']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/hSpZR_0CZyA', 
                        'nomFilm' => 'LA FILLE AUX BOUEES ROSES', 
                        'resumeFilm' => '<p>Quand un homme tombe amoureux  la piscine, d&#39;une fille aux boues roses ... Un film court et percutant sur les a&nbsp;priori et les maladresses humaines.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/hSpZR_0CZyA', 
                        'nomFilm' => 'LA FILLE AUX BOUEES ROSES', 
                        'resumeFilm' => '<p>When a man falls in love at the swimming pool, with a girl with pink armbands ... A short and striking movie about preconceptions and clumsiness.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Sarah-Laure Estragnat' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','David Pantaleon')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','David Pantaleon')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/LAPASSIONDEJUDAS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 10, 
                        'boiteProduction' => 'David Pantaleón']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/kZyJQSdTsCY', 
                        'nomFilm' => 'LA PASSION DE JUDAS', 
                        'resumeFilm' => '<p>Une tradition veut qu&rsquo;&agrave; P&acirc;ques, dans certains villages espagnols et latino-am&eacute;ricains, on lapide, lynche ou br&ucirc;le une poup&eacute;e repr&eacute;sentant Judas Iscariote pour sa trahison au Christ. Quelque part en Espagne, un centre pour personnes handicap&eacute;es met un point d&#39;honneur &agrave; participer chaque ann&eacute;e &agrave; cette tradition folklorique.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/kZyJQSdTsCY', 
                        'nomFilm' => 'LA PASSION DE JUDAS', 
                        'resumeFilm' => '<p>This film is based on a local tradition of some Spanish and Latin American villages in which, at Easter, a doll representing Judas Iscariot is stoned, lynched or burned for his betrayal to the Christ. Somewhere in Spain, a center for disabled people makes it a point of honor to participate every year in this folk tradition.</p>']);

                DB::table('PaysFilm')
                ->insertGetId([
                    'initialPays' => 'ES', 
                    'idFilm' => $id]);

                DB::table('GenreFilmDuFilm')
                ->insert([
                    'idFilm' => $id,
                    'idGenreFilm' => 2]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                ";
            }
        } else {
            echo "error : realisateur 'David Pantaleon' non trouvé"."
                ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Eric Montchaud')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Eric Montchaud')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/LAPETITECASSEROLED\'ANATOLE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 5, 
                        'boiteProduction' => 'JPL Films']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/jHol1kQM3DY', 
                        'nomFilm' => 'LA PETITE CASSEROLE D\'ANATOLE', 
                        'resumeFilm' => '<p>Anatole tra&icirc;ne toujours derri&egrave;re lui sa petite casserole. Elle lui est tomb&eacute;e dessus un jour&hellip; On ne sait pas tr&egrave;s bien pourquoi. Depuis, elle se coince partout et l&rsquo;emp&ecirc;che d&rsquo;avancer. Un jour il en a assez. Il d&eacute;cide de se cacher. Pour ne plus voir et ne plus &ecirc;tre vu. Mais malheureusement, les choses ne sont pas si simples&hellip;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/jHol1kQM3DY', 
                        'nomFilm' => 'LA PETITE CASSEROLE D\'ANATOLE', 
                        'resumeFilm' => '<p>Anatole always drags his little pan. One day it fell on his head... No one will ever know why. Since then, it prevents him from moving forward, it is an obstacle. It gets him tired. So one day, he decides to hide himself to escape. Not seeing and not being seen. But unfortunately, things are not so simple...</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Eric Montchaud' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Mario Ventura')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Mario Ventura')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/LEBERCEAUIMPARFAIT_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 18, 
                        'boiteProduction' => 'Fundaçâo Cidade Guimarâes']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/oeMbWwTDOr4', 
                        'nomFilm' => 'LE BERCEAU IMPARFAIT', 
                        'resumeFilm' => '<p>Deux amis d&#39;enfance, un jeune homme et une jeune femme, sont confront&eacute;s &agrave; des sentiments &eacute;tranges. Lui essaye de mettre des mots sur ses sentiments. Elle se sent mal &agrave; l&rsquo;aise, d&rsquo;autant plus qu&rsquo;un obstacle dans sa vie semble le rendre acerbe. Leur relation devient inconfortable. Mais quand les mots se taisent&hellip;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/oeMbWwTDOr4', 
                        'nomFilm' => 'LE BERCEAU IMPARFAIT', 
                        'resumeFilm' => '<p>Two childhood friends, a young man and a young woman, are facing strange feelings. He tries to explore them with words but she feels uncomfortable, especially since life issues seem to have made him bitter. Their relationship becomes complicated. But when the words become silent...</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'PT', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Mario Ventura' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Vanessa Clement')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Vanessa Clement')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/LEPREMIERPAS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '12', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 13, 
                        'boiteProduction' => 'Les Films du Cygne']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/GmNCdg6zpnQ', 
                        'nomFilm' => 'LE PREMIER PAS', 
                        'resumeFilm' => '<p>Un premier rendez-vous.&nbsp;Un temps pour chercher &agrave; se conna&icirc;tre et &agrave; susciter l&rsquo;envie. Un homme comme les autres, une femme qui n&rsquo;en a pas l&rsquo;air. Deux personnes qui, ensemble, s&rsquo;appr&ecirc;tent &agrave; faire leur premier pas de mani&egrave;re &eacute;trangement balis&eacute;e et codifi&eacute;e.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/GmNCdg6zpnQ', 
                        'nomFilm' => 'LE PREMIER PAS', 
                        'resumeFilm' => '<p>A first date. A time to get to know one another and to inspire a desire. A man as any other one, a woman who does not look like it. Two people who are about to make the first step together in an oddly codified way.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Vanessa Clement' non trouvé"."
                    ";
        }        

















        if (DB::table('Realisateur')->where('nomRealisateur','Arjanmar Rebeta')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Arjanmar Rebeta')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/MA-GULONGSAYAWNGBUHAY_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 11, 
                        'boiteProduction' => 'MEDIARAMA']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/06priIK3wF0', 
                        'nomFilm' => 'MA-GULONG SAYAW NG BUHAY', 
                        'resumeFilm' => '<p>Un jeune homme en fauteuil roulant regrette l&rsquo;usage de ses jambes et vit dans la passivit&eacute; jusqu&#39;au jour o&ugrave; il trouve une petite bo&icirc;te musicale sur laquelle tourne une ballerine.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/06priIK3wF0', 
                        'nomFilm' => 'MA-GULONG SAYAW NG BUHAY', 
                        'resumeFilm' => '<p>A young man in armchair regrets the use of his legs and lives in the passivity until he finds a small musical box on which a ballerina turns.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'PH', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Arjanmar Rebeta' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Joel Simon')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Joel Simon')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/MACROPOLIS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 8, 
                        'boiteProduction' => 'Vicky Bevis']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/6BsXixqMkw4', 
                        'nomFilm' => 'MACROPOLIS', 
                        'resumeFilm' => '<p>Dans une usine, deux jouets mal fabriqu&eacute;s, un chat borgne et un chien unijambiste, sont mis au rebut. Tous deux s&rsquo;&eacute;vadent et se retrouvent perdus dans le monde urbain, rempli d&#39;humains gigantesques et qui se d&eacute;placent trop rapidement autour d&#39;eux. M&eacute;lange de dessins anim&eacute;s et de d&eacute;cors r&eacute;els de Belfast film&eacute;s en acc&eacute;l&eacute;r&eacute; (stopmotion), &laquo;&nbsp;Macropolis&nbsp;&raquo; est une fable moderne d&rsquo;une grande force visuelle.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/6BsXixqMkw4', 
                        'nomFilm' => 'MACROPOLIS', 
                        'resumeFilm' => '<p>Two disabled squeaky toys, a one-eyed cat and a one-legged dog, escape from the factory and find themselves lost and alone in urban world full of over-sized humans, all moving very quickly around them. It&rsquo;s new, strange and a little daunting. But they explore, play and re-interpret everyday objects through their unique perspective. Using animated figures in real settings, filmed in stopmotion, &ldquo;Macropolos&rdquo; is a modern tale with great visual strength.&nbsp;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Joel Simon' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Ignacio Tatay')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Ignacio Tatay')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/MANOAMANO_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 7, 
                        'boiteProduction' => 'ESCAC']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/3PYhN1w4xU8', 
                        'nomFilm' => 'MANO A MANO', 
                        'resumeFilm' => '<p>On peut tol&eacute;rer la proximit&eacute; avec les autres dans un autobus bond&eacute; aux heures de pointe, tant que nous gardons nos mains chez nous. Mais quand Laura remarque qu&#39;elle partage la main courante avec un &eacute;tranger tr&egrave;s attirant, elle d&eacute;cide de glisser sa main quelques centim&egrave;tres vers lui.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/3PYhN1w4xU8', 
                        'nomFilm' => 'MANO A MANO', 
                        'resumeFilm' => '<p>We can tolerate proximity with others on a crowded bus during rush-hour, so long as we keep our hands to ourselves. But when Laura notices she shares the handrail with a very attractive stranger, she decides to slide her hand a few inches towards him.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'ES', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Ignacio Tatay' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Shanoli Bose')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Shanoli Bose')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/MARGARITAWITHASTRAW_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 100, 
                        'boiteProduction' => 'Shonali Bose & Nilesh Maniyar']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/gVKn9vWYO2k', 
                        'nomFilm' => 'MARGARITA WITH A STRAW', 
                        'resumeFilm' => '<p>Laila est une jeune fille en fauteuil, romantique et secr&egrave;tement rebelle. D&eacute;passant sa c&eacute;r&eacute;brol&eacute;sion, elle part &agrave; la d&eacute;couverte de la vie affective et amoureuse. Si ces aventures grisantes lui causent bien des blessures et des conflits avec ses proches, elles lui permettent de trouver la force d&#39;&ecirc;tre vraiment elle-m&ecirc;me.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/gVKn9vWYO2k', 
                        'nomFilm' => 'MARGARITA WITH A STRAW', 
                        'resumeFilm' => '<p>Laila is a young romantic, a secret rebel in a wheelchair. Undeterred by cerebral palsy, she embarks on a journey of sexual discovery. Her exhilarating adventures cause a rift both within herself and with those she is closest to but, ultimately, it is in the intensity of these bonds that she finds the strength to be truly herself.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Shanoli Bose' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Karim Ayari')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Karim Ayari')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/PERFECT_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 12, 
                        'boiteProduction' => 'Treepot Media']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/KrSvxRNLbSY', 
                        'nomFilm' => 'PERFECT', 
                        'resumeFilm' => '<p>Un homme porteur du syndrome de la Tourette (troubles obsessionnels compulsifs) essaye de se lib&eacute;rer de ses imperfections aupr&egrave;s de son psy. Mais que signifie en fait la perfection&nbsp;? Arrivera-t-il &agrave; s&eacute;duire la femme qu&rsquo;il convoite&nbsp;?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/KrSvxRNLbSY', 
                        'nomFilm' => 'PERFECT', 
                        'resumeFilm' => '<p>A man suffering from Tourette syndrome attempts to free himself from his imperfections with his therapist. But what is perfection? Will he dare to seduce the woman he covets?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'CA', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Karim Ayari' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Nicholas Jeffries')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Nicholas Jeffries')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/PHANTOMPAIN_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 5, 
                        'boiteProduction' => 'David Valkenet']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/pKCU1xJh0eE', 
                        'nomFilm' => 'PHANTOM PAIN', 
                        'resumeFilm' => '<p>Une douleur fant&ocirc;me (&quot;Phantom Pain&quot;) correspond &agrave; de la douleur, de l&#39;inconfort, des picotements ou d&#39;autres sensations dans la zone d&#39;un membre manquant ou d&#39;une autre partie du corps amput&eacute;e. Ce documentaire est un portrait abstrait et lyrique de l&#39;exp&eacute;rience de cette douleur fant&ocirc;me d&rsquo;Amanda, amput&eacute;e des deux jambes.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/pKCU1xJh0eE', 
                        'nomFilm' => 'PHANTOM PAIN', 
                        'resumeFilm' => '<p>Phantom Pain is characterized by the experience of pain, discomfort, tingling or other sensations in the area of a missing limb or other body part. This documentary is an abstract and lyrical portrayal of Amanda&#39;s, a bipedal amputee, experience of phantom pain.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Nicholas Jeffries' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Anais Barbeau-Lavalette & Andre Turpin')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Anais Barbeau-Lavalette & Andre Turpin')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
               $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/PRENDS-MOI_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '16', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 10, 
                        'boiteProduction' => 'By-Pass Films']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/jDJjGrHoxFU', 
                        'nomFilm' => 'PRENDS-MOI', 
                        'resumeFilm' => '<p>Un infirmier d&#39;un centre pour handicap&eacute;s est confront&eacute; &agrave; ses principes lorsqu&rsquo;il doit accomplir&nbsp;une t&acirc;che particuli&egrave;re&nbsp;: pr&eacute;parer un couple pour leurs relations sexuelles.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/jDJjGrHoxFU', 
                        'nomFilm' => 'PRENDS-MOI', 
                        'resumeFilm' => '<p>A nurse working in a center for the disabled is confronted to his principles when he&rsquo;s asked to accomplish a particular task : prepare two persons to make love.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'CA', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Anais Barbeau-Lavalette & Andre Turpin' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Sophie Robert')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Sophie Robert')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/QUELQUECHOSEENPLUS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 79, 
                        'boiteProduction' => 'Sophie Robert']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/WnxTqX3lhvc', 
                        'nomFilm' => 'QUELQUE CHOSE EN PLUS', 
                        'resumeFilm' => '<p>&quot;Quelque chose en plus&quot; t&eacute;moigne en images de ce qui se passe dans deux &eacute;tablissements m&eacute;dicosociaux fran&ccedil;ais qui pratiquent la m&eacute;thode ABA. Ces &eacute;tablissements accueillent des enfants autistes s&eacute;v&egrave;res, non verbaux. Depuis mars 2012, la Haute Autorit&eacute; de Sant&eacute; en France recommande une prise en charge &eacute;ducative, comportementale et d&eacute;veloppementale pr&eacute;coce de l&#39;autisme. Ce type de prise en charge, peu d&eacute;velopp&eacute;e en France, est appliqu&eacute;e partout ailleurs en Europe et aux Etats-Unis. Elle permet aux enfants de gagner en autonomie, d&#39;entrer en communication et de s&#39;ins&eacute;rer &agrave; l&#39;&eacute;cole et dans le monde ordinaire.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/WnxTqX3lhvc', 
                        'nomFilm' => 'QUELQUE CHOSE EN PLUS', 
                        'resumeFilm' => '<p>&quot;Quelque chose en plus&quot;&nbsp;is a testimony of what happens in two french socio-medical institutions who practice ABA. Both institutions accomodate severely autistic and non verbal children. Since March 2012, the french &quot;Haute Autorit&eacute; de Sant&eacute;&quot;&nbsp;in France recommends an educational, behavioral and developmental approach to austim. This support, underdeveloped in France, is used everywhere else in Europe and in the United Stats. It has proven to allow children to gain autonomy, to communicate and to fit in school and in the ordinary world.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Sophie Robert' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Christopher Cass')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Christopher Cass')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/SCRUBBERS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '16', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 14, 
                        'boiteProduction' => 'Hantaro Production']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/v0u7gH797NY', 
                        'nomFilm' => 'SCRUBBERS', 
                        'resumeFilm' => '<p>L&rsquo;histoire d&rsquo;un jeune porteur de l&rsquo;ALS (la maladie de Lou Gehrig) qui passe ses derniers moments avec une prostitu&eacute;e avant de rentrer &agrave; l&#39;h&ocirc;pital.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/v0u7gH797NY', 
                        'nomFilm' => 'SCRUBBERS', 
                        'resumeFilm' => '<p>The story of a young ALS (Lou Gehrig&#39;s disease) patient who decides to spend his last moments of freedom with a prostitute before checking into the hospital.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Christopher Cass' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Patty Berne')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Patty Berne')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/SINSINVALID_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '16', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 32, 
                        'boiteProduction' => 'The AEPOCH Fund']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/B8I0soyowuY', 
                        'nomFilm' => 'SINS INVALID', 
                        'resumeFilm' => '<p>&quot;Sexualit&eacute; et handicap&quot; est un sujet tabou. &laquo;&nbsp;Sins Invalid&nbsp;&raquo; est un projet th&eacute;&acirc;tral qui c&eacute;l&egrave;bre les artistes de couleur, homosexuels, transgenres et handicap&eacute;s. Depuis 2006, la troupe explore les th&egrave;mes de la sexualit&eacute;, de la personnification et du corps handicap&eacute;, proposant ainsi un nouveau paradigme et revendiquant l&rsquo;&eacute;galit&eacute; dans ce domaine, au-del&agrave; du handicap.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/B8I0soyowuY', 
                        'nomFilm' => 'SINS INVALID', 
                        'resumeFilm' => '<p>&laquo;&nbsp;Sins Invalid&nbsp;&raquo; documents a performance project celebrating artists of color and queer/gender variant artists with disabilities, serving as an entryway into the absurdly taboo topic of sexuality and disability. Since 2006, performances have explored themes of sexuality, embodiment, and the disabled body, manifesting a new paradigm -- disability justice.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Patty Berne' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Michael Dinesen')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Michael Dinesen')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/SKINANDBONES_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2015', 
                        'interdictionAge' => '16', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 57, 
                        'boiteProduction' => 'Basmati Films Ellen Riis']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/9E2IPSTPRAA', 
                        'nomFilm' => 'SKIN AND BONES', 
                        'resumeFilm' => '<p>Trois jeunes hommes partagent une amiti&eacute; bas&eacute;e sur l&#39;humour noir, et comme tous les autres jeunes, ils portent un grand int&eacute;r&ecirc;t pour le cin&eacute;ma, le sport, les filles et la f&ecirc;te. Ils partagent &eacute;galement une vie s&eacute;rieusement hypoth&eacute;qu&eacute;e&nbsp;: ils souffrent d&rsquo;une dystrophie musculaire progressive. Le film suit leur vie quotidienne pendant quatre ans, dont un voyage &agrave; Berlin pour trouver des partenaires sexuels. Contre toute attente, &laquo;&nbsp;Skin &amp; Bones&nbsp;&raquo; est une ode merveilleuse et r&eacute;confortante sur la vie.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/9E2IPSTPRAA', 
                        'nomFilm' => 'SKIN AND BONES', 
                        'resumeFilm' => '<p>Three young men share a friendship built around black humour and, as most young boys, they take great interest in films, sports, girls and parties. But they also share some challenging living terms, as they suffer from Progressive Muscular Dystrophy. Michael Dinesen followed them in their daily lives for four year, and notably on a Berlin trip to find parties and girls. A wonderful and heart-warming celebration of life against all odds.&nbsp;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'DK', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Michael Dinesen' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jose Cruz Gurrutxaga & Aitor Aranguren')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jose Cruz Gurrutxaga & Aitor Aranguren')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/SOWHATDOWEKNOWNOW_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 7, 
                        'boiteProduction' => 'Banatu Filmak']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/dN3-S7-HHuM', 
                        'nomFilm' => 'SO WHAT DO WE KNOW NOW', 
                        'resumeFilm' => '<p>Que se passerait-il si la trisomie 21 &eacute;tait la normalit&eacute;&nbsp;et qu&rsquo;ainsi une &eacute;chographie r&eacute;v&eacute;lant l&rsquo;absence de ce syndrome &eacute;quivaudrait &agrave; une annonce de handicap&nbsp;? Serions-nous en mesure de l&rsquo;accepter ?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/dN3-S7-HHuM', 
                        'nomFilm' => 'SO WHAT DO WE KNOW NOW', 
                        'resumeFilm' => '<p>What if Down syndrome was seen as the normality? What if an ultrasound scan revealing the absence of this third chromosome led to diagnosis of deficiency? Would we be able to accept it?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'ES', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Jose Cruz Gurrutxaga & Aitor Aranguren' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Samara Hersch')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Samara Hersch')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/SUPER_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 6, 
                        'boiteProduction' => 'Jeremy Flyn']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/aH8NeDeFFKo', 
                        'nomFilm' => 'SUPER', 
                        'resumeFilm' => '<p>&laquo;&nbsp;Super&nbsp;&raquo; suit une &eacute;quipe de super-h&eacute;ros peu ordinaires qui tentent de sauver un supermarch&eacute; local au bord de la faillite suite &agrave; du vandalisme r&eacute;p&eacute;t&eacute;. Une com&eacute;die charmante et singuli&egrave;re.</p>

 <p>&nbsp;</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/aH8NeDeFFKo', 
                        'nomFilm' => 'SUPER', 
                        'resumeFilm' => '<p>&laquo;&nbsp;Super&nbsp;&raquo; follows a team of superheroes as they save a local supermarket from going under due to repeated acts of vandalism. A charming and singular comedy.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Samara Hersch' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jake Alexander McAfee')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jake Alexander McAfee')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/THECOMMUTE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 3, 
                        'boiteProduction' => 'Rabbit Content']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/RJRlxThH5zE', 
                        'nomFilm' => 'THE COMMUTE', 
                        'resumeFilm' => '<p>Un homme en fauteuil se voit refuser un transport en taxi. Il est donc condamn&eacute; &agrave; se d&eacute;placer dans New York en transport en commun. Arrivera-t-il &agrave; temps pour l&#39;anniversaire de sa fille ?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/RJRlxThH5zE', 
                        'nomFilm' => 'THE COMMUTE', 
                        'resumeFilm' => '<p>A man in armchair is denied taxi service. He thus has to move around New York in public transportation. Will he be in time for his daughter&#39;s birthday?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Jake Alexander McAfee' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Charlie Swinbourne')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Charlie Swinbourne')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/THEKISS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 7, 
                        'boiteProduction' => 'Up Stream Scheme Data South']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/pMep_qcCe54', 
                        'nomFilm' => 'THE KISS', 
                        'resumeFilm' => '<p>Un couple se rencontre pour la premi&egrave;re fois et commence &agrave; parler &agrave; un couple de sourds assis &agrave; une table voisine. Un &eacute;trange rapport se tisse entre eux... Des sourds peuvent-ils se moquer des entendants ?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/pMep_qcCe54', 
                        'nomFilm' => 'THE KISS', 
                        'resumeFilm' => '<p>A couple on their first date start talking to the couple on the next table. There is a weird connection between them...&nbsp;Can deaf people make fun of those who can hear?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Charlie Swinbourne' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Noah David Smith')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Noah David Smith')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/STEPHENWILTSHIRE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 4, 
                        'boiteProduction' => 'UBS']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/PlgByKbePeA', 
                        'nomFilm' => 'STEPHEN WILTSHIRE', 
                        'resumeFilm' => '<p>Stephen a le talent incroyable de pouvoir dessiner de m&eacute;moire des paysages de villes. Apr&egrave;s avoir pass&eacute; quelques heures dans un h&eacute;licopt&egrave;re survolant New York de Brooklyn jusqu&#39;&agrave; la pointe de Manhattan, il a m&eacute;moris&eacute; le panorama de la ville et est retourn&eacute; dans son studio pour le dessiner, trois jours durant.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/PlgByKbePeA', 
                        'nomFilm' => 'STEPHEN WILTSHIRE', 
                        'resumeFilm' => '<p>Stephen has the amazing talent of drawing city skylines from memory. Having spent only a few hours in a helicopter flying from Brooklyn to the tip of Manhattan, he memorized the city skyline and headed back to a studio to begin his drawing. Stephen then spent the next three days sketching the skyline.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Noah David Smith' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Mahboubeh Honarian')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Mahboubeh Honarian')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/UNKNOWNBEAUTY_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 47, 
                        'boiteProduction' => 'Mahboubeh Honarian']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/PVZC5cKjWXI', 
                        'nomFilm' => 'UNKNOWN BEAUTY', 
                        'resumeFilm' => '<p>&quot;Unkown Beauty&quot; est un documentaire mouvant mettant en sc&egrave;ne trois femmes iraniennes qui tentent de vivre de fa&ccedil;on autonome et d&#39;&eacute;chapper &agrave; l&#39;isolement. Malgr&eacute; leurs luttes quotidiennes dans un pays qui leur offre peu de services, elles arrivent &agrave; g&eacute;rer&nbsp;leur handicap et travaillent dur pour pratiquer leurs talents artistiques.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/PVZC5cKjWXI', 
                        'nomFilm' => 'UNKNOWN BEAUTY', 
                        'resumeFilm' => '<p>&quot;Unknown Beauty&quot;&nbsp;is a moving documentary portraying the lives of three iranian women who attempt to live independently and escape isolation. Despite their daily struggles in a country that offers them meager services, these women embrace their disabilities and work hard to practice their artistic talents.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'IR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Mahboubeh Honarian' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Alex Vetrov & Uladzimir Taukachou')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Alex Vetrov & Uladzimir Taukachou')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/WAITINGFORATRAIN_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 20, 
                        'boiteProduction' => 'UT CINEMA']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/BmCxH8-Ldjo', 
                        'nomFilm' => 'WAITING FOR A TRAIN', 
                        'resumeFilm' => '<p>&nbsp;Un jeune homme tombe sous le charme d&rsquo;une femme dans une gare. Il la photographie et lui donne son adresse e-mail pour lui envoyer les photos. L&rsquo;attirance est manifestement r&eacute;ciproque, mais il ne se rend pas compte qu&rsquo;elle est sourde. Arriveront-ils &agrave; communiquer&nbsp;? Que se passera-t-il quand il se rendra compte de sa surdit&eacute;&nbsp;?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/BmCxH8-Ldjo', 
                        'nomFilm' => 'WAITING FOR A TRAIN', 
                        'resumeFilm' => '<p>A young man falls in love with a woman in a train station. He takes pictures of her and gives her his email address to send them to her. The attraction is obviously mutual, but he does not realize that she&#39;s deaf. Will they able to communicate? What will happen when he&nbsp; learns she can&#39;t hear?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Alex Vetrov & Uladzimir Taukachou' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Genevieve Clay-Smith')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Genevieve Clay-Smith')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/WORKMATE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 19, 
                        'boiteProduction' => 'Tastemedia']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/uFKRNWNCYU4', 
                        'nomFilm' => 'WORKMATE', 
                        'resumeFilm' => '<p>Quand un employ&eacute; de bureau introverti est invit&eacute; par un nouveau coll&egrave;gue aveugle &agrave; aller faire du tandem &agrave; v&eacute;lo, il tente par tous les moyens d&rsquo;y &eacute;chapper.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/uFKRNWNCYU4', 
                        'nomFilm' => 'WORKMATE', 
                        'resumeFilm' => '<p>When an introverted office worker is invited by a new colleague with a vision impairment to go cycling,&nbsp;he desperately tries to find a way out of it.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Genevieve Clay-Smith' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Geraldine Wurzburg')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Geraldine Wurzburg')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/WRETCHES&JABBERERS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2011', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 94, 
                        'boiteProduction' => 'Stateart']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/chcq3QHP--M', 
                        'nomFilm' => 'WRETCHES & JABBERERS', 
                        'resumeFilm' => '<p>&laquo;&nbsp;Wretches &amp; Jabberers&nbsp;&raquo; est un &laquo;&nbsp;road movie&nbsp;&raquo; qui accompagne Tracy Thresher et Larry Bissonnette, deux ambassadeurs des droits des personnes handicap&eacute;es, dans leur qu&ecirc;te pour changer la perception des gens sur l&rsquo;autisme. Ils revendiquent leurs capacit&eacute;s et intelligence, au-del&agrave; de leurs troubles du comportement. Ils parcourent le monde, de conf&eacute;rences en conf&eacute;rences, mais aussi &agrave; la rencontre d&rsquo;autres autistes, du Sri Lanka&nbsp;&agrave; la Finlande ou au Japon. Un film et un t&eacute;moignage d&rsquo;une grande libert&eacute;, non d&eacute;nu&eacute; d&rsquo;humour.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/chcq3QHP--M', 
                        'nomFilm' => 'WRETCHES & JABBERERS', 
                        'resumeFilm' => '<p>Travel with disability rights advocates, Tracy Thresher and Larry Bissonnette, in a bold quest to change attitudes about the intelligence and abilities of people with autism. Meet their fellow autists in Sri Lanka, Finland and Japan in a documentary film that is a provocative mixture of advocacy and travel - seasoned with liberal doses of humor.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Geraldine Wurzburg' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Miles Jay')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Miles Jay')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/CARLY\'SCAFE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 2, 
                        'boiteProduction' => 'OPC']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/cqHIsRZ3GZA', 
                        'nomFilm' => 'CARLY\'S CAFE', 
                        'resumeFilm' => '<p>&laquo;&nbsp;L&#39;autisme m&#39;a enferm&eacute;e dans un corps que je ne peux contr&ocirc;ler.&raquo;</p>

 <p>C&rsquo;est par ces mots que Carly exprime sa condition d&rsquo;autiste dans un livre qu&rsquo;elle a &eacute;crit. Pour promouvoir ce livre, le r&eacute;alisateur Miles Jay a tent&eacute; de traduire visuellement le v&eacute;cu de Carly dans une situation concr&egrave;te.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/cqHIsRZ3GZA', 
                        'nomFilm' => 'CARLY\'S CAFE', 
                        'resumeFilm' => '<p>&quot;Autism trapped me in a body that I can&#39;t control.&quot;</p>

 <p>Those words are those Carly has chosen to use to express her condition in a book she wrote. To promote this book, director Miles Jay attempted to visually translate Carly&#39;s experience.</p>

 <p>&nbsp;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'CA', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 10]); 

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Miles Jay' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Michelle Friedline')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Michelle Friedline')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/AUTISMINLOVE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 8, 
                        'boiteProduction' => 'The Documentary Film Program - Wake Forest University']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/ofCnmhqvYJ4', 
                        'nomFilm' => 'AUTISM IN LOVE', 
                        'resumeFilm' => '<p>RV Kuser est un autiste de 50 ans qui a surmont&eacute; habilement ses incompatibilit&eacute;s sociales et ses comportements bizarres pour embrasser la vie. Lui et sa femme Marl&egrave;ne partagent des secrets sur leur lien et r&eacute;v&egrave;lent le vrai sens d&rsquo;un amour inconditionnel.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/ofCnmhqvYJ4', 
                        'nomFilm' => 'AUTISM IN LOVE', 
                        'resumeFilm' => '<p>RV Kuser is a clever man of 50, with Autism, who has overcome his deficient social skills and his odd behaviors to embrace life. He and his wife Marlene share secrets about their bond and reveal the true meaning of unconditional love.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Michelle Friedline' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Collectif (films multiples)')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Collectif (films multiples)')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','Clip')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','Clip')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/PUB,COMEtHandicap_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2015', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 55, 
                        'boiteProduction' => 'Agences de com']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/bA-1hmoBSQY', 
                        'nomFilm' => 'PUB, COM et Handicap', 
                        'resumeFilm' => '<p>Comment communique-t-on sur le handicap &agrave; travers le monde. Une s&eacute;lection d&eacute;tonante d&#39;une trentaine de films de communication tr&egrave;s courts sur le handicap, &eacute;manant des quatre coins du monde, &agrave; l&#39;image de &quot;la nuit des publivores&quot;.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/bA-1hmoBSQY', 
                        'nomFilm' => 'PUB, COM et Handicap', 
                        'resumeFilm' => '<p>How does people communicante about disability. An overview of shorts films about disability from all around the world.</p>']);
                
                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'WW', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 10]); 
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 11]); 

            } else {
                echo "error : metrage 'Clip' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Collectif (films multiples)' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Adam Goldhammer')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Adam Goldhammer')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/JESSE_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2013', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 14, 
                        'boiteProduction' => 'Adam Goldhammer']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/BKDHk4BxTC4', 
                        'nomFilm' => 'JESSE', 
                        'resumeFilm' => '<p>Suite au d&eacute;c&egrave;s de leurs parents dans un accident de la route, Kelly, 22 ans, se retrouve dans la position &eacute;crasante de prendre soin de son fr&egrave;re autiste, Jesse.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/BKDHk4BxTC4', 
                        'nomFilm' => 'JESSE', 
                        'resumeFilm' => '<p>After their parents are killed in a car accident, Kelly, 22, finds herself in the overwhelming position of caretaker for her autistic brother Jesse.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'CA', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Adam Goldhammer' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Thomas Rhazi')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Thomas Rhazi')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','Clip')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','Clip')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/DANSLESYEUXD\'UNENFANT_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 2, 
                        'boiteProduction' => 'LES TELECREATEURS']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/AIFK2fkn9r0', 
                        'nomFilm' => 'DANS LES YEUX D\'UN ENFANT', 
                        'resumeFilm' => '<p>Des parents et des enfants sont assis sans se voir face &agrave; un &eacute;cran sur lequel sont diffus&eacute;es des images de personnes faisant des grimaces. La consigne qui leur est donn&eacute;e, est d&rsquo;imiter les grimaces.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/AIFK2fkn9r0', 
                        'nomFilm' => 'DANS LES YEUX D\'UN ENFANT', 
                        'resumeFilm' => '<p>Parents with their children were invited to participate in a educational game. The instruction which is given to them, is to imitate the grimaces.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 3]);  
              

            } else {
                echo "error : metrage 'Clip' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Thomas Rhazi' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Miguel Jiron')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Miguel Jiron')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','Clip')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','Clip')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/SENSORYOVERLOAD_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 2, 
                        'boiteProduction' => 'Miguel Jiron']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/s0M_Dmdl3ek', 
                        'nomFilm' => 'SENSORY OVERLOAD', 
                        'resumeFilm' => '<p>Un jeune gar&ccedil;on per&ccedil;oit le monde d&rsquo;une mani&egrave;re &eacute;trange, effrayante et compliqu&eacute;e. Cette perception nous est traduite en images au travers d&rsquo;animations de toute beaut&eacute;.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/s0M_Dmdl3ek', 
                        'nomFilm' => 'SENSORY OVERLOAD', 
                        'resumeFilm' => '<p>A young boy perceives the world in a strange, terrible and complicated way. This perception is translated to us into image through extremely beautiful pictures.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'US', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 1]);  

            } else {
                echo "error : metrage 'Clip' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Miguel Jiron' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Nima Raoofi')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Nima Raoofi')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','Clip')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','Clip')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/MYSHOES_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2012', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 4, 
                        'boiteProduction' => 'Media Art Prod Skills']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/LhDV4LT9MGg', 
                        'nomFilm' => 'MY SHOES', 
                        'resumeFilm' => '<pre>
 Un jeune garçon pauvre est assis à côté d&#39;un riche garçon dans un parc. Au lieu de se concentrer sur ce qu&#39;il a, il souhaite devenir le garçon riche. Quelques secondes plus tard son souhait se réalise. Son souhait est-il réalisable ? </pre>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/LhDV4LT9MGg', 
                        'nomFilm' => 'MY SHOES', 
                        'resumeFilm' => '<p>A young poor boy sits next to a rich boy in a park. Instead of focusing on what he has, he wishes to become the rich boy. Is it possible&nbsp;?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'Clip' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Nima Raoofi' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jimmy Ennett')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jimmy Ennett')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','Clip')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','Clip')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/DEFINEBYABILITY(DEFINIRPARLESCAPACITES)_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 3, 
                        'boiteProduction' => 'Jane Barrett, Sophie Brown and Jimmy Ennett']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/DfCgbyieUgs', 
                        'nomFilm' => 'DEFINE BY ABILITY (DEFINIR PAR LES CAPACITES)', 
                        'resumeFilm' => '<p>Nous ne nous d&eacute;finissons pas par ce que nous ne pouvons pas faire, alors pourquoi d&eacute;finissons-nous les gens par leur invalidit&eacute; ? Un court-m&eacute;trage que d&eacute;fie la fa&ccedil;on dont nous regardons le monde...</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/DfCgbyieUgs', 
                        'nomFilm' => 'DEFINE BY ABILITY (DEFINIR PAR LES CAPACITES)', 
                        'resumeFilm' => '<p>We don&#39;t define ourselves by what we can&rsquo;t do so why do we define people by their disability? A short film which challenges the way we look at the world...</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'AU', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 6]);  

            } else {
                echo "error : metrage 'Clip' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Jimmy Ennett' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Yan Giroux')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Yan Giroux')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','Clip')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','Clip')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/JUSTE2MINUTES_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2010', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 4, 
                        'boiteProduction' => 'Assoc']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/LhDV4LT9MGg', 
                        'nomFilm' => 'JUSTE 2 MINUTES', 
                        'resumeFilm' => '<p>Court-m&eacute;trage sur l&#39;importance de respecter les places de stationnement r&eacute;serv&eacute;es aux handicap&eacute;s et qui d&eacute;montre qu&#39;il y a des deux minutes qui peuvent devenir une &eacute;ternit&eacute;.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/LhDV4LT9MGg', 
                        'nomFilm' => 'JUSTE 2 MINUTES', 
                        'resumeFilm' => '<p>Short film on the importance to respect parking places reserved for the handicapped persons and which demonstrates that two minutes which can become an eternity.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'CA', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'Clip' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Yan Giroux' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Olivier Marchal Jerome Thomas et les eleves')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Olivier Marchal Jerome Thomas et les eleves')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/AU-DELADESMOTS_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 5, 
                        'boiteProduction' => 'Lycée Arthur Varoquaux']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/qNQM8QpVM-Y', 
                        'nomFilm' => 'AU-DELA DES MOTS', 
                        'resumeFilm' => '<p>Dans une biblioth&egrave;que publique, un jeune homme s&#39;&eacute;prend d&#39;une jeune femme. Face au silence impos&eacute; par le lieu, comment arriveront-il &agrave; communiquer ? Et si tous deux &eacute;taient ainsi mis sur un pied d&#39;&eacute;galit&eacute; ?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/qNQM8QpVM-Y', 
                        'nomFilm' => 'AU-DELA DES MOTS', 
                        'resumeFilm' => '<p>In a pubic library, a young man falls in love with a young woman. How will they be able to communicate in a such a silent place&nbsp;? What if this situation put them both on an equal footing&nbsp;?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Olivier Marchal Jerome Thomas et les eleves' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Jade Le Bloas & Camille Mapoula')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Jade Le Bloas & Camille Mapoula')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','CM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','CM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/JESUISJUSTELA_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2015', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 3, 
                        'boiteProduction' => 'Jade de Bloas']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/D12amV16RQE', 
                        'nomFilm' => 'JE SUIS JUSTE LA', 
                        'resumeFilm' => '<p>Sarah a du mal a faire des choix, mais elle n&#39;est pas seulement ind&eacute;cise, elle est Asperger. Et les choix qui lui posent probl&egrave;me sont bien loin de vos pr&eacute;occupations quotidiennes.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/D12amV16RQE', 
                        'nomFilm' => 'JE SUIS JUSTE LA', 
                        'resumeFilm' => '<p>Making choices is complicated for Sarah. But she&#39;s not only unsettled, she is aslo Asperger. And the choices she struggles with are far from your daily concerns.<br />
 &nbsp;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'CM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Jade Le Bloas & Camille Mapoula' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Asaf Korman')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Asaf Korman')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','LM')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','LM')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/CHELLI(NEXTTOHER)_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '16', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 90, 
                        'boiteProduction' => '2-Team Productions']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/qCT9RB-I1dk', 
                        'nomFilm' => 'CHELLI (NEXT TO HER)', 
                        'resumeFilm' => '<p>Chelli &eacute;l&egrave;ve seule sa soeur Gabby, porteuse d&rsquo;un handicap mental. Quand un assistant social se rend compte qu&rsquo;elle la laisse seule &agrave; la maison pour aller travailler, Chelli est contrainte de la placer dans un centre de jour. Le&nbsp;vide laiss&eacute; par l&rsquo;absence de sa soeur laisse la place &agrave; un nouvel homme, Zohar. Celui-ci cr&eacute;era une nouvelle cassure dans la relation symbiotique entre les deux soeurs, alors qu&rsquo;ils glissent lentement dans un triangle &eacute;trange, o&ugrave; les limites entre l&rsquo;amour, le sacrifice, l&rsquo;attention et la torture sont bris&eacute;es.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/qCT9RB-I1dk', 
                        'nomFilm' => 'CHELLI (NEXT TO HER)', 
                        'resumeFilm' => '<p>Chelli is raising her mentally disabled sister Gabby all by herself. When the social worker discovers she leaves her sister alone in the house while at work, Chelli is forced to place her in a day-care center and the void left by her sister&rsquo;s absence makes room for a man in her life. That man, Zohar, tears another crack in the symbiotic relationship of the two sisters, as they are slowly drawn into a strange threesome, where boundaries between love, sacrifice, nurturing and torturing are broken.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'IL', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 7]);  

            } else {
                echo "error : metrage 'LM' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Asaf Korman' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Alain Gsponer')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Alain Gsponer')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','Clip')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','Clip')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 5, 
                        'boiteProduction' => 'ProInfirmis']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'BECAUSE WHO\'S PERFECT (Pro Infirmis)', 
                        'resumeFilm' => '<p>Et si les mannequins des magasins &eacute;tait aussi &agrave; l&#39;image des personnes porteuses de handicap ?</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'BECAUSE WHO\'S PERFECT (Pro Infirmis)', 
                        'resumeFilm' => '<p>What if mannequins were also the reflections of disabled persons?</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'CH', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 3]);   

            } else {
                echo "error : metrage 'Clip' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Alain Gsponer' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Steve Cope')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Steve Cope')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','Clip')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','Clip')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/SENSORYSENSIVITY_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2014', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 1, 
                        'boiteProduction' => 'National Autistic Society']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => 'http://www.youtube.com/embed/xD3YejuPrhk', 
                        'nomFilm' => 'SENSORY SENSIVITY', 
                        'resumeFilm' => '<p>Le r&eacute;alisateur Steve Cope a collabor&eacute; avec la National Autistic Society afin de cr&eacute;er un petit film &eacute;tonnant qui tente d&#39;exprimer la perception parfois agressive des choses que ressentent les autistes.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => 'http://www.youtube.com/embed/xD3YejuPrhk', 
                        'nomFilm' => 'SENSORY SENSIVITY', 
                        'resumeFilm' => '<p>Director Steve Cope collaborated with the National Autistic Society to create an inspirational film to raise awareness for the cause during National Autism Awareness Month. Steve Cope and Kit Dayaram of The News, developed the script to illustrate one symptom many people with autism experience - sensory sensitivity.</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'GB', 
                        'idFilm' => $id]);
              
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 3]);   

            } else {
                echo "error : metrage 'Clip' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Steve Cope' non trouvé"."
                    ";
        }              
















        if (DB::table('Realisateur')->where('nomRealisateur','Joseph Schovanec')->count() > 0) {
            $idRealisateur = DB::table('Realisateur')->where('nomRealisateur','Joseph Schovanec')->get()->first()->idRealisateur;
            if (DB::table('Metrage')->where('initialMetrage','Clip')->count() > 0) {
                $initialMetrage = DB::table('Metrage')->where('initialMetrage','Clip')->get()->first()->initialMetrage;
                $id = DB::table('Film')
                    ->insertGetId([
                        'urlImageFilm' => 'films/JOSEPHSCOVANEC_200.jpg', 
                        'idRealisateur' => $idRealisateur, 
                        'anneeProduction' => '2015', 
                        'interdictionAge' => '', 
                        'initialMetrage' => $initialMetrage, 
                        'dureeMinuteFilm' => 90, 
                        'boiteProduction' => 'Joseph Scovanec']); 

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'fr', 
                        'lienVideo' => '', 
                        'nomFilm' => 'JOSEPH SCOVANEC', 
                        'resumeFilm' => '<p>Jospeh Schovanec&nbsp;est avant tout un &ecirc;tre humain affable et d&eacute;licieux. Mais il est aussi autiste asperger, auteur des best-sellers <em>&laquo;&nbsp;Je suis &agrave; l&rsquo;est&nbsp;&raquo;</em> et <em>&laquo;&nbsp;Eloge du voyage &agrave; l&rsquo;usage des autistes et de ceux qui ne le sont pas assez&nbsp;&raquo;</em>. Invit&eacute; sur les plateaux d&rsquo;Ardisson, de Ruquier, du &laquo;&nbsp;Grand Journal&nbsp;&raquo; et d&rsquo;ailleurs, ses mots font &agrave; chaque fois mouche. Pr&eacute;sent au festival en tant que membre du jury, il nous donnera une conf&eacute;rence/ &laquo;&nbsp;stand up&nbsp;&raquo; charg&eacute;e de l&rsquo;humour et de l&rsquo;humanit&eacute; dont il a le secret.</p>']);   

                DB::table('FilmTraduction')
                    ->insertGetId([
                        'idFilm' => $id, 
                        'initialLangue' => 'en', 
                        'lienVideo' => '', 
                        'nomFilm' => 'JOSEPH SCOVANEC', 
                        'resumeFilm' => '<p>Joseph Schovanec is first and foremost an affable and exquisite human being. But he is also a person with Asperger Syndrom, writer of various best-sellers such as &quot;Je suis &agrave; l&#39;est&quot; and &quot;Eloge du voyage &agrave; l&#39;usage des autistes et de ceux qui ne le sont pas assez&quot;. Present at the festival as a member of the jury, he will also give us a stand up conference filled with humour and humanity.&nbsp;</p>']);

                DB::table('PaysFilm')
                    ->insertGetId([
                        'initialPays' => 'FR', 
                        'idFilm' => $id]);
                
                DB::table('GenreFilmDuFilm')
                    ->insert([
                        'idFilm' => $id,
                        'idGenreFilm' => 12]); 
                

            } else {
                echo "error : metrage 'Clip' non trouvé"."
                    ";
            }
        } else {
            echo "error : realisateur 'Joseph Schovanec' non trouvé"."
                    ";
        }      

        /*
         * 
select 
concat("
if (DB::table('Seance')->where('dateTimeSeance','",seance.date,"')->count() > 0) {
    $idSeance = DB::table('Seance')->where('dateTimeSeance','",seance.date,"')->get()->first()->idSeance;
    if (DB::table('Film')->where('urlImageFilm','",REPLACE(image.url,'\'','\\\''),"')->count() > 0) {
        $idFilm = DB::table('Film')->where('urlImageFilm','",REPLACE(image.url,'\'','\\\''),"')->get()->first()->idFilm;
        echo \"iFilm = $idFilm \\n\\ridSeance : $idSeance\\n\\r\\n\\r\";
        DB::table('FilmParSeance')
            ->insert([
                'idFilm' => $idFilm,
                'idSeance' => $idSeance,
                 '' => ",filmbyseance.ordre,"]); 
    } else {
        echo \"error : no film with image url '",REPLACE(image.url,'\'','\\\''),"'\\n\\r\\n\\r\";
    }
} else {
    echo \"error : no séance at date of the '",seance.date,"''\\n\\r\\n\\r\";
}")
from filmbyseance, film, seance, image 
where film.id = filmbyseance.film_id 
	and filmbyseance.seance_id = seance.id 
    and image.id = film.affiche_id
order by filmbyseance.seance_id, filmbyseance.ordre
        
        */


if (DB::table('Seance')->where('dateTimeSeance','2011-12-02 10:00:00')->where('adminNomLieuSeance','2011 - Namur - Liège - Tournai - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-02 10:00:00')->where('adminNomLieuSeance','2011 - Namur - Liège - Tournai - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Nobody\'sPerfect_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Nobody\'sPerfect_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/Nobody\'sPerfect_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-02 10:00:00' wich take place at '2011 - Namur - Liège - Tournai - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-02 14:00:00')->where('adminNomLieuSeance','2011 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-02 14:00:00')->where('adminNomLieuSeance','2011 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Nobody\'sPerfect_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Nobody\'sPerfect_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/Nobody\'sPerfect_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-02 14:00:00' wich take place at '2011 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-03 11:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-03 11:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L\'hommeQuiNeVoulaitPasêtreFou_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L\'hommeQuiNeVoulaitPasêtreFou_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/L\'hommeQuiNeVoulaitPasêtreFou_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-03 11:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-03 11:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-03 11:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Max,EntreCielEtTerre_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Max,EntreCielEtTerre_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/Max,EntreCielEtTerre_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-03 11:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-03 13:30:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-03 13:30:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L\'épreuveDesMots_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L\'épreuveDesMots_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/L\'épreuveDesMots_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-03 13:30:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-03 13:30:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-03 13:30:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AnneVliegt_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AnneVliegt_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/AnneVliegt_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-03 13:30:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-03 15:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-03 15:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BlindLoves_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BlindLoves_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/BlindLoves_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-03 15:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-03 15:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-03 15:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/J\'enCroisPasMesYeux_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/J\'enCroisPasMesYeux_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/J\'enCroisPasMesYeux_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-03 15:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-03 17:30:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-03 17:30:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DV8,TheCostOfLiving_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DV8,TheCostOfLiving_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/DV8,TheCostOfLiving_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-03 17:30:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-03 17:30:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-03 17:30:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Bewogen_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Bewogen_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/Bewogen_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-03 17:30:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-03 19:30:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-03 19:30:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/HastaLaVista_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/HastaLaVista_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/HastaLaVista_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-03 19:30:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-03 19:30:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-03 19:30:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PoeticShorts_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PoeticShorts_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/PoeticShorts_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-03 19:30:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-03 22:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-03 22:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Sexe,AmourEtHandicap_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Sexe,AmourEtHandicap_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/Sexe,AmourEtHandicap_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-03 22:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-03 22:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-03 22:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PoeticShorts_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PoeticShorts_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/PoeticShorts_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-03 22:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 10:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 10:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Marathon_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Marathon_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/Marathon_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 10:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 10:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 10:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Rapprochez-vous!_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Rapprochez-vous!_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/Rapprochez-vous!_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 10:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 13:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 13:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SourdsEtMalentendus_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SourdsEtMalentendus_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/SourdsEtMalentendus_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 13:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 13:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 13:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Bewogen_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Bewogen_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/Bewogen_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 13:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 15:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 15:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AutismeL\'espoir_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AutismeL\'espoir_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/AutismeL\'espoir_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 15:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 15:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 15:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PetitFrèreDeLaLune_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PetitFrèreDeLaLune_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/PetitFrèreDeLaLune_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 15:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Rapprochez-vous!_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Rapprochez-vous!_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/Rapprochez-vous!_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 17:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LeBaiser_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LeBaiser_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/LeBaiser_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 17:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/J\'enCroisPasMesYeux_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/J\'enCroisPasMesYeux_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/J\'enCroisPasMesYeux_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 17:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PoeticShorts_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PoeticShorts_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/PoeticShorts_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 17:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Bewogen_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Bewogen_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/Bewogen_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 17:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/WhiteSound_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/WhiteSound_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/WhiteSound_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 17:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PetitFrèreDeLaLune_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PetitFrèreDeLaLune_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/PetitFrèreDeLaLune_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 17:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Max,EntreCielEtTerre_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Max,EntreCielEtTerre_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 7]); 
   } else {
       echo "error : no film with image url 'films/Max,EntreCielEtTerre_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 17:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Luneville(CarteblancheAuFestivalDes"Pom\'sD\'or")_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Luneville(CarteblancheAuFestivalDes"Pom\'sD\'or")_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 8]); 
   } else {
       echo "error : no film with image url 'films/Luneville(CarteblancheAuFestivalDes\"Pom\'sD\'or\")_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 17:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 17:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AnneVliegt_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AnneVliegt_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 9]); 
   } else {
       echo "error : no film with image url 'films/AnneVliegt_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 17:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 20:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 20:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/Monica&David_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/Monica&David_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/Monica&David_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 20:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2011-12-04 20:00:00')->where('adminNomLieuSeance','2011 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2011-12-04 20:00:00')->where('adminNomLieuSeance','2011 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LeBaiser_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LeBaiser_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/LeBaiser_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2011-12-04 20:00:00' wich take place at '2011 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 20:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 20:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SCARLETROAD_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SCARLETROAD_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/SCARLETROAD_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 20:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 20:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 20:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/THEINTERVIEWER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 20:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LEDERNIERVENDREDIDUMOIS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LEDERNIERVENDREDIDUMOIS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/LEDERNIERVENDREDIDUMOIS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 10:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/THEBUTTERFLYCIRCUS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 10:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BRO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BRO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/BRO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 10:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ETPOURTANTJECOMMUNIQUELeGaragiste_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ETPOURTANTJECOMMUNIQUELeGaragiste_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/ETPOURTANTJECOMMUNIQUELeGaragiste_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 10:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AKVARIUM_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AKVARIUM_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/AKVARIUM_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 10:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/WALK_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/WALK_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/WALK_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 10:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 10:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/FORDORIAN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/FORDORIAN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/FORDORIAN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 10:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEPUNKSYNDROME_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEPUNKSYNDROME_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/THEPUNKSYNDROME_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/NOGOODBYES_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/NOGOODBYES_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/NOGOODBYES_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/THEINTERVIEWER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/THEINTERVIEWER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/THEINTERVIEWER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/THEINTERVIEWER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}




if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/THEBUTTERFLYCIRCUS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/THEBUTTERFLYCIRCUS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/THEBUTTERFLYCIRCUS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/THEBUTTERFLYCIRCUS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}




if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/JEVIENSDELOIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/JEVIENSDELOIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/JEVIENSDELOIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/JEVIENSDELOIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}




if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/DEAFMUGGER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/DEAFMUGGER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/DEAFMUGGER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/DEAFMUGGER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}




if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/ONEQUESTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/ONEQUESTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/ONEQUESTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/ONEQUESTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}




if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/L’ETRANGEBALADEDESARINA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/L’ETRANGEBALADEDESARINA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/L’ETRANGEBALADEDESARINA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/L’ETRANGEBALADEDESARINA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}




if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Woluwe')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SIXTEEN(NecessaryGames)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SIXTEEN(NecessaryGames)_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/SIXTEEN(NecessaryGames)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SIXTEEN(NecessaryGames)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SIXTEEN(NecessaryGames)_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/SIXTEEN(NecessaryGames)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SIXTEEN(NecessaryGames)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SIXTEEN(NecessaryGames)_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/SIXTEEN(NecessaryGames)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 10:00:00')->where('adminNomLieuSeance','2013 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SIXTEEN(NecessaryGames)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SIXTEEN(NecessaryGames)_200.jpg')->get()->first()->idFilm;
       echo "iFilm = $idFilm \n\ridSeance : $idSeance\n\r\n\r";
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/SIXTEEN(NecessaryGames)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 10:00:00' wich take place at '2013 - Bruxelles - Liège - Mons - Libramont''\n\r\n\r";
}




if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/THEINTERVIEWER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:00' wich take place at '2013 - Charleroi (Ciné le Parc)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/THEBUTTERFLYCIRCUS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:00' wich take place at '2013 - Charleroi (Ciné le Parc)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/JEVIENSDELOIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:00' wich take place at '2013 - Charleroi (Ciné le Parc)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/DEAFMUGGER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:00' wich take place at '2013 - Charleroi (Ciné le Parc)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/ONEQUESTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:00' wich take place at '2013 - Charleroi (Ciné le Parc)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/NOGOODBYES_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/NOGOODBYES_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/NOGOODBYES_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:00' wich take place at '2013 - Charleroi (Ciné le Parc)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/L’ETRANGEBALADEDESARINA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:00' wich take place at '2013 - Charleroi (Ciné le Parc)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:00')->where('adminNomLieuSeance','2013 - Charleroi (Ciné le Parc)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SIXTEEN(NecessaryGames)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SIXTEEN(NecessaryGames)_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 7]); 
   } else {
       echo "error : no film with image url 'films/SIXTEEN(NecessaryGames)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:00' wich take place at '2013 - Charleroi (Ciné le Parc)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:01')->where('adminNomLieuSeance','2013 - Bruxelles (Salle Fabry - WSP)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:01')->where('adminNomLieuSeance','2013 - Bruxelles (Salle Fabry - WSP)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AKVARIUM_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AKVARIUM_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/AKVARIUM_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:01' wich take place at '2013 - Bruxelles (Salle Fabry - WSP)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:01')->where('adminNomLieuSeance','2013 - Bruxelles (Salle Fabry - WSP)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:01')->where('adminNomLieuSeance','2013 - Bruxelles (Salle Fabry - WSP)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/DEAFMUGGER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:01' wich take place at '2013 - Bruxelles (Salle Fabry - WSP)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:01')->where('adminNomLieuSeance','2013 - Bruxelles (Salle Fabry - WSP)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:01')->where('adminNomLieuSeance','2013 - Bruxelles (Salle Fabry - WSP)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/HANDSSOLO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/HANDSSOLO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/HANDSSOLO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:01' wich take place at '2013 - Bruxelles (Salle Fabry - WSP)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:01')->where('adminNomLieuSeance','2013 - Bruxelles (Salle Fabry - WSP)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:01')->where('adminNomLieuSeance','2013 - Bruxelles (Salle Fabry - WSP)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DEAFRELAYATYOURSERVICE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DEAFRELAYATYOURSERVICE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/DEAFRELAYATYOURSERVICE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:01' wich take place at '2013 - Bruxelles (Salle Fabry - WSP)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:01')->where('adminNomLieuSeance','2013 - Bruxelles (Salle Fabry - WSP)')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-29 14:00:01')->where('adminNomLieuSeance','2013 - Bruxelles (Salle Fabry - WSP)')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEEND_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEEND_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/THEEND_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-29 14:00:01' wich take place at '2013 - Bruxelles (Salle Fabry - WSP)''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 15:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 15:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CORPSETAMES_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CORPSETAMES_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/CORPSETAMES_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 15:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 17:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 17:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AKVARIUM_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AKVARIUM_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/AKVARIUM_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 17:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 17:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 17:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/DEAFMUGGER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 17:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 17:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 17:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/HANDSSOLO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/HANDSSOLO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/HANDSSOLO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 17:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 17:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 17:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DEAFRELAYATYOURSERVICE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DEAFRELAYATYOURSERVICE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/DEAFRELAYATYOURSERVICE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 17:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 17:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 17:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEEND_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEEND_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/THEEND_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 17:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 19:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 19:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PLANETOFSNAIL_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PLANETOFSNAIL_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/PLANETOFSNAIL_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 19:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 22:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 22:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MONAMOUREUX_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MONAMOUREUX_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/MONAMOUREUX_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 22:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 22:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 22:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L’ASSISTANTE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L’ASSISTANTE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/L’ASSISTANTE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 22:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-11-30 22:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-11-30 22:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CORPSSOLIDAIRES_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CORPSSOLIDAIRES_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/CORPSSOLIDAIRES_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-11-30 22:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 10:15:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 10:15:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/GUIDEDOG_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/GUIDEDOG_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/GUIDEDOG_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 10:15:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 10:15:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 10:15:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LACOQUILLE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LACOQUILLE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/LACOQUILLE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 10:15:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 10:15:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 10:15:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CULDEBOUTEILLE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CULDEBOUTEILLE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/CULDEBOUTEILLE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 10:15:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 10:15:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 10:15:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ABOUTBROTHERS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ABOUTBROTHERS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/ABOUTBROTHERS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 10:15:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 10:15:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 10:15:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PETRASPOEM_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PETRASPOEM_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/PETRASPOEM_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 10:15:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 10:15:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 10:15:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MONPETITFREREDELALUNE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MONPETITFREREDELALUNE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/MONPETITFREREDELALUNE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 10:15:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 11:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 11:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/HANDICAPTOIMEME_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/HANDICAPTOIMEME_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/HANDICAPTOIMEME_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 11:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/JEVIENSDELOIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LIBREETHEUREUX_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LIBREETHEUREUX_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/LIBREETHEUREUX_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MAPEAUAIME_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MAPEAUAIME_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/MAPEAUAIME_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/L’ETRANGEBALADEDESARINA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/VERONIKA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/VERONIKA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/VERONIKA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PETRASPOEM_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PETRASPOEM_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/PETRASPOEM_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/ONEQUESTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEHUMMINGCHILD_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEHUMMINGCHILD_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 7]); 
   } else {
       echo "error : no film with image url 'films/THEHUMMINGCHILD_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 16:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 16:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/HANNAH_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/HANNAH_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/HANNAH_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 16:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 16:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 16:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/FEAST_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/FEAST_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/FEAST_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 16:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 16:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 16:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/GOODMORNINGMRFERGUSON_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/GOODMORNINGMRFERGUSON_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/GOODMORNINGMRFERGUSON_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 16:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 16:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 16:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THECOSTOFLIVING_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THECOSTOFLIVING_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/THECOSTOFLIVING_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 16:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 16:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 16:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MOTHS(NecessaryGames)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MOTHS(NecessaryGames)_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/MOTHS(NecessaryGames)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 16:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 16:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 16:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SIXTEEN(NecessaryGames)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SIXTEEN(NecessaryGames)_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/SIXTEEN(NecessaryGames)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 16:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CENDRILLONDUPIEDGAUCHE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CENDRILLONDUPIEDGAUCHE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/CENDRILLONDUPIEDGAUCHE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 18:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/THEINTERVIEWER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 18:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DEAFMUGGER_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/DEAFMUGGER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 18:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DEAFRELAYATYOURSERVICE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DEAFRELAYATYOURSERVICE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/DEAFRELAYATYOURSERVICE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 18:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BEAUTIFUL_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BEAUTIFUL_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/BEAUTIFUL_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 18:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ABOUTBROTHERS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ABOUTBROTHERS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/ABOUTBROTHERS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 18:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 18:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/RUGGERO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/RUGGERO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/RUGGERO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 18:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-01 20:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-01 20:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ALLESWIERDGUT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ALLESWIERDGUT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/ALLESWIERDGUT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-01 20:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-02 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-02 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CULDEBOUTEILLE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CULDEBOUTEILLE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/CULDEBOUTEILLE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-02 09:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-02 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-02 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MONPETITFREREDELALUNE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MONPETITFREREDELALUNE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/MONPETITFREREDELALUNE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-02 09:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-02 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-02 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LACOQUILLE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LACOQUILLE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/LACOQUILLE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-02 09:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-02 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-02 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/JEVIENSDELOIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-02 09:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-02 11:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-02 11:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L’AMERIQUEDESAUTRES_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L’AMERIQUEDESAUTRES_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/L’AMERIQUEDESAUTRES_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-02 11:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-02 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-02 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/HANDICAPTOIMEME_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/HANDICAPTOIMEME_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/HANDICAPTOIMEME_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-02 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-02 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-02 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/ONEQUESTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-02 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-02 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-02 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BEAUTIFUL_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BEAUTIFUL_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/BEAUTIFUL_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-02 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-02 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-02 13:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/THEBUTTERFLYCIRCUS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-02 13:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-02 17:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-02 17:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LAVIEABRASLECORPS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LAVIEABRASLECORPS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/LAVIEABRASLECORPS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-02 17:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-02 20:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-02 20:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MYWAYTOOLYMPIA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MYWAYTOOLYMPIA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/MYWAYTOOLYMPIA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-02 20:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-03 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-03 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/ONEQUESTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-03 09:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-03 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-03 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BEAUTIFUL_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BEAUTIFUL_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/BEAUTIFUL_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-03 09:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-03 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-03 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/JEVIENSDELOIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-03 09:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-03 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-03 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/VERONIKA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/VERONIKA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/VERONIKA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-03 09:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-03 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-03 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BRO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BRO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/BRO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-03 09:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-03 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-03 09:30:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/THEBUTTERFLYCIRCUS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-03 09:30:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-03 11:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-03 11:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LECONDEVIE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LECONDEVIE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/LECONDEVIE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-03 11:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-03 14:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-03 14:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MYWONDERFULLIFEASAVEGETABLE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MYWONDERFULLIFEASAVEGETABLE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/MYWONDERFULLIFEASAVEGETABLE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-03 14:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-03 14:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-03 14:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/ONEQUESTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-03 14:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2013-12-03 14:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2013-12-03 14:00:00')->where('adminNomLieuSeance','2013 - Namur - Maison de la Culture')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/JEVIENSDELOIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2013-12-03 14:00:00' wich take place at '2013 - Namur - Maison de la Culture''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 20:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 20:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/GUILLAUMEAUPAYSDESMERVEILLES_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/GUILLAUMEAUPAYSDESMERVEILLES_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/GUILLAUMEAUPAYSDESMERVEILLES_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 20:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 20:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 20:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 20:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 20:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 20:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/MANOAMANO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 20:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 20:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 20:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 20:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 16:15:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 16:15:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PUB,COMEtHandicap_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PUB,COMEtHandicap_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/PUB,COMEtHandicap_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 16:15:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ISIGN,ILIVE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ISIGN,ILIVE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/ISIGN,ILIVE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 14:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CROSSINGTHEDIVIDE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CROSSINGTHEDIVIDE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/CROSSINGTHEDIVIDE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 14:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/GLANCEUP_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/GLANCEUP_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/GLANCEUP_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 11:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 11:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 09:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DEFINEBYABILITY(DEFINIRPARLESCAPACITES)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DEFINEBYABILITY(DEFINIRPARLESCAPACITES)_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/DEFINEBYABILITY(DEFINIRPARLESCAPACITES)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 09:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MYSHOES_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MYSHOES_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/MYSHOES_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 09:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THECOMMUTE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THECOMMUTE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/THECOMMUTE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 09:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JUSTE2MINUTES_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JUSTE2MINUTES_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/JUSTE2MINUTES_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 09:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/MANOAMANO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 09:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/CARLY\'SCAFE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 09:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SENSORYOVERLOAD_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SENSORYOVERLOAD_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 7]); 
   } else {
       echo "error : no film with image url 'films/SENSORYOVERLOAD_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 09:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 8]); 
   } else {
       echo "error : no film with image url 'films/WORKMATE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 09:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AU-DELADESMOTS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AU-DELADESMOTS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 9]); 
   } else {
       echo "error : no film with image url 'films/AU-DELADESMOTS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 09:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-11 09:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SOWHATDOWEKNOWNOW_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SOWHATDOWEKNOWNOW_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 10]); 
   } else {
       echo "error : no film with image url 'films/SOWHATDOWEKNOWNOW_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-11 09:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 09:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/FIXINGLUKA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/FIXINGLUKA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/FIXINGLUKA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 09:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LAPETITECASSEROLED\'ANATOLE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LAPETITECASSEROLED\'ANATOLE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/LAPETITECASSEROLED\'ANATOLE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 09:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MACROPOLIS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MACROPOLIS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/MACROPOLIS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 09:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 09:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 11:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 11:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CELUIQUICHANTE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CELUIQUICHANTE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/CELUIQUICHANTE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 11:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 14:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/CARLY\'SCAFE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 14:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 14:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 14:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/HEREINSILENCE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/HEREINSILENCE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/HEREINSILENCE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 14:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SENSORYSENSIVITY_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SENSORYSENSIVITY_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/SENSORYSENSIVITY_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 14:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JESSE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JESSE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/JESSE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 14:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/THEINTERVIEWER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 16:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/ONEQUESTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 16:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/JEVIENSDELOIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 16:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/L’ETRANGEBALADEDESARINA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 16:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AKVARIUM_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AKVARIUM_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/AKVARIUM_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 16:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BRO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BRO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/BRO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 16:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 16:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/THEBUTTERFLYCIRCUS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 16:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 18:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 18:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/UNKNOWNBEAUTY_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/UNKNOWNBEAUTY_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/UNKNOWNBEAUTY_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 18:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 18:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 18:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ACOLDLAND_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ACOLDLAND_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/ACOLDLAND_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 18:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 18:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 18:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BLUEEYESBOY_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BLUEEYESBOY_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/BLUEEYESBOY_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 18:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 09:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 09:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/CARLY\'SCAFE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 09:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/HEREINSILENCE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/HEREINSILENCE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/HEREINSILENCE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 09:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/GLIMPSEFORHEAVEN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/GLIMPSEFORHEAVEN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/GLIMPSEFORHEAVEN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 09:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 09:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THECOMMUTE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THECOMMUTE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/THECOMMUTE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 09:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 11:15:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 11:15:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/WRETCHES&JABBERERS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/WRETCHES&JABBERERS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/WRETCHES&JABBERERS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 11:15:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 11:15:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 11:15:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/CARLY\'SCAFE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 11:15:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 11:15:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 11:15:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SENSORYSENSIVITY_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SENSORYSENSIVITY_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/SENSORYSENSIVITY_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 11:15:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 14:15:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 14:15:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/QUELQUECHOSEENPLUS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/QUELQUECHOSEENPLUS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/QUELQUECHOSEENPLUS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 14:15:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 14:15:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 14:15:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SENSORYOVERLOAD_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SENSORYOVERLOAD_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/SENSORYOVERLOAD_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 14:15:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 16:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 16:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PUB,COMEtHandicap_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PUB,COMEtHandicap_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/PUB,COMEtHandicap_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 16:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 18:15:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 18:15:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SKINANDBONES_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SKINANDBONES_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/SKINANDBONES_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 18:15:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LEPREMIERPAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LEPREMIERPAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/LEPREMIERPAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 20:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PRENDS-MOI_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PRENDS-MOI_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/PRENDS-MOI_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 20:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SCRUBBERS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SCRUBBERS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/SCRUBBERS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 20:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AUTISMINLOVE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AUTISMINLOVE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/AUTISMINLOVE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 20:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SINSINVALID_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SINSINVALID_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/SINSINVALID_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 20:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/KRUTCH_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/KRUTCH_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/KRUTCH_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 20:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-13 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ATLANTICAVENUE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ATLANTICAVENUE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/ATLANTICAVENUE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-13 20:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PUB,COMEtHandicap_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PUB,COMEtHandicap_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/PUB,COMEtHandicap_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 10:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BLINDDEVOTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BLINDDEVOTION_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/BLINDDEVOTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 11:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CHAMALLOW_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CHAMALLOW_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/CHAMALLOW_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 11:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LAFILLEAUXBOUEESROSES_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LAFILLEAUXBOUEESROSES_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/LAFILLEAUXBOUEESROSES_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 11:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SENSORYOVERLOAD_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SENSORYOVERLOAD_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/SENSORYOVERLOAD_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 11:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/IDON\'TCARE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/IDON\'TCARE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/IDON\'TCARE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 11:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JESSE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JESSE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/JESSE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 11:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JESUISJUSTELA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JESUISJUSTELA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/JESUISJUSTELA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 11:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LEBERCEAUIMPARFAIT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LEBERCEAUIMPARFAIT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 7]); 
   } else {
       echo "error : no film with image url 'films/LEBERCEAUIMPARFAIT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 11:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 13:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 13:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BLUEEYESBOY_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BLUEEYESBOY_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/BLUEEYESBOY_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 13:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 13:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 13:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MA-GULONGSAYAWNGBUHAY_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MA-GULONGSAYAWNGBUHAY_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/MA-GULONGSAYAWNGBUHAY_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 13:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 13:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 13:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L\'AMOREINCOMPRESSO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L\'AMOREINCOMPRESSO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/L\'AMOREINCOMPRESSO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 13:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 13:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 13:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/GLIMPSEFORHEAVEN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/GLIMPSEFORHEAVEN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/GLIMPSEFORHEAVEN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 13:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 13:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 13:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THECOMMUTE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THECOMMUTE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/THECOMMUTE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 13:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 13:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 13:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/WAITINGFORATRAIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/WAITINGFORATRAIN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/WAITINGFORATRAIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 13:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 15:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CROSSINGTHEDIVIDE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CROSSINGTHEDIVIDE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/CROSSINGTHEDIVIDE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 15:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LAPASSIONDEJUDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LAPASSIONDEJUDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/LAPASSIONDEJUDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 15:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AUTISMINLOVE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AUTISMINLOVE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/AUTISMINLOVE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 15:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PHANTOMPAIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PHANTOMPAIN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/PHANTOMPAIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 15:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/STEPHENWILTSHIRE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/STEPHENWILTSHIRE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/STEPHENWILTSHIRE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 15:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 15:45:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JAMEY\'SGEVECHT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JAMEY\'SGEVECHT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/JAMEY\'SGEVECHT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 15:45:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AU-DELADESMOTS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AU-DELADESMOTS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/AU-DELADESMOTS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 17:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/HEREINSILENCE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/HEREINSILENCE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/HEREINSILENCE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 17:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/MANOAMANO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 17:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BASTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BASTION_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/BASTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 17:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PERFECT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PERFECT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/PERFECT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 17:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/WORKMATE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 17:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEKISS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEKISS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/THEKISS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 17:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SOWHATDOWEKNOWNOW_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SOWHATDOWEKNOWNOW_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 7]); 
   } else {
       echo "error : no film with image url 'films/SOWHATDOWEKNOWNOW_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 17:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 17:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/SUPER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/SUPER_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 8]); 
   } else {
       echo "error : no film with image url 'films/SUPER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 17:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-14 20:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-14 20:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MARGARITAWITHASTRAW_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MARGARITAWITHASTRAW_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/MARGARITAWITHASTRAW_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-14 20:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-15 10:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ELVIAJEDEMARIA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ELVIAJEDEMARIA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/ELVIAJEDEMARIA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-15 10:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/FIXINGLUKA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/FIXINGLUKA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/FIXINGLUKA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-15 10:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LAPETITECASSEROLED\'ANATOLE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LAPETITECASSEROLED\'ANATOLE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/LAPETITECASSEROLED\'ANATOLE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-15 10:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MACROPOLIS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MACROPOLIS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/MACROPOLIS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-15 10:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-15 10:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MYSHOES_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MYSHOES_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/MYSHOES_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-15 10:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-15 10:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ILOVEGRILLEDCHEESE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ILOVEGRILLEDCHEESE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 7]); 
   } else {
       echo "error : no film with image url 'films/ILOVEGRILLEDCHEESE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-15 10:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-15 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-15 11:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/GABOR_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/GABOR_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/GABOR_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-15 11:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-15 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-15 14:00:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CHELLI(NEXTTOHER)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CHELLI(NEXTTOHER)_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/CHELLI(NEXTTOHER)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-15 14:00:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-15 16:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-15 16:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/PUB,COMEtHandicap_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/PUB,COMEtHandicap_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/PUB,COMEtHandicap_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-15 16:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MACROPOLIS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MACROPOLIS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/MACROPOLIS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LAPETITECASSEROLED\'ANATOLE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LAPETITECASSEROLED\'ANATOLE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/LAPETITECASSEROLED\'ANATOLE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/FIXINGLUKA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/FIXINGLUKA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/FIXINGLUKA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/HEREINSILENCE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/HEREINSILENCE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/HEREINSILENCE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/GLIMPSEFORHEAVEN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/GLIMPSEFORHEAVEN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/GLIMPSEFORHEAVEN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THECOMMUTE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THECOMMUTE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/THECOMMUTE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/CARLY\'SCAFE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 13:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 13:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 13:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 13:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 13:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 13:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 13:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 13:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/HEREINSILENCE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/HEREINSILENCE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/HEREINSILENCE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 13:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 13:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 13:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/GLIMPSEFORHEAVEN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/GLIMPSEFORHEAVEN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/GLIMPSEFORHEAVEN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 13:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 13:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 13:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THECOMMUTE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THECOMMUTE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/THECOMMUTE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 13:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 13:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 13:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/CARLY\'SCAFE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 13:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/CARLY\'SCAFE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LEPREMIERPAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LEPREMIERPAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/LEPREMIERPAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEKISS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEKISS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/THEKISS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 7]); 
   } else {
       echo "error : no film with image url 'films/WORKMATE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Bruxelles')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 8]); 
   } else {
       echo "error : no film with image url 'films/MANOAMANO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Bruxelles''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 12:00:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 12:00:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/CARLY\'SCAFE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 12:00:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 12:00:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 12:00:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LEPREMIERPAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LEPREMIERPAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/LEPREMIERPAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 12:00:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEKISS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEKISS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/THEKISS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 12:00:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 7]); 
   } else {
       echo "error : no film with image url 'films/WORKMATE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 12:00:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 12:00:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 8]); 
   } else {
       echo "error : no film with image url 'films/MANOAMANO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 12:00:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEINTERVIEWER_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/THEINTERVIEWER_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 14:00:00' wich take place at '2015 - Bruxelles.''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/ONEQUESTION_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/ONEQUESTION_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 14:00:00' wich take place at '2015 - Bruxelles.''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JEVIENSDELOIN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/JEVIENSDELOIN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 14:00:00' wich take place at '2015 - Bruxelles.''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/L’ETRANGEBALADEDESARINA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/L’ETRANGEBALADEDESARINA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 14:00:00' wich take place at '2015 - Bruxelles.''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AKVARIUM_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AKVARIUM_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/AKVARIUM_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 14:00:00' wich take place at '2015 - Bruxelles.''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BRO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BRO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/BRO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 14:00:00' wich take place at '2015 - Bruxelles.''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 14:00:00')->where('adminNomLieuSeance','2015 - Bruxelles.')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEBUTTERFLYCIRCUS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/THEBUTTERFLYCIRCUS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 14:00:00' wich take place at '2015 - Bruxelles.''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-12 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-12 20:30:00')->where('adminNomLieuSeance','2015 - Namur')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/JOSEPHSCOVANEC_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/JOSEPHSCOVANEC_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/JOSEPHSCOVANEC_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-12 20:30:00' wich take place at '2015 - Namur''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MACROPOLIS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MACROPOLIS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/MACROPOLIS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LAPETITECASSEROLED\'ANATOLE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LAPETITECASSEROLED\'ANATOLE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/LAPETITECASSEROLED\'ANATOLE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/FIXINGLUKA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/FIXINGLUKA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/FIXINGLUKA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Liège')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Liège')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Liège''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MACROPOLIS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MACROPOLIS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/MACROPOLIS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LAPETITECASSEROLED\'ANATOLE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LAPETITECASSEROLED\'ANATOLE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/LAPETITECASSEROLED\'ANATOLE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/FIXINGLUKA_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/FIXINGLUKA_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/FIXINGLUKA_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/HEREINSILENCE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/HEREINSILENCE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/HEREINSILENCE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/GLIMPSEFORHEAVEN_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/GLIMPSEFORHEAVEN_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/GLIMPSEFORHEAVEN_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THECOMMUTE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THECOMMUTE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/THECOMMUTE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 09:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/CARLY\'SCAFE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 09:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/CARLY\'SCAFE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LEPREMIERPAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LEPREMIERPAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/LEPREMIERPAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEKISS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEKISS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/THEKISS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 7]); 
   } else {
       echo "error : no film with image url 'films/WORKMATE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Charleroi')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 8]); 
   } else {
       echo "error : no film with image url 'films/MANOAMANO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Charleroi''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/CARLY\'SCAFE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LEPREMIERPAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LEPREMIERPAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/LEPREMIERPAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEKISS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEKISS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/THEKISS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 7]); 
   } else {
       echo "error : no film with image url 'films/WORKMATE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Mons')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 8]); 
   } else {
       echo "error : no film with image url 'films/MANOAMANO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Mons''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CUERDAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 0]); 
   } else {
       echo "error : no film with image url 'films/CUERDAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/DANSLESYEUXD\'UNENFANT_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 1]); 
   } else {
       echo "error : no film with image url 'films/DANSLESYEUXD\'UNENFANT_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/CARLY\'SCAFE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 2]); 
   } else {
       echo "error : no film with image url 'films/CARLY\'SCAFE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 3]); 
   } else {
       echo "error : no film with image url 'films/AGOODLIFETOO:ALONZOCLEMONS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/LEPREMIERPAS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/LEPREMIERPAS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 4]); 
   } else {
       echo "error : no film with image url 'films/LEPREMIERPAS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 5]); 
   } else {
       echo "error : no film with image url 'films/BECAUSEWHO\'SPERFECT(ProInfirmis)_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/THEKISS_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/THEKISS_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 6]); 
   } else {
       echo "error : no film with image url 'films/THEKISS_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/WORKMATE_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 7]); 
   } else {
       echo "error : no film with image url 'films/WORKMATE_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}

if (DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->count() > 0) {
   $idSeance = DB::table('Seance')->where('dateTimeSeance','2015-11-10 11:30:00')->where('adminNomLieuSeance','2015 - Libramont')->get()->first()->idSeance;
   if (DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->count() > 0) {
       $idFilm = DB::table('Film')->where('urlImageFilm','films/MANOAMANO_200.jpg')->get()->first()->idFilm;
       
       DB::table('FilmParSeance')
           ->insert([
               'idFilm' => $idFilm,
               'idSeance' => $idSeance,
                'ordreFilm' => 8]); 
   } else {
       echo "error : no film with image url 'films/MANOAMANO_200.jpg'\n\r\n\r";
   }
} else {
   echo "error : no seance at the date of '2015-11-10 11:30:00' wich take place at '2015 - Libramont''\n\r\n\r";
}


//select 
//CASE
//    WHEN CONCAT(YEAR(seance.date)," - ",seance.lieux) = "2013 - Bruxelles - Liège - Mons - Libramont" THEN
//concat("
//if (DB::table('Seance')->where('dateTimeSeance','",seance.date,"')->where('adminNomLieuSeance','2013 - Woluwe')->count() > 0) {
//    $idSeance = DB::table('Seance')->where('dateTimeSeance','",seance.date,"')->where('adminNomLieuSeance','2013 - Woluwe')->get()->first()->idSeance;
//    if (DB::table('Film')->where('urlImageFilm','",REPLACE(image.url,'\'','\\\''),"')->count() > 0) {
//        $idFilm = DB::table('Film')->where('urlImageFilm','",REPLACE(image.url,'\'','\\\''),"')->get()->first()->idFilm;
//        echo \"iFilm = $idFilm \\n\\ridSeance : $idSeance\\n\\r\\n\\r\";
//        DB::table('FilmParSeance')
//            ->insert([
//                'idFilm' => $idFilm,
//                'idSeance' => $idSeance,
//                 'ordreFilm' => ",filmbyseance.ordre,"]); 
//    } else {
//        echo \"error : no film with image url '",REPLACE(REPLACE(image.url,'\'','\\\''),'"','\\"'),"'\\n\\r\\n\\r\";
//    }
//} else {
//    echo \"error : no seance at the date of '",seance.date,"' wich take place at '",YEAR(seance.date)," - ",REPLACE(seance.lieux, '\'', '\\\''),"''\\n\\r\\n\\r\";
//}
//
//if (DB::table('Seance')->where('dateTimeSeance','",seance.date,"')->where('adminNomLieuSeance','2013 - Liège')->count() > 0) {
//    $idSeance = DB::table('Seance')->where('dateTimeSeance','",seance.date,"')->where('adminNomLieuSeance','2013 - Liège')->get()->first()->idSeance;
//    if (DB::table('Film')->where('urlImageFilm','",REPLACE(image.url,'\'','\\\''),"')->count() > 0) {
//        $idFilm = DB::table('Film')->where('urlImageFilm','",REPLACE(image.url,'\'','\\\''),"')->get()->first()->idFilm;
//        echo \"iFilm = $idFilm \\n\\ridSeance : $idSeance\\n\\r\\n\\r\";
//        DB::table('FilmParSeance')
//            ->insert([
//                'idFilm' => $idFilm,
//                'idSeance' => $idSeance,
//                 'ordreFilm' => ",filmbyseance.ordre,"]); 
//    } else {
//        echo \"error : no film with image url '",REPLACE(REPLACE(image.url,'\'','\\\''),'"','\\"'),"'\\n\\r\\n\\r\";
//    }
//} else {
//    echo \"error : no seance at the date of '",seance.date,"' wich take place at '",YEAR(seance.date)," - ",REPLACE(seance.lieux, '\'', '\\\''),"''\\n\\r\\n\\r\";
//}
//
//if (DB::table('Seance')->where('dateTimeSeance','",seance.date,"')->where('adminNomLieuSeance','2013 - Libramont')->count() > 0) {
//    $idSeance = DB::table('Seance')->where('dateTimeSeance','",seance.date,"')->where('adminNomLieuSeance','2013 - Libramont')->get()->first()->idSeance;
//    if (DB::table('Film')->where('urlImageFilm','",REPLACE(image.url,'\'','\\\''),"')->count() > 0) {
//        $idFilm = DB::table('Film')->where('urlImageFilm','",REPLACE(image.url,'\'','\\\''),"')->get()->first()->idFilm;
//        echo \"iFilm = $idFilm \\n\\ridSeance : $idSeance\\n\\r\\n\\r\";
//        DB::table('FilmParSeance')
//            ->insert([
//                'idFilm' => $idFilm,
//                'idSeance' => $idSeance,
//                 'ordreFilm' => ",filmbyseance.ordre,"]); 
//    } else {
//        echo \"error : no film with image url '",REPLACE(REPLACE(image.url,'\'','\\\''),'"','\\"'),"'\\n\\r\\n\\r\";
//    }
//} else {
//    echo \"error : no seance at the date of '",seance.date,"' wich take place at '",YEAR(seance.date)," - ",REPLACE(seance.lieux, '\'', '\\\''),"''\\n\\r\\n\\r\";
//}
//
//if (DB::table('Seance')->where('dateTimeSeance','",seance.date,"')->where('adminNomLieuSeance','2013 - Mons')->count() > 0) {
//    $idSeance = DB::table('Seance')->where('dateTimeSeance','",seance.date,"')->where('adminNomLieuSeance','2013 - Mons')->get()->first()->idSeance;
//    if (DB::table('Film')->where('urlImageFilm','",REPLACE(image.url,'\'','\\\''),"')->count() > 0) {
//        $idFilm = DB::table('Film')->where('urlImageFilm','",REPLACE(image.url,'\'','\\\''),"')->get()->first()->idFilm;
//        echo \"iFilm = $idFilm \\n\\ridSeance : $idSeance\\n\\r\\n\\r\";
//        DB::table('FilmParSeance')
//            ->insert([
//                'idFilm' => $idFilm,
//                'idSeance' => $idSeance,
//                 'ordreFilm' => ",filmbyseance.ordre,"]); 
//    } else {
//        echo \"error : no film with image url '",REPLACE(REPLACE(image.url,'\'','\\\''),'"','\\"'),"'\\n\\r\\n\\r\";
//    }
//} else {
//    echo \"error : no seance at the date of '",seance.date,"' wich take place at '",YEAR(seance.date)," - ",REPLACE(seance.lieux, '\'', '\\\''),"''\\n\\r\\n\\r\";
//}
//
//
//
//")
//    ELSE 
//concat("
//if (DB::table('Seance')->where('dateTimeSeance','",seance.date,"')->where('adminNomLieuSeance','",YEAR(seance.date)," - ",REPLACE(seance.lieux, '\'', '\\\''),"')->count() > 0) {
//    $idSeance = DB::table('Seance')->where('dateTimeSeance','",seance.date,"')->where('adminNomLieuSeance','",YEAR(seance.date)," - ",REPLACE(seance.lieux, '\'', '\\\''),"')->get()->first()->idSeance;
//    if (DB::table('Film')->where('urlImageFilm','",REPLACE(image.url,'\'','\\\''),"')->count() > 0) {
//        $idFilm = DB::table('Film')->where('urlImageFilm','",REPLACE(image.url,'\'','\\\''),"')->get()->first()->idFilm;
//        
//        DB::table('FilmParSeance')
//            ->insert([
//                'idFilm' => $idFilm,
//                'idSeance' => $idSeance,
//                 'ordreFilm' => ",filmbyseance.ordre,"]); 
//    } else {
//        echo \"error : no film with image url '",REPLACE(REPLACE(image.url,'\'','\\\''),'"','\\"'),"'\\n\\r\\n\\r\";
//    }
//} else {
//    echo \"error : no seance at the date of '",seance.date,"' wich take place at '",YEAR(seance.date)," - ",REPLACE(seance.lieux, '\'', '\\\''),"''\\n\\r\\n\\r\";
//}")
//    END
//
//from filmbyseance, film, seance, image 
//where film.id = filmbyseance.film_id 
//	and filmbyseance.seance_id = seance.id 
//    and image.id = film.affiche_id
//order by filmbyseance.seance_id, filmbyseance.ordre
             
             
        
    }
}
